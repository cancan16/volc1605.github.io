<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[spring整合httpclient]]></title>
      <url>https://volc1605.github.io/2017/06/02/spring%E6%95%B4%E5%90%88httpclient/</url>
      <content type="html"><![CDATA[<h3 id="1-spring整合httpclient"><a href="#1-spring整合httpclient" class="headerlink" title="1 spring整合httpclient"></a>1 spring整合httpclient</h3><a id="more"></a>
<h4 id="1-1-导入依赖"><a href="#1-1-导入依赖" class="headerlink" title="1.1 导入依赖"></a>1.1 导入依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- httpclient --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.httpcomponents<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>httpclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="1-2-httpclient配置文件"><a href="#1-2-httpclient配置文件" class="headerlink" title="1.2 httpclient配置文件"></a>1.2 httpclient配置文件</h4><h5 id="1-2-1-httpclient-properties属性值配置文件"><a href="#1-2-1-httpclient-properties属性值配置文件" class="headerlink" title="1.2.1 httpclient.properties属性值配置文件"></a>1.2.1 httpclient.properties属性值配置文件</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">http.maxTotal=200</div><div class="line">http.defaultMaxPerRoute=50</div><div class="line">http.connectTimeout=1000</div><div class="line">http.connectionRequestTimeout=500</div><div class="line">http.socketTimeout=1000</div><div class="line">http.staleConnectionCheckEnabled=true</div></pre></td></tr></table></figure>
<h5 id="1-2-2-applicationContext-xml配置加载配置文件，spring配置文件中就可以使用-来获取httpclient-properties属性值"><a href="#1-2-2-applicationContext-xml配置加载配置文件，spring配置文件中就可以使用-来获取httpclient-properties属性值" class="headerlink" title="1.2.2 applicationContext.xml配置加载配置文件，spring配置文件中就可以使用${}来获取httpclient.properties属性值"></a>1.2.2 applicationContext.xml配置加载配置文件，spring配置文件中就可以使用${}来获取httpclient.properties属性值</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></div><div class="line">	<span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span> <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></div><div class="line">	<span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span> <span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span></div><div class="line">	<span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></div><div class="line">	<span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd</span></div><div class="line">	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd</div><div class="line">	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd</div><div class="line">	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd"&gt;</div><div class="line"></div><div class="line">	<span class="comment">&lt;!-- 使用spring自带的占位符替换功能 --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">bean</span></span></div><div class="line">		<span class="attr">class</span>=<span class="string">"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"</span>&gt;</div><div class="line">		<span class="comment">&lt;!-- 允许JVM参数覆盖 --&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"systemPropertiesModeName"</span> <span class="attr">value</span>=<span class="string">"SYSTEM_PROPERTIES_MODE_OVERRIDE"</span> /&gt;</span></div><div class="line">		<span class="comment">&lt;!-- 忽略没有找到的资源文件 --&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"ignoreResourceNotFound"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></div><div class="line">		<span class="comment">&lt;!-- 配置资源文件 --&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"locations"</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">list</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">value</span>&gt;</span>classpath:env.properties<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">value</span>&gt;</span>classpath:httpclient.properties<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">value</span>&gt;</span>classpath:redis.properties<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">value</span>&gt;</span>classpath:rabbitmq.properties<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">list</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line">	<span class="comment">&lt;!-- 扫描包 --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.taotao"</span>/&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></div></pre></td></tr></table></figure>
<h5 id="1-2-3-applicationContext-httpclient-xml"><a href="#1-2-3-applicationContext-httpclient-xml" class="headerlink" title="1.2.3 applicationContext-httpclient.xml"></a>1.2.3 applicationContext-httpclient.xml</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></div><div class="line">	<span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span> <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></div><div class="line">	<span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span> <span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span></div><div class="line">	<span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></div><div class="line">	<span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd</span></div><div class="line">	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd</div><div class="line">	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd</div><div class="line">	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd"&gt;</div><div class="line"></div><div class="line">	<span class="comment">&lt;!-- 定义http链接管理器 --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"httpClientConnectionManager"</span></span></div><div class="line">		<span class="attr">class</span>=<span class="string">"org.apache.http.impl.conn.PoolingHttpClientConnectionManager"</span>&gt;</div><div class="line">		<span class="comment">&lt;!-- 值写到配置文件中 --&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxTotal"</span> <span class="attr">value</span>=<span class="string">"$&#123;http.maxTotal&#125;"</span> /&gt;</span><span class="comment">&lt;!-- 最大连接数,主机链接量 --&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"defaultMaxPerRoute"</span> <span class="attr">value</span>=<span class="string">"$&#123;http.defaultMaxPerRoute&#125;"</span> /&gt;</span></div><div class="line">		<span class="comment">&lt;!-- 每个主机的最大并发数 --&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line">	<span class="comment">&lt;!-- 定义httpclient构建器 --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"httpClientBuilder"</span> <span class="attr">class</span>=<span class="string">"org.apache.http.impl.client.HttpClientBuilder"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"connectionManager"</span> <span class="attr">ref</span>=<span class="string">"httpClientConnectionManager"</span> /&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line">	<span class="comment">&lt;!-- 定义httpclient对象 --&gt;</span></div><div class="line">	<span class="comment">&lt;!-- 指定通过httpClientBuilder对象的build方法获取到httpclient对象, scope允许多例创建不同的httpclient对象 --&gt;</span></div><div class="line">	<span class="comment">&lt;!-- 该对象是多例的 --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"closeableHttpClient"</span> <span class="attr">class</span>=<span class="string">"org.apache.http.impl.client.CloseableHttpClient"</span></span></div><div class="line">		<span class="attr">factory-bean</span>=<span class="string">"httpClientBuilder"</span> <span class="attr">factory-method</span>=<span class="string">"build"</span> <span class="attr">scope</span>=<span class="string">"prototype"</span> /&gt;</div><div class="line">	<span class="comment">&lt;!-- 请求参数的构建器 --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"requestConfigBuilder"</span> <span class="attr">class</span>=<span class="string">"org.apache.http.client.config.RequestConfig.Builder"</span>&gt;</span></div><div class="line">		<span class="comment">&lt;!-- 建立连接的最长时间 --&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"connectTimeout"</span> <span class="attr">value</span>=<span class="string">"$&#123;http.connectTimeout&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">		<span class="comment">&lt;!-- 从连接池获取到连接的最长时间 --&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"connectionRequestTimeout"</span> <span class="attr">value</span>=<span class="string">"$&#123;http.connectionRequestTimeout&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">		<span class="comment">&lt;!-- 数据传输的最长时间 --&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"socketTimeout"</span> <span class="attr">value</span>=<span class="string">"$&#123;http.socketTimeout&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">		<span class="comment">&lt;!-- 请求连接时测试连接是否可用 --&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"staleConnectionCheckEnabled"</span> <span class="attr">value</span>=<span class="string">"$&#123;http.staleConnectionCheckEnabled&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line">	<span class="comment">&lt;!-- 定义请求参数对象，是单利对象 --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"requestConfig"</span> <span class="attr">class</span>=<span class="string">"org.apache.http.client.config.RequestConfig"</span></span></div><div class="line">		<span class="attr">factory-bean</span>=<span class="string">"requestConfigBuilder"</span> <span class="attr">factory-method</span>=<span class="string">"build"</span> /&gt;</div><div class="line">	<span class="comment">&lt;!-- 定期关闭无效的连接 --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"idleConnectionEvictor"</span> <span class="attr">class</span>=<span class="string">"com.taotao.common.httpclient.IdleConnectionEvictor"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">"0"</span> <span class="attr">ref</span>=<span class="string">"httpClientConnectionManager"</span> /&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></div></pre></td></tr></table></figure>
<h5 id="1-2-4-定时关闭httpclient对象无效链接"><a href="#1-2-4-定时关闭httpclient对象无效链接" class="headerlink" title="1.2.4 定时关闭httpclient对象无效链接"></a>1.2.4 定时关闭httpclient对象无效链接</h5><p>IdleConnectionEvictor.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">import</span> org.apache.http.conn.HttpClientConnectionManager;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * <span class="doctag">@ClassName</span> IdleConnectionEvictor</div><div class="line"> * <span class="doctag">@Author</span> volc</div><div class="line"> * <span class="doctag">@Description</span> 定期关闭绑定线程的httpclient对象</div><div class="line"> * <span class="doctag">@Date</span> 2017年2月27日 下午8:20:22</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IdleConnectionEvictor</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> HttpClientConnectionManager connMgr;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">volatile</span> <span class="keyword">boolean</span> shutdown;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">IdleConnectionEvictor</span><span class="params">(HttpClientConnectionManager connMgr)</span> </span>&#123;</div><div class="line">	<span class="keyword">this</span>.connMgr = connMgr;</div><div class="line">		<span class="comment">// 加载applicationContext-httpclient.xml，启动当前线程</span></div><div class="line">		<span class="keyword">this</span>.start();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">try</span> &#123;</div><div class="line">	    <span class="keyword">while</span> (!shutdown) &#123;</div><div class="line">		<span class="keyword">synchronized</span> (<span class="keyword">this</span>) &#123;</div><div class="line">		    wait(<span class="number">5000</span>);</div><div class="line">		    <span class="comment">// 关闭失效的连接</span></div><div class="line">		    connMgr.closeExpiredConnections();</div><div class="line">		&#125;</div><div class="line">	    &#125;</div><div class="line">	&#125; <span class="keyword">catch</span> (InterruptedException ex) &#123;</div><div class="line">	    <span class="comment">// 结束</span></div><div class="line">	&#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">shutdown</span><span class="params">()</span> </span>&#123;</div><div class="line">	shutdown = <span class="keyword">true</span>;</div><div class="line">	<span class="keyword">synchronized</span> (<span class="keyword">this</span>) &#123;</div><div class="line">	    notifyAll();</div><div class="line">	&#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h5 id="1-2-4-请求bean"><a href="#1-2-4-请求bean" class="headerlink" title="1.2.4 请求bean"></a>1.2.4 请求bean</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.taotao.common.httpclient;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * <span class="doctag">@ClassName</span> HttpResult</div><div class="line"> * <span class="doctag">@Author</span> volc</div><div class="line"> * <span class="doctag">@Description</span> http请求结果</div><div class="line"> * <span class="doctag">@Date</span> 2017年2月25日 上午10:29:07</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpResult</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> Integer code; <span class="comment">// 状态码</span></div><div class="line">    <span class="keyword">private</span> String data; <span class="comment">// 返回数据</span></div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">return</span> <span class="string">"HttpResult [code="</span> + code + <span class="string">", data="</span> + data + <span class="string">"]"</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">HttpResult</span><span class="params">(Integer code, String data)</span> </span>&#123;</div><div class="line">	<span class="keyword">this</span>.code = code;</div><div class="line">	<span class="keyword">this</span>.data = data;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">HttpResult</span><span class="params">()</span> </span>&#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getCode</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">return</span> code;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCode</span><span class="params">(Integer code)</span> </span>&#123;</div><div class="line">	<span class="keyword">this</span>.code = code;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getData</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">return</span> data;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setData</span><span class="params">(String data)</span> </span>&#123;</div><div class="line">	<span class="keyword">this</span>.data = data;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="1-2-5-封装请求通用方法"><a href="#1-2-5-封装请求通用方法" class="headerlink" title="1.2.5 封装请求通用方法"></a>1.2.5 封装请求通用方法</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> java.net.URISyntaxException;</div><div class="line"><span class="keyword">import</span> java.util.ArrayList;</div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"><span class="keyword">import</span> java.util.Map;</div><div class="line"><span class="keyword">import</span> org.apache.http.NameValuePair;</div><div class="line"><span class="keyword">import</span> org.apache.http.client.ClientProtocolException;</div><div class="line"><span class="keyword">import</span> org.apache.http.client.config.RequestConfig;</div><div class="line"><span class="keyword">import</span> org.apache.http.client.entity.UrlEncodedFormEntity;</div><div class="line"><span class="keyword">import</span> org.apache.http.client.methods.CloseableHttpResponse;</div><div class="line"><span class="keyword">import</span> org.apache.http.client.methods.HttpGet;</div><div class="line"><span class="keyword">import</span> org.apache.http.client.methods.HttpPost;</div><div class="line"><span class="keyword">import</span> org.apache.http.client.utils.URIBuilder;</div><div class="line"><span class="keyword">import</span> org.apache.http.entity.ContentType;</div><div class="line"><span class="keyword">import</span> org.apache.http.entity.StringEntity;</div><div class="line"><span class="keyword">import</span> org.apache.http.impl.client.CloseableHttpClient;</div><div class="line"><span class="keyword">import</span> org.apache.http.message.BasicNameValuePair;</div><div class="line"><span class="keyword">import</span> org.apache.http.util.EntityUtils;</div><div class="line"><span class="keyword">import</span> org.springframework.beans.BeansException;</div><div class="line"><span class="keyword">import</span> org.springframework.beans.factory.BeanFactory;</div><div class="line"><span class="keyword">import</span> org.springframework.beans.factory.BeanFactoryAware;</div><div class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</div><div class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</div><div class="line"><span class="keyword">import</span> com.taotao.common.httpclient.HttpResult;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * <span class="doctag">@ClassName</span> ApiService</div><div class="line"> * <span class="doctag">@Author</span> volc</div><div class="line"> * <span class="doctag">@Description</span> 封装通用的请求方式</div><div class="line"> * <span class="doctag">@Date</span> 2017年2月25日 上午12:53:33</div><div class="line"> */</div><div class="line"><span class="meta">@Service</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ApiService</span> <span class="keyword">implements</span> <span class="title">BeanFactoryAware</span> </span>&#123;</div><div class="line">    <span class="comment">// 注入httpclient对象</span></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * httpclient应该是多例的，但是在这里已经注入了，调用service时就是单例，应该修改为多例模式</div><div class="line">     */</div><div class="line">    <span class="comment">// @Autowired</span></div><div class="line">    <span class="comment">// private CloseableHttpClient httpclient;</span></div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@Fields</span> beanFactory</div><div class="line">     * bean工厂可以解决httpclient多例的问题</div><div class="line">     */</div><div class="line">    <span class="keyword">private</span> BeanFactory beanFactory;</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span>(required = <span class="keyword">false</span>)</div><div class="line">    <span class="keyword">private</span> RequestConfig requestConfig;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@MethodName</span> doGet </div><div class="line">     * <span class="doctag">@Author</span> volc</div><div class="line">     * <span class="doctag">@Description</span> 不带参数的get请求， 执行GET请求，响应200返回内容，如果响应404返回null</div><div class="line">     * <span class="doctag">@Date</span> 2017年2月25日 上午12:54:48</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">doGet</span><span class="params">(String url)</span> <span class="keyword">throws</span> ClientProtocolException, IOException </span>&#123;</div><div class="line">	<span class="comment">// 创建http GET请求</span></div><div class="line">	HttpGet httpGet = <span class="keyword">new</span> HttpGet(url);</div><div class="line">	httpGet.setConfig(requestConfig);</div><div class="line">	CloseableHttpResponse response = <span class="keyword">null</span>;</div><div class="line">	<span class="keyword">try</span> &#123;</div><div class="line">	    <span class="comment">// 执行请求</span></div><div class="line">	    response = getHttpClient().execute(httpGet);</div><div class="line">	    <span class="comment">// 判断返回状态是否为200</span></div><div class="line">	    <span class="keyword">if</span> (response.getStatusLine().getStatusCode() == <span class="number">200</span>) &#123;</div><div class="line">		<span class="keyword">return</span> EntityUtils.toString(response.getEntity(), <span class="string">"UTF-8"</span>);</div><div class="line">	    &#125;</div><div class="line">	&#125; <span class="keyword">finally</span> &#123;</div><div class="line">	    <span class="keyword">if</span> (response != <span class="keyword">null</span>) &#123;</div><div class="line">		response.close();</div><div class="line">	    &#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@MethodName</span> doGet </div><div class="line">     * <span class="doctag">@Author</span> volc</div><div class="line">     * <span class="doctag">@Description</span> 带参数的GET请求</div><div class="line">     * <span class="doctag">@Date</span> 2017年2月25日 上午12:55:13</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">doGet</span><span class="params">(String url, Map&lt;String, String&gt; params)</span> <span class="keyword">throws</span> ClientProtocolException, IOException, URISyntaxException </span>&#123;</div><div class="line">	<span class="comment">// 创建构建uri对象</span></div><div class="line">	URIBuilder uriBuilder = <span class="keyword">new</span> URIBuilder(url);</div><div class="line">	<span class="keyword">for</span> (Map.Entry&lt;String, String&gt; entry : params.entrySet()) &#123;</div><div class="line">	    uriBuilder.setParameter(entry.getKey(), entry.getValue());</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> doGet(uriBuilder.build().toString());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@MethodName</span> doPost </div><div class="line">     * <span class="doctag">@Author</span> volc</div><div class="line">     * <span class="doctag">@Description</span> 执行post请求 封装通用的post请求(带参和不带参)</div><div class="line">     * <span class="doctag">@Date</span> 2017年2月25日 上午10:40:09</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> HttpResult <span class="title">doPost</span><span class="params">(String url, Map&lt;String, String&gt; params)</span> <span class="keyword">throws</span> ClientProtocolException, IOException, URISyntaxException </span>&#123;</div><div class="line">	<span class="comment">// 创建http POST请求</span></div><div class="line">	HttpPost httpPost = <span class="keyword">new</span> HttpPost(url);</div><div class="line">	httpPost.setConfig(requestConfig);</div><div class="line">	<span class="keyword">if</span> (<span class="keyword">null</span> != params) &#123;</div><div class="line">	    <span class="comment">// 设置1个post参数</span></div><div class="line">	    List&lt;NameValuePair&gt; parameters = <span class="keyword">new</span> ArrayList&lt;NameValuePair&gt;(<span class="number">0</span>);</div><div class="line">	    <span class="keyword">for</span> (Map.Entry&lt;String, String&gt; entry : params.entrySet()) &#123;</div><div class="line">		parameters.add(<span class="keyword">new</span> BasicNameValuePair(entry.getKey(), entry.getValue()));</div><div class="line">	    &#125;</div><div class="line">	    <span class="comment">// 构造一个form表单式的实体</span></div><div class="line">	    UrlEncodedFormEntity formEntity = <span class="keyword">new</span> UrlEncodedFormEntity(parameters, <span class="string">"UTF-8"</span>);</div><div class="line">	    <span class="comment">// 将请求实体设置到httpPost对象中</span></div><div class="line">	    httpPost.setEntity(formEntity);</div><div class="line">	&#125;</div><div class="line">	CloseableHttpResponse response = <span class="keyword">null</span>;</div><div class="line">	<span class="keyword">try</span> &#123;</div><div class="line">	    <span class="comment">// 执行请求</span></div><div class="line">	    response = getHttpClient().execute(httpPost);</div><div class="line">	    <span class="comment">// 无论什么情况都返回</span></div><div class="line">	    <span class="keyword">return</span> <span class="keyword">new</span> HttpResult(response.getStatusLine().getStatusCode(), EntityUtils.toString(response.getEntity(), <span class="string">"UTF-8"</span>));</div><div class="line">	&#125; <span class="keyword">finally</span> &#123;</div><div class="line">	    <span class="keyword">if</span> (response != <span class="keyword">null</span>) &#123;</div><div class="line">		response.close();</div><div class="line">	    &#125;</div><div class="line">	&#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@MethodName</span> getHttpClient </div><div class="line">     * <span class="doctag">@Author</span> volc</div><div class="line">     * <span class="doctag">@Description</span> 封装获取多例的httpclient，因为spring注入的时httpclient为多例，每次获取都是多例的</div><div class="line">     * <span class="doctag">@Date</span> 2017年2月25日 上午10:52:21</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> CloseableHttpClient <span class="title">getHttpClient</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">return</span> <span class="keyword">this</span>.beanFactory.getBean(CloseableHttpClient.class);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@Title</span> setBeanFactory</div><div class="line">     * <span class="doctag">@Description</span> 设置spring注入的bean为多例,spring初始化时会调用这个覆盖的方法,(设置beanFactory对象)</div><div class="line">     * <span class="doctag">@param</span> beanFactory</div><div class="line">     * <span class="doctag">@throws</span> BeansException</div><div class="line">     * <span class="doctag">@throws</span> </div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBeanFactory</span><span class="params">(BeanFactory beanFactory)</span> <span class="keyword">throws</span> BeansException </span>&#123;</div><div class="line">	<span class="keyword">this</span>.beanFactory = beanFactory;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@MethodName</span> doPostJson</div><div class="line">     * <span class="doctag">@Author</span> volc</div><div class="line">     * <span class="doctag">@Description</span> 请求类型：APPLICATION_JSON，方式：post</div><div class="line">     * <span class="doctag">@Date</span> 2017年3月1日 下午12:38:31</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> HttpResult <span class="title">doPostJson</span><span class="params">(String url, String json)</span> <span class="keyword">throws</span> ClientProtocolException, IOException, URISyntaxException </span>&#123;</div><div class="line">	<span class="comment">// 创建http POST请求</span></div><div class="line">	HttpPost httpPost = <span class="keyword">new</span> HttpPost(url);</div><div class="line">	httpPost.setConfig(requestConfig);</div><div class="line">	<span class="keyword">if</span> (<span class="keyword">null</span> != json) &#123;</div><div class="line">	    <span class="comment">// 构造一个form表单式的实体</span></div><div class="line">	    StringEntity stringEntity = <span class="keyword">new</span> StringEntity(json, ContentType.APPLICATION_JSON);</div><div class="line">	    <span class="comment">// 将请求实体设置到httpPost对象中</span></div><div class="line">	    httpPost.setEntity(stringEntity);</div><div class="line">	&#125;</div><div class="line">	CloseableHttpResponse response = <span class="keyword">null</span>;</div><div class="line">	<span class="keyword">try</span> &#123;</div><div class="line">	    <span class="comment">// 执行请求</span></div><div class="line">	    response = getHttpClient().execute(httpPost);</div><div class="line">	    <span class="comment">// 无论什么情况都返回</span></div><div class="line">	    <span class="keyword">return</span> <span class="keyword">new</span> HttpResult(response.getStatusLine().getStatusCode(), EntityUtils.toString(response.getEntity(), <span class="string">"UTF-8"</span>));</div><div class="line">	&#125; <span class="keyword">finally</span> &#123;</div><div class="line">	    <span class="keyword">if</span> (response != <span class="keyword">null</span>) &#123;</div><div class="line">		response.close();</div><div class="line">	    &#125;</div><div class="line">	&#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>总结：单例对象(ApiService)中使用多例对象(CloseableHttpClient)通用接解决方法<br>    ApiService实现BeanFactoryAware接口</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[请求跨域问题]]></title>
      <url>https://volc1605.github.io/2017/06/01/%E8%AF%B7%E6%B1%82%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<h3 id="1-解决跨域问题"><a href="#1-解决跨域问题" class="headerlink" title="1 解决跨域问题"></a>1 解决跨域问题</h3><a id="more"></a>
<h4 id="1-1-问题产生原因"><a href="#1-1-问题产生原因" class="headerlink" title="1.1 问题产生原因"></a>1.1 问题产生原因</h4><p>浏览器对ajax请求的限制，不允许跨域请求资源。<br><a href="http://www.a.com" target="_blank" rel="external">http://www.a.com</a> -&gt;  <a href="http://www.b.com" target="_blank" rel="external">http://www.b.com</a>       是跨域<br><a href="http://www.a.com" target="_blank" rel="external">http://www.a.com</a> -&gt;  <a href="http://www.a.com:8080" target="_blank" rel="external">http://www.a.com:8080</a>  是跨域<br><a href="http://a.a.com" target="_blank" rel="external">http://a.a.com</a>   -&gt;<a href="http://b.a.com" target="_blank" rel="external">http://b.a.com</a>          是跨域<br><a href="http://www.a.com" target="_blank" rel="external">http://www.a.com</a> -&gt; <a href="http://www.a.com/api" target="_blank" rel="external">http://www.a.com/api</a>    不是</p>
<p>总结：<br>不同的域名或不同的端口都是跨域请求。<br><img src="https://volc1605.github.io/images/请求跨域问题/kuayu.png" alt="kuayu"></p>
<h4 id="1-2-测试"><a href="#1-2-测试" class="headerlink" title="1.2 测试"></a>1.2 测试</h4><p>json.jsp资源<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&lt;%@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></div><div class="line">	pageEncoding=<span class="string">"UTF-8"</span>%&gt;</div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span></div><div class="line">    /* <span class="attr">String</span> <span class="attr">callback</span> = <span class="string">request.getParameter(</span>"<span class="attr">callback</span>");</div><div class="line">    <span class="attr">if</span> (<span class="attr">null</span> != <span class="string">callback)</span> &#123;</div><div class="line">    	<span class="attr">out.print</span>(<span class="attr">callback</span> + "(&#123;\"<span class="attr">abc</span>\"<span class="attr">:123</span>&#125;)");</div><div class="line">    &#125; <span class="attr">else</span> &#123;</div><div class="line">    	<span class="attr">out.print</span>("&#123;\"<span class="attr">abc</span>\"<span class="attr">:123</span>&#125;)");</div><div class="line">    &#125; */</div><div class="line">    <span class="attr">out.print</span>("&#123;\"<span class="attr">abc</span>\"<span class="attr">:</span> \"<span class="attr">123</span>\""&#125;);</div><div class="line">	/*<span class="attr">out.print</span>("<span class="attr">fun</span>(&#123;"\"<span class="attr">abc</span>\"<span class="attr">:</span> \"<span class="attr">123</span>\""&#125;)");*/</div><div class="line">%&gt;</div></pre></td></tr></table></figure></p>
<p>test-json.htm文件，与json.jsp资源属于不同的项目中<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- 访问url: http://manage.taotao.com/test-json.htm --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Insert title here<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span></span></div><div class="line">	<span class="attr">src</span>=<span class="string">"http://manage.taotao.com/js/jquery-easyui-1.4.1/jquery.min.js"</span>&gt;<span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="javascript"></span></div><div class="line">	alert ($);</div><div class="line">    $ (<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">	    $.ajax (&#123;</div><div class="line">	        <span class="attr">type</span> : <span class="string">"GET"</span>,</div><div class="line">	        <span class="attr">url</span> : <span class="string">"http://manage.taotao.com/json.jsp"</span>,</div><div class="line">	        <span class="attr">dataType</span> : <span class="string">"json"</span>,</div><div class="line">	        <span class="attr">success</span> : <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</div><div class="line">		        alert (data.abc);</div><div class="line">	        &#125;</div><div class="line">	    &#125;);</div><div class="line">    &#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>经过测试可以得出,script标签是可以跨域请求的，而ajax不能跨域请求<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;script type=“text/javascript” src=&quot;http://www.manage.com/js/jquery-easyui-1.4.1/jquery.min.js&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure></p>
<p>如果换成script标签请求资源<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;script type=“text/javascript” src=&quot;http://manage.taotao.com/json.jsp&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure></p>
<p>会出现以下错误，意思是js解析出错了，因为资源返回的是{“abc”:”123”}json格式的字符串数据无法解析成js<br><img src="https://volc1605.github.io/images/请求跨域问题/jiexi.png" alt="kuayu"><br>如果资源返回结果变成out.print(“fun({“\”abc\”: \”123\””})”);<br>就会出现fun is not defined错误，说明可以解析js，但是返回的这个fun函数找不到。那么就在test-json.htm中定义一个fun函数</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params">data</span>)</span>&#123;</div><div class="line">	alert(data.abc);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>再次请求弹出返回的数据。<br>以上就是jsonp的原理:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Jsonp的原理：</div><div class="line">1、	jsonp通过script标签的src可以跨域请求的特性，加载资源</div><div class="line">2、	将加载的资源（通过一个方法名将数据进行包裹）当做是js脚本解析</div><div class="line">3、	定义一个回调函数，获取传入的数据</div></pre></td></tr></table></figure></p>
<h3 id="2-使用jsonp-处理跨域请求"><a href="#2-使用jsonp-处理跨域请求" class="headerlink" title="2 使用jsonp,处理跨域请求"></a>2 使用jsonp,处理跨域请求</h3><p>请求代码<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$.ajax(&#123;</div><div class="line">	<span class="attr">url</span>: <span class="string">"http://manage.taotao.com/rest/api/item/cat?callback=category.getDataService"</span>,</div><div class="line">	<span class="attr">dataType</span>: <span class="string">"jsonp"</span>,</div><div class="line">	<span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</div><div class="line">		<span class="comment">// data的值：category.getDataService(&#123;abc: 123&#125;)</span></div><div class="line">		alert(data.abc);</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<p>或者<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$.getJSONP(<span class="string">"http://manage.taotao.com/rest/api/item/cat?callback=category.getDataService"</span>, category.getDataService)</div><div class="line"><span class="keyword">var</span> category = &#123;</div><div class="line">	<span class="attr">getDataService</span> : <span class="function"><span class="keyword">function</span>(<span class="params">a</span>)</span>&#123;&#125;;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>后台接口代码<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"api/item/cat"</span>)</div><div class="line"><span class="meta">@Controller</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ApiItemCatController</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> ItemCatService itemCatService;</div><div class="line">    <span class="comment">// private static final ObjectMapper MAPPER = new ObjectMapper();</span></div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@Title</span> queryItemCat</div><div class="line">     * <span class="doctag">@Description</span> 对外提供查询类目借口数据</div><div class="line">     * <span class="doctag">@return</span> ResponseEntity&lt;ItemCatResult&gt;</div><div class="line">     * <span class="doctag">@throws</span> </div><div class="line">     * url:http://manage.taotao.com/rest/api/item/cat?callback=category.getDataService</div><div class="line">     */</div><div class="line">    <span class="meta">@RequestMapping</span>(method = RequestMethod.GET)</div><div class="line">    <span class="function"><span class="keyword">public</span> ResponseEntity&lt;String&gt; <span class="title">queryItemCat</span><span class="params">(@RequestParam(<span class="string">"callback"</span>)</span> String callback) </span>&#123;</div><div class="line">	<span class="keyword">try</span> &#123;</div><div class="line">	    ItemCatResult itemCatResult = <span class="keyword">this</span>.itemCatService.queryAllToTree();</div><div class="line">	    String json = MAPPER.writeValueAsString(itemCatResult);</div><div class="line">	    <span class="keyword">if</span> (callback.isEmpty()) &#123;</div><div class="line">		<span class="keyword">return</span> ResponseEntity.ok(json);</div><div class="line">	    &#125;</div><div class="line">	    <span class="keyword">return</span> ResponseEntity.ok(callback + <span class="string">"("</span> + json + <span class="string">");"</span>); <span class="comment">// 拼接成js</span></div><div class="line">	&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">	    e.printStackTrace();</div><div class="line">	&#125;</div><div class="line">		<span class="keyword">return</span> ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(<span class="keyword">null</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="3-统一解决jsonp请求，并处理中文乱码"><a href="#3-统一解决jsonp请求，并处理中文乱码" class="headerlink" title="3 统一解决jsonp请求，并处理中文乱码"></a>3 统一解决jsonp请求，并处理中文乱码</h3><h4 id="3-1-接口"><a href="#3-1-接口" class="headerlink" title="3.1 接口"></a>3.1 接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</div><div class="line"><span class="keyword">import</span> org.springframework.http.HttpStatus;</div><div class="line"><span class="keyword">import</span> org.springframework.http.ResponseEntity;</div><div class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMethod;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</div><div class="line"><span class="keyword">import</span> com.taotao.common.bean.ItemCatResult;</div><div class="line"><span class="keyword">import</span> com.taotao.manage.service.ItemCatService;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * <span class="doctag">@ClassName</span> ApiItemCatController</div><div class="line"> * <span class="doctag">@Description</span> </div><div class="line"> * <span class="doctag">@Author</span> youtanzhi</div><div class="line"> * <span class="doctag">@Date</span> 2017年2月14日 下午9:29:43</div><div class="line"> * url: http://manage.taotao.com/rest/api/item/cat</div><div class="line"> */</div><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"api/item/cat"</span>)</div><div class="line"><span class="meta">@Controller</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ApiItemCatController</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> ItemCatService itemCatService;</div><div class="line">    <span class="comment">// private static final ObjectMapper MAPPER = new ObjectMapper();</span></div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@Title</span> queryItemCat</div><div class="line">     * <span class="doctag">@Description</span> 对外提供查询类目借口数据</div><div class="line">     * <span class="doctag">@return</span> ResponseEntity&lt;ItemCatResult&gt;</div><div class="line">     * <span class="doctag">@throws</span> </div><div class="line">     */</div><div class="line">    <span class="meta">@RequestMapping</span>(method = RequestMethod.GET)</div><div class="line">    <span class="function"><span class="keyword">public</span> ResponseEntity&lt;ItemCatResult&gt; <span class="title">queryItemCat</span><span class="params">(@RequestParam(<span class="string">"callback"</span>)</span> String callback) </span>&#123;</div><div class="line">	<span class="keyword">try</span> &#123;</div><div class="line">	    ItemCatResult itemCatResult = <span class="keyword">this</span>.itemCatService.queryAllToTree();</div><div class="line">	    <span class="keyword">return</span> ResponseEntity.ok(itemCatResult);</div><div class="line">	&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">	    e.printStackTrace();</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(<span class="keyword">null</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="3-2-初始化servlet-xml文件中配置消息转化器"><a href="#3-2-初始化servlet-xml文件中配置消息转化器" class="headerlink" title="3.2 初始化servlet.xml文件中配置消息转化器"></a>3.2 初始化servlet.xml文件中配置消息转化器</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span></div><div class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></div><div class="line">	<span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></div><div class="line">	<span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></div><div class="line">	<span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></div><div class="line">	<span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd</span></div><div class="line">        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd</div><div class="line">        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd"&gt;</div><div class="line"></div><div class="line">	<span class="comment">&lt;!-- 定义注解驱动 加载多个消息转化器 默认编码为ISO-8859-1(不支持中出现了乱码) --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span></div><div class="line">		<span class="comment">&lt;!-- 自定义essageConverter 为utf-8解决中文乱码问题 --&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">mvc:message-converters</span> <span class="attr">register-defaults</span>=<span class="string">"true"</span>&gt;</span><span class="comment">&lt;!-- true代表使用自定的消息转化器 --&gt;</span></div><div class="line">			<span class="comment">&lt;!--&lt;bean class="org.springframework.http.converter.StringHttpMessageConverter"&gt; </span></div><div class="line">				&lt;constructor-arg index="0" value="UTF-8" /&gt; &lt;/bean&gt; --&gt;</div><div class="line">			<span class="tag">&lt;<span class="name">bean</span></span></div><div class="line">				<span class="attr">class</span>=<span class="string">"com.taotao.common.spring.exetend.converter.json.CallbackMappingJackson2HttpMessageConverter"</span>&gt;</div><div class="line">				<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"callbackName"</span> <span class="attr">value</span>=<span class="string">"callback"</span> /&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></div><div class="line">	<span class="comment">&lt;!-- 结束 --&gt;</span></div><div class="line">	<span class="comment">&lt;!-- 定义Controller的扫描包 --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.taotao.manage.controller"</span> /&gt;</span></div><div class="line"></div><div class="line">	<span class="comment">&lt;!-- 定义试图解析器 --&gt;</span></div><div class="line">	<span class="comment">&lt;!-- Example: prefix="/WEB-INF/jsp/", suffix=".jsp", viewname="test" -&gt; </span></div><div class="line">		"/WEB-INF/jsp/test.jsp" --&gt;</div><div class="line">	<span class="tag">&lt;<span class="name">bean</span></span></div><div class="line">		<span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/WEB-INF/views/"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span> /&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line">	<span class="comment">&lt;!-- 使用fileupload-common上传组件需要sring的支持，这里就要配置支持上传组件的视图解析器 --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"multipartResolver"</span></span></div><div class="line">		<span class="attr">class</span>=<span class="string">"org.springframework.web.multipart.commons.CommonsMultipartResolver"</span>&gt;</div><div class="line">		<span class="comment">&lt;!-- 限制文件的最大上传大小，字节单位5M --&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxUploadSize"</span> <span class="attr">value</span>=<span class="string">"5242880"</span> /&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="3-3-自定义消息转化器处理类"><a href="#3-3-自定义消息转化器处理类" class="headerlink" title="3.3 自定义消息转化器处理类"></a>3.3 自定义消息转化器处理类</h4><p>引用jar<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">&lt;!-- spring-web 这里用于加载消息转化器类 --&gt;</div><div class="line">&lt;dependency&gt;</div><div class="line">	&lt;groupId&gt;org.springframework&lt;/groupId&gt;</div><div class="line">	&lt;artifactId&gt;spring-web&lt;/artifactId&gt;</div><div class="line">	&lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt;</div><div class="line">&lt;/dependency&gt;</div><div class="line">&lt;!-- Apache工具组件 --&gt;</div><div class="line">&lt;dependency&gt;</div><div class="line">	&lt;groupId&gt;org.apache.commons&lt;/groupId&gt;</div><div class="line">	&lt;artifactId&gt;commons-lang3&lt;/artifactId&gt;</div><div class="line">&lt;/dependency&gt;</div><div class="line">&lt;dependency&gt;</div><div class="line">	&lt;groupId&gt;org.apache.commons&lt;/groupId&gt;</div><div class="line">	&lt;artifactId&gt;commons-io&lt;/artifactId&gt;</div><div class="line">&lt;/dependency&gt;</div><div class="line">&lt;dependency&gt;</div><div class="line">	&lt;groupId&gt;javax.servlet&lt;/groupId&gt;</div><div class="line">	&lt;artifactId&gt;servlet-api&lt;/artifactId&gt;</div><div class="line">	&lt;scope&gt;provided&lt;/scope&gt;</div><div class="line">&lt;/dependency&gt;</div></pre></td></tr></table></figure></p>
<p>处理类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</div><div class="line"><span class="keyword">import</span> org.apache.commons.io.IOUtils;</div><div class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</div><div class="line"><span class="keyword">import</span> org.springframework.http.HttpOutputMessage;</div><div class="line"><span class="keyword">import</span> org.springframework.http.converter.HttpMessageNotWritableException;</div><div class="line"><span class="keyword">import</span> org.springframework.http.converter.json.MappingJackson2HttpMessageConverter;</div><div class="line"><span class="keyword">import</span> org.springframework.web.context.request.RequestContextHolder;</div><div class="line"><span class="keyword">import</span> org.springframework.web.context.request.ServletRequestAttributes;</div><div class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonEncoding;</div><div class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonProcessingException;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CallbackMappingJackson2HttpMessageConverter</span> <span class="keyword">extends</span> <span class="title">MappingJackson2HttpMessageConverter</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">// 做jsonp的支持的标识，在请求参数中加该参数</span></div><div class="line">    <span class="keyword">private</span> String callbackName;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">writeInternal</span><span class="params">(Object object, HttpOutputMessage outputMessage)</span> <span class="keyword">throws</span> IOException, HttpMessageNotWritableException </span>&#123;</div><div class="line">	<span class="comment">// 从threadLocal中获取当前的Request对象</span></div><div class="line">	HttpServletRequest request = ((ServletRequestAttributes) RequestContextHolder.currentRequestAttributes()).getRequest();</div><div class="line">	String callbackParam = request.getParameter(callbackName);</div><div class="line">	<span class="keyword">if</span> (StringUtils.isEmpty(callbackParam)) &#123;</div><div class="line">	    <span class="comment">// 没有找到callback参数，直接返回json数据</span></div><div class="line">	    <span class="keyword">super</span>.writeInternal(object, outputMessage);</div><div class="line">	&#125; <span class="keyword">else</span> &#123;</div><div class="line">	    JsonEncoding encoding = getJsonEncoding(outputMessage.getHeaders().getContentType());</div><div class="line">	    <span class="keyword">try</span> &#123;</div><div class="line">		String result = callbackParam + <span class="string">"("</span> + <span class="keyword">super</span>.getObjectMapper().writeValueAsString(object) + <span class="string">");"</span>;</div><div class="line">		IOUtils.write(result, outputMessage.getBody(), encoding.getJavaName());</div><div class="line">	    &#125; <span class="keyword">catch</span> (JsonProcessingException ex) &#123;</div><div class="line">		<span class="keyword">throw</span> <span class="keyword">new</span> HttpMessageNotWritableException(<span class="string">"Could not write JSON: "</span> + ex.getMessage(), ex);</div><div class="line">	    &#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getCallbackName</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">return</span> callbackName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCallbackName</span><span class="params">(String callbackName)</span> </span>&#123;</div><div class="line">	<span class="keyword">this</span>.callbackName = callbackName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[解析json字符串]]></title>
      <url>https://volc1605.github.io/2017/05/16/fastJson%E8%A7%A3%E6%9E%90json%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
      <content type="html"><![CDATA[<h3 id="1-使用fastjson解析json字符串"><a href="#1-使用fastjson解析json字符串" class="headerlink" title="1 使用fastjson解析json字符串"></a>1 使用fastjson解析json字符串</h3><a id="more"></a>
<p>要解析的json串<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&#123;				--首先创建DatasResult类用于接收数据</div><div class="line">  &quot;data&quot;: [			--可以看出data这个元素属于一个集合，所以在DataResult类中创建List&lt;Data&gt;集合属性</div><div class="line">    &#123;				--List&lt;Data&gt;集合包含很多Data类型，创建Data类，Date类中有title属性和result类</div><div class="line">      &quot;title&quot;: &quot;123&quot;,</div><div class="line">      &quot;result&quot;: &#123;		--而result元素又属于一个对象，在Data类中创建DataResult类</div><div class="line">        &quot;name&quot;: &quot;volc&quot;		--DataResult类中包含name属性</div><div class="line">      &#125;</div><div class="line">    &#125;,</div><div class="line">    &#123;</div><div class="line">      &quot;title&quot;: &quot;123&quot;,</div><div class="line">      &quot;result&quot;: &#123;</div><div class="line">        &quot;name&quot;: &quot;volc&quot;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  ]</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>1.构造实体类</p>
<p>创建DatasResult的实体类用于接受数据<br>里面包含List<data>集合属性</data></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.util.ArrayList;</div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DatasResult</span> </span>&#123;</div><div class="line">	List&lt;Data&gt; data = <span class="keyword">new</span> ArrayList&lt;Data&gt;();</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> List&lt;Data&gt; <span class="title">getData</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="keyword">return</span> data;</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setData</span><span class="params">(List&lt;Data&gt; data)</span> </span>&#123;</div><div class="line">		<span class="keyword">this</span>.data = data;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>创建Data类型，里面包含title属性和result类，在Date类型创建DataResult类，DataResult类中包含name属性<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Data</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="keyword">private</span> String title;</div><div class="line">	<span class="keyword">private</span> DataResult result;</div><div class="line"></div><div class="line">	<span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataResult</span> </span>&#123;</div><div class="line">		<span class="keyword">private</span> String name;</div><div class="line"></div><div class="line">		<span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</div><div class="line">			<span class="keyword">return</span> name;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</div><div class="line">			<span class="keyword">this</span>.name = name;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> DataResult <span class="title">getResult</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="keyword">return</span> result;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setResult</span><span class="params">(DataResult result)</span> </span>&#123;</div><div class="line">		<span class="keyword">this</span>.result = result;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getTitle</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="keyword">return</span> title;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTitle</span><span class="params">(String title)</span> </span>&#123;</div><div class="line">		<span class="keyword">this</span>.title = title;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="meta">@Override</span></div><div class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="keyword">return</span> <span class="string">"Data [title="</span> + title + <span class="string">", result="</span> + result + <span class="string">"]"</span>;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>2 解析<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JSONToList</span> </span>&#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">		String json = <span class="string">"&#123;\"data\":[&#123;\"title\":\"123\",\"result\":&#123;\"name\":\"volc\"&#125;&#125;,&#123;\"title\":\"123\",\"result\":&#123;\"name\":\"volc\"&#125;&#125;]&#125;"</span>;</div><div class="line">		System.out.println(json);</div><div class="line">		DatasResult parseObject = JSON.parseObject(json, DatasResult.class);</div><div class="line">		System.out.println(parseObject.getData().get(<span class="number">0</span>).getResult().getName());</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="2-使用jackson解析"><a href="#2-使用jackson解析" class="headerlink" title="2 使用jackson解析"></a>2 使用jackson解析</h3><p>DataResult类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.JsonNode;</div><div class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DatasResult</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">// 定义jackson对象</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> ObjectMapper MAPPER = <span class="keyword">new</span> ObjectMapper();</div><div class="line"></div><div class="line">    <span class="keyword">private</span> List&lt;?&gt; data;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DatasResult</span><span class="params">()</span> </span>&#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DatasResult</span><span class="params">(List&lt;?&gt; data)</span> </span>&#123;</div><div class="line">	<span class="keyword">this</span>.data = data;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> List&lt;?&gt; getData() &#123;</div><div class="line">	<span class="keyword">return</span> data;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setData</span><span class="params">(List&lt;?&gt; data)</span> </span>&#123;</div><div class="line">	<span class="keyword">this</span>.data = data;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Object是集合转化</div><div class="line">     * </div><div class="line">     * <span class="doctag">@param</span> jsonData json数据</div><div class="line">     * <span class="doctag">@param</span> clazz 集合中的类型</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DatasResult <span class="title">formatToList</span><span class="params">(String jsonData, Class&lt;?&gt; clazz)</span> </span>&#123;</div><div class="line">	<span class="keyword">try</span> &#123;</div><div class="line">	    JsonNode jsonNode = MAPPER.readTree(jsonData);</div><div class="line">	    JsonNode data = jsonNode.get(<span class="string">"data"</span>);</div><div class="line">	    List&lt;?&gt; list = <span class="keyword">null</span>;</div><div class="line">	    <span class="keyword">if</span> (data.isArray() &amp;&amp; data.size() &gt; <span class="number">0</span>) &#123;</div><div class="line">		list = MAPPER.readValue(data.traverse(), MAPPER.getTypeFactory().constructCollectionType(List.class, clazz));</div><div class="line">	    &#125;</div><div class="line">	    <span class="keyword">return</span> <span class="keyword">new</span> DatasResult(list);</div><div class="line">	&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">	    <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">	&#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>Data类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Data</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> String title;</div><div class="line">    <span class="keyword">private</span> DataResult result;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataResult</span> </span>&#123;</div><div class="line">	<span class="keyword">private</span> String name;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</div><div class="line">	    <span class="keyword">return</span> name;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</div><div class="line">	    <span class="keyword">this</span>.name = name;</div><div class="line">	&#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> DataResult <span class="title">getResult</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">return</span> result;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setResult</span><span class="params">(DataResult result)</span> </span>&#123;</div><div class="line">	<span class="keyword">this</span>.result = result;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getTitle</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">return</span> title;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTitle</span><span class="params">(String title)</span> </span>&#123;</div><div class="line">	<span class="keyword">this</span>.title = title;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">return</span> <span class="string">"Data [title="</span> + title + <span class="string">", result="</span> + result + <span class="string">"]"</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * <span class="doctag">@ClassName</span> Jackson</div><div class="line"> * <span class="doctag">@Author</span> volc</div><div class="line"> * <span class="doctag">@Description</span> 解析json字符串节点为对象</div><div class="line"> * <span class="doctag">@Date</span> 2017年6月2日 上午1:51:26</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Jackson</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">	String json = <span class="string">"&#123;\"data\":[&#123;\"title\":\"123\",\"result\":&#123;\"name\":\"volc\"&#125;&#125;,&#123;\"title\":\"123\",\"result\":&#123;\"name\":\"volc\"&#125;&#125;]&#125;"</span>;</div><div class="line">	DatasResult dataResult = DatasResult.formatToList(json, Data.class);</div><div class="line">	System.out.println(dataResult);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="3-使用jackson解析json指定节点"><a href="#3-使用jackson解析json指定节点" class="headerlink" title="3 使用jackson解析json指定节点"></a>3 使用jackson解析json指定节点</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> java.util.ArrayList;</div><div class="line"><span class="keyword">import</span> java.util.LinkedHashMap;</div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"><span class="keyword">import</span> java.util.Map;</div><div class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonProcessingException;</div><div class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.JsonNode;</div><div class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</div><div class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.node.ArrayNode;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * <span class="doctag">@ClassName</span> Jackson</div><div class="line"> * <span class="doctag">@Author</span> volc</div><div class="line"> * <span class="doctag">@Description</span> 解析json字符串中的节点对象</div><div class="line"> * <span class="doctag">@Date</span> 2017年6月2日 上午1:51:26</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Jackson2</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> ObjectMapper MAPPER = <span class="keyword">new</span> ObjectMapper();</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> JsonProcessingException, IOException </span>&#123;</div><div class="line">	String json = <span class="string">"&#123;\"data\":[&#123;\"title\":\"123\",\"result\":&#123;\"name\":\"volc\"&#125;&#125;,&#123;\"title\":\"123\",\"result\":&#123;\"name\":\"volc\"&#125;&#125;]&#125;"</span>;</div><div class="line">	<span class="comment">// 解析json生成前端所需要的json数据</span></div><div class="line">	JsonNode jsonNode = MAPPER.readTree(json);</div><div class="line">	ArrayNode arrayNode = (ArrayNode) jsonNode.get(<span class="string">"data"</span>);</div><div class="line">	<span class="comment">// 定义含有map集合的list用于组织封装想要的格式</span></div><div class="line">	List&lt;Map&lt;String, Object&gt;&gt; result = <span class="keyword">new</span> ArrayList&lt;Map&lt;String, Object&gt;&gt;();</div><div class="line">	<span class="keyword">for</span> (JsonNode data : arrayNode) &#123;</div><div class="line">	    <span class="comment">// 有顺序的hashmap</span></div><div class="line">	    Map&lt;String, Object&gt; map = <span class="keyword">new</span> LinkedHashMap&lt;String, Object&gt;();</div><div class="line">	    map.put(<span class="string">"result"</span>, data.get(<span class="string">"result"</span>).get(<span class="string">"name"</span>).asText()); <span class="comment">// 获取节点对象并获取值</span></div><div class="line">	    result.add(map);</div><div class="line">	&#125;</div><div class="line">	System.out.println(MAPPER.writeValueAsString(result));</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[oracle数据库]]></title>
      <url>https://volc1605.github.io/2017/04/14/oracle%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      <content type="html"><![CDATA[<h3 id="1-oracle数据库对表设置自增ID"><a href="#1-oracle数据库对表设置自增ID" class="headerlink" title="1 oracle数据库对表设置自增ID"></a>1 oracle数据库对表设置自增ID</h3><a id="more"></a>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">-- 创建序列</span></div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">SEQUENCE</span> SYS_MAIL_PLAN_WAIT_SEQUENCE</div><div class="line">   <span class="keyword">increment</span> <span class="keyword">by</span> <span class="number">1</span>    <span class="comment">-- 每次递增1</span></div><div class="line">   <span class="keyword">start</span> <span class="keyword">with</span> <span class="number">1</span>       <span class="comment">-- 从1开始</span></div><div class="line">   <span class="keyword">nomaxvalue</span>      <span class="comment">-- 没有最大值</span></div><div class="line">   <span class="keyword">minvalue</span> <span class="number">1</span>       <span class="comment">-- 最小值=1</span></div><div class="line">   <span class="keyword">NOCYCLE</span>;      <span class="comment">-- 不循环</span></div><div class="line"><span class="comment">-- 创建触发器，每次新增SYS_MAIL_PLAN_WAIT表数据之前被执行，并将SYS_MAIL_PLAN_WAIT中PLAN_ID自增1</span></div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">TRIGGER</span> SYS_MAIL_PLAN_WAIT_TRIGGER</div><div class="line">    <span class="keyword">BEFORE</span> <span class="keyword">INSERT</span> <span class="keyword">ON</span> SYS_MAIL_PLAN_WAIT</div><div class="line">  <span class="keyword">FOR</span> <span class="keyword">EACH</span> <span class="keyword">ROW</span></div><div class="line">  <span class="keyword">BEGIN</span></div><div class="line">    <span class="keyword">SELECT</span> SYS_MAIL_PLAN_WAIT_SEQUENCE.nextval <span class="keyword">INTO</span> :new.PLAN_ID <span class="keyword">FROM</span> DUAL;</div><div class="line">  <span class="keyword">END</span>;</div><div class="line">  </div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> SYS_MAIL_PLAN_WAIT(PROS_ID) <span class="keyword">VALUES</span> (<span class="string">'1'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> SYS_MAIL_PLAN_WAIT(PROS_ID) <span class="keyword">VALUES</span> (<span class="string">'3'</span>);</div></pre></td></tr></table></figure>
<h3 id="2-批量更新"><a href="#2-批量更新" class="headerlink" title="2 批量更新"></a>2 批量更新</h3><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;update id="lockTaskPlan"&gt;</div><div class="line">	begin</div><div class="line">	&lt;foreach collection="mailPlanList" item="item" index="index" separator=";" close=""&gt;</div><div class="line">		UPDATE SYS_MAIL_PLAN_WAIT SET STATUS =</div><div class="line">		#&#123;item.status&#125;,thread_id = #&#123;item.threadId&#125; WHERE PLAN_ID = #&#123;item.planId&#125;</div><div class="line">	&lt;/foreach&gt;</div><div class="line">	;end;</div><div class="line">&lt;/update&gt;</div></pre></td></tr></table></figure>
<p>这种写法对于返回更新数量的数据库配置是不起作用的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;!--由于项目配置中启用了BATCH执行器，UPDATE和DELETE返回的行数就丢失了，把执行器改为SIMPLE即可。--&gt;</div><div class="line">&lt;!-- defaultExecutorType设置为BATCH有个缺陷就是无法获取update、delete返回的行数 --&gt;</div><div class="line">        &lt;!-- &lt;setting name=&quot;defaultExecutorType&quot; value=&quot;SIMPLE&quot; /&gt;--&gt;</div></pre></td></tr></table></figure></p>
<p>获取返回数量的批量更新如下写法<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">update</span> table_name t1 <span class="keyword">set</span> (a,b,c)=( <span class="keyword">select</span> a,b,c <span class="keyword">from</span> table_name_2 t2 <span class="keyword">where</span> t1.a=t2.a) <span class="keyword">where</span> <span class="keyword">exists</span>(<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> table_name_2 t2 <span class="keyword">where</span> t1.a=t2.a);</div></pre></td></tr></table></figure></p>
<h3 id="3-navicat连接本地oracle"><a href="#3-navicat连接本地oracle" class="headerlink" title="3 navicat连接本地oracle"></a>3 navicat连接本地oracle</h3><h4 id="3-1-Navicat-Premium连接本地Oracle"><a href="#3-1-Navicat-Premium连接本地Oracle" class="headerlink" title="3.1 Navicat Premium连接本地Oracle"></a>3.1 Navicat Premium连接本地Oracle</h4><p>想要使用navicat连接本地oracle数据库首先确保两点<br>1.oracle版本号11.2.0.1.0 64位,Navicat Premium也是64位，总之保证数据库客户端工具运行平台操作系统位数和oracle运行平台操作系统位数相同。<br>2.客户端instantclient_11_2和安装的oracle版本号一致，也是64位。</p>
<h4 id="3-2-下载instantclient-11-2"><a href="#3-2-下载instantclient-11-2" class="headerlink" title="3.2 下载instantclient_11_2"></a>3.2 下载instantclient_11_2</h4><p>要下载<a href="http://www.oracle.com/technetwork/topics/winx64soft-089540.html" target="_blank" rel="external">instantclient_11_2</a>，和navicat一样都是64位，找到对应的版本号，选择Basic类型下载<br>下载完成后解压到Navicat安装目录E:\Navicat Premium替换掉原来的instantclient_11_2，重启navicat</p>
<h4 id="3-3-修改文件"><a href="#3-3-修改文件" class="headerlink" title="3.3 修改文件"></a>3.3 修改文件</h4><p>E:\database\base\product\11.2.0\dbhome_1\NETWORK\ADMIN\listener.ora和<br>E:\database\base\product\11.2.0\dbhome_1\NETWORK\ADMIN\tnsnames.ora两个文件，修改之前要先备份这两个文件<br>把这两个文件中的localhost全部替换为该计算机全名。<br>重新启动OracleServiceORCL和OracleOraDb11g_home1TNSListener服务</p>
<p>配置navicat<br>E:\Navicat Premium\instantclient_11_2\oci.dll<br>E:\database\base\product\11.2.0\dbhome_1\BIN\sqlplus.exe<br><img src="http://www.volcfamily.cn/images/oracle数据库/navicat.png" alt="测试"> </p>
<h4 id="3-4-连接数据库"><a href="#3-4-连接数据库" class="headerlink" title="3.4 连接数据库"></a>3.4 连接数据库</h4><p>连接类型Basic<br>端口号1521<br>服务名ORCL(和E:\database\base\product\11.2.0\dbhome_1\NETWORK\ADMIN\tnsnames.ora文件中的SERVICE_NAME值一致，不区分大小写)<br>用户名scott<br>密码tiger</p>
<p>遇到的问题<br>ORA-28000 scott账号被锁<br>执行命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">alter user scott account unlock;</div></pre></td></tr></table></figure></p>
<p>ORA-28001 用户账号过期</p>
<p>在从计算机开始选项中打开SQL Plus，使用修复账号<br>用户名：system<br>密码为安装oracle时的登录密码<br>执行以下命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">alter user scott identified by tiger;</div><div class="line">alter user scott account unlock;</div></pre></td></tr></table></figure></p>
<p>重新连接问题解决</p>
<h3 id="4-oracle分页"><a href="#4-oracle分页" class="headerlink" title="4 oracle分页"></a>4 oracle分页</h3><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">select</div><div class="line">	&lt;include refid="MailColumns" /&gt;</div><div class="line">	from</div><div class="line">	(</div><div class="line">	select sm.*,rownum rn from (</div><div class="line">	select</div><div class="line">	*</div><div class="line">	from sys_mail where 1 = 1</div><div class="line">	&lt;if test="userId != null and userId != ''"&gt;</div><div class="line">		and user_id = #&#123;userId&#125;</div><div class="line">	&lt;/if&gt;</div><div class="line">	&lt;if test="mailType != null and mailType != ''"&gt;</div><div class="line">		and mail_type = #&#123;mailType&#125;</div><div class="line">	&lt;/if&gt;</div><div class="line">	order by create_time desc) sm</div><div class="line">	) a where 1 =1</div><div class="line">	&lt;if test="rowStart != null and rowStart != 0"&gt;</div><div class="line">		and a.rn &amp;gt;= #&#123;rowStart&#125;</div><div class="line">	&lt;/if&gt;</div><div class="line">	&lt;if test="rowEnd != null and rowEnd != 0"&gt;</div><div class="line">		and a.rn &amp;lt; #&#123;rowEnd&#125;</div><div class="line">	&lt;/if&gt;</div></pre></td></tr></table></figure>
<h3 id="5-分组排序取各组第一个"><a href="#5-分组排序取各组第一个" class="headerlink" title="5 分组排序取各组第一个"></a>5 分组排序取各组第一个</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span></div><div class="line">	T.ID</div><div class="line"><span class="keyword">FROM</span></div><div class="line">	(</div><div class="line">		<span class="keyword">SELECT</span></div><div class="line">			am.ID,</div><div class="line">			ROW_NUMBER () <span class="keyword">OVER</span> (</div><div class="line">				<span class="keyword">PARTITION</span> <span class="keyword">BY</span> am.APPID <span class="comment">-- 分组字段</span></div><div class="line">				<span class="keyword">ORDER</span> <span class="keyword">BY</span></div><div class="line">					am.NEWTIME <span class="keyword">DESC</span> <span class="comment">-- 排序字段</span></div><div class="line">			) <span class="keyword">AS</span> code_id</div><div class="line">		<span class="keyword">FROM</span></div><div class="line">			CAS_APP_MANAGER am</div><div class="line">		<span class="keyword">WHERE</span></div><div class="line">			<span class="number">1</span> = <span class="number">1</span></div><div class="line">	) T</div><div class="line"><span class="keyword">WHERE</span></div><div class="line">	T.code_id = <span class="number">1</span></div></pre></td></tr></table></figure>
<h3 id="6-批量插入"><a href="#6-批量插入" class="headerlink" title="6 批量插入"></a>6 批量插入</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> sys_user_mail</div><div class="line">(<span class="keyword">id</span>, user_id,</div><div class="line">mail_id,recipient_org,recipient_dept,user_name,mail_status,user_account,create_time,update_time,</div><div class="line">re_status)</div><div class="line">&lt;foreach collection=<span class="string">"userMailBeanList"</span> item=<span class="string">"item"</span> separator=<span class="string">"union all"</span>&gt;</div><div class="line">	(<span class="keyword">SELECT</span></div><div class="line">	#&#123;item.id&#125;,#&#123;item.userId&#125;,#&#123;item.mailId&#125;,#&#123;item.recipientOrg&#125;,#&#123;item.recipientDept&#125;,#&#123;item.userName&#125;,#&#123;item.mailStatus&#125;,#&#123;item.email&#125;,#&#123;item.createTime&#125;,#&#123;item.updateTime&#125;,#&#123;item.reStatus&#125;</div><div class="line">	<span class="keyword">FROM</span> DUAL)</div><div class="line">&lt;/foreach&gt;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[spring整合quartz]]></title>
      <url>https://volc1605.github.io/2017/04/09/spring%E6%95%B4%E5%90%88quartz/</url>
      <content type="html"><![CDATA[<h3 id="1-quartz使用"><a href="#1-quartz使用" class="headerlink" title="1 quartz使用"></a>1 quartz使用</h3><p>&emsp;&emsp;<strong>Quartz</strong>是一个Java下作业控制的开源框架。Quartz用来创建或简单或复杂的调度时间表，执行Java下任意数量的作业。版本1.0发布于2002年9月13日，当前版本2.2.1发布于2013年9月24日。<br>可以通过CronTrigger定义Quartz的调度时间表（例如0 0 12 ? * WED表示“每周三上午12：00”）。此外，时间表也可以通过SimpleTrigger，由Date定义触发的开始时间、毫秒的时间间隔和重复计数（例如“在下周三12：00，然后每隔10秒、执行5次”）。可以使用Calender定义例外的日程（例如“没有周末和节假日”）。<br>作业可以是实现了Job接口任意的Java类。作业监听器（JobListener）和触发器监听器（TriggerListener）通知作业的执行（和其他事件）。作业及其触发器可以被持久化。<br>Quartz一般用于企业级应用程序，以支持工作流、系统管理（维护）活动，并在应用程序中提供实时的服务。Quartz还支持集群。<br>Quartz是Terracotta公司的开源产品。 .NET平台下的对应产品叫Quartz.NET。<br>quratz任务的注册(蓝线)和执行(红线)</p>
<p><img src="http://volcfamily.cn/images/spring整合quratz/quratz.PNG" alt="quartz"><br><a id="more"></a><br>quartz核心接口</p>
<blockquote>
<ul>
<li>Schecduler  核心调度器</li>
<li>Job         任务</li>
<li>JobDetail   任务描述</li>
<li>Trigger     触发器</li>
</ul>
</blockquote>
<p>Tigger</p>
<blockquote>
<ul>
<li>SimpleTrigger 简单的触发，指定时间</li>
<li>CronTrigger 表达式触发,处理复杂时间执行，类似日历</li>
</ul>
</blockquote>
<h3 id="2-简单使用demo"><a href="#2-简单使用demo" class="headerlink" title="2 简单使用demo"></a>2 简单使用demo</h3><p>定义job<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.util.Date;</div><div class="line"><span class="keyword">import</span> org.slf4j.Logger;</div><div class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</div><div class="line"><span class="keyword">import</span> org.quartz.Job;</div><div class="line"><span class="keyword">import</span> org.quartz.JobExecutionContext;</div><div class="line"><span class="keyword">import</span> org.quartz.JobExecutionException;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * &lt;p&gt;</div><div class="line"> * This is just a simple job that says "Hello" to the world.</div><div class="line"> * &lt;/p&gt;</div><div class="line"> * </div><div class="line"> * <span class="doctag">@author</span> Bill Kratzer</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloJob</span> <span class="keyword">implements</span> <span class="title">Job</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Logger _log = LoggerFactory.getLogger(HelloJob.class);</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * &lt;p&gt;</div><div class="line">     * Empty constructor for job initilization</div><div class="line">     * &lt;/p&gt;</div><div class="line">     * &lt;p&gt;</div><div class="line">     * Quartz requires a public empty constructor so that the</div><div class="line">     * scheduler can instantiate the class whenever it needs.</div><div class="line">     * &lt;/p&gt;</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">HelloJob</span><span class="params">()</span> </span>&#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * &lt;p&gt;</div><div class="line">     * Called by the &lt;code&gt;&#123;<span class="doctag">@link</span> org.quartz.Scheduler&#125;&lt;/code&gt; when a</div><div class="line">     * &lt;code&gt;&#123;<span class="doctag">@link</span> org.quartz.Trigger&#125;&lt;/code&gt; fires that is associated with</div><div class="line">     * the &lt;code&gt;Job&lt;/code&gt;.</div><div class="line">     * &lt;/p&gt;</div><div class="line">     * </div><div class="line">     * <span class="doctag">@throws</span> JobExecutionException</div><div class="line">     *             if there is an exception while executing the job.</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">(JobExecutionContext context)</span> <span class="keyword">throws</span> JobExecutionException </span>&#123;</div><div class="line"></div><div class="line">	<span class="comment">// Say Hello to the World and display the date/time</span></div><div class="line">	_log.info(<span class="string">"Hello World! - "</span> + <span class="keyword">new</span> Date());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>简单注册和触发demo<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.quartz.DateBuilder.evenMinuteDate;</div><div class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.quartz.JobBuilder.newJob;</div><div class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.quartz.TriggerBuilder.newTrigger;</div><div class="line"><span class="keyword">import</span> org.quartz.JobDetail;</div><div class="line"><span class="keyword">import</span> org.quartz.Scheduler;</div><div class="line"><span class="keyword">import</span> org.quartz.SchedulerFactory;</div><div class="line"><span class="keyword">import</span> org.quartz.Trigger;</div><div class="line"><span class="keyword">import</span> org.quartz.impl.StdSchedulerFactory;</div><div class="line"><span class="keyword">import</span> org.slf4j.Logger;</div><div class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</div><div class="line"><span class="keyword">import</span> java.util.Date;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * This Example will demonstrate how to start and shutdown the Quartz scheduler and how to schedule</div><div class="line"> * a job to run in Quartz.</div><div class="line"> * </div><div class="line"> * <span class="doctag">@author</span> Bill Kratzer</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SimpleExample</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">	Logger log = LoggerFactory.getLogger(SimpleExample.class);</div><div class="line"></div><div class="line">	log.info(<span class="string">"------- Initializing ----------------------"</span>);</div><div class="line"></div><div class="line">	<span class="comment">// 定义调度器</span></div><div class="line">	SchedulerFactory sf = <span class="keyword">new</span> StdSchedulerFactory();</div><div class="line">	Scheduler sched = sf.getScheduler();</div><div class="line"></div><div class="line">	log.info(<span class="string">"------- Initialization Complete -----------"</span>);</div><div class="line"></div><div class="line">	<span class="comment">// 获取当前时间的下一分钟</span></div><div class="line">	Date runTime = evenMinuteDate(<span class="keyword">new</span> Date());</div><div class="line"></div><div class="line">	log.info(<span class="string">"------- Scheduling Job  -------------------"</span>);</div><div class="line"></div><div class="line">	<span class="comment">// 定义job,要执行的HelloJob,组曾jobdetail</span></div><div class="line">	<span class="comment">// 在quartz中，有组的概念，组+job名称 唯一的</span></div><div class="line">	JobDetail job = newJob(HelloJob.class).withIdentity(<span class="string">"job1"</span>, <span class="string">"group1"</span>).build();</div><div class="line"></div><div class="line">	<span class="comment">// 定义触发器，在下一分钟启动</span></div><div class="line">	Trigger trigger = newTrigger().withIdentity(<span class="string">"trigger1"</span>, <span class="string">"group1"</span>).startAt(runTime).build();</div><div class="line"></div><div class="line">	<span class="comment">// 将job注册到调度器</span></div><div class="line">	sched.scheduleJob(job, trigger);</div><div class="line">	log.info(job.getKey() + <span class="string">" will run at: "</span> + runTime);</div><div class="line"></div><div class="line">	<span class="comment">// 启动调度器</span></div><div class="line">	sched.start();</div><div class="line"></div><div class="line">	log.info(<span class="string">"------- Started Scheduler -----------------"</span>);</div><div class="line"></div><div class="line">	<span class="comment">// 等待65秒</span></div><div class="line">	log.info(<span class="string">"------- Waiting 65 seconds... -------------"</span>);</div><div class="line">	<span class="keyword">try</span> &#123;</div><div class="line">	    <span class="comment">// wait 65 seconds to show job</span></div><div class="line">	    Thread.sleep(<span class="number">65L</span> * <span class="number">1000L</span>);</div><div class="line">	    <span class="comment">// executing...</span></div><div class="line">	&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">	    <span class="comment">//</span></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">// 关闭调度器</span></div><div class="line">	log.info(<span class="string">"------- Shutting Down ---------------------"</span>);</div><div class="line">	sched.shutdown(<span class="keyword">true</span>);</div><div class="line">	log.info(<span class="string">"------- Shutdown Complete -----------------"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line"></div><div class="line">	SimpleExample example = <span class="keyword">new</span> SimpleExample();</div><div class="line">	example.run();</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>表达式注册和触发demo<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.quartz.CronScheduleBuilder.cronSchedule;</div><div class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.quartz.DateBuilder.evenMinuteDate;</div><div class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.quartz.JobBuilder.newJob;</div><div class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.quartz.TriggerBuilder.newTrigger;</div><div class="line"><span class="keyword">import</span> org.quartz.JobDetail;</div><div class="line"><span class="keyword">import</span> org.quartz.Scheduler;</div><div class="line"><span class="keyword">import</span> org.quartz.SchedulerFactory;</div><div class="line"><span class="keyword">import</span> org.quartz.Trigger;</div><div class="line"><span class="keyword">import</span> org.quartz.impl.StdSchedulerFactory;</div><div class="line"><span class="keyword">import</span> org.slf4j.Logger;</div><div class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</div><div class="line"><span class="keyword">import</span> java.util.Date;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * This Example will demonstrate how to start and shutdown the Quartz scheduler and how to schedule</div><div class="line"> * a job to run in Quartz.</div><div class="line"> * </div><div class="line"> * <span class="doctag">@author</span> Bill Kratzer</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SimpleCronExample</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">	Logger log = LoggerFactory.getLogger(SimpleCronExample.class);</div><div class="line"></div><div class="line">	log.info(<span class="string">"------- Initializing ----------------------"</span>);</div><div class="line"></div><div class="line">	<span class="comment">// 定义调度器</span></div><div class="line">	SchedulerFactory sf = <span class="keyword">new</span> StdSchedulerFactory();</div><div class="line">	Scheduler sched = sf.getScheduler();</div><div class="line"></div><div class="line">	log.info(<span class="string">"------- Initialization Complete -----------"</span>);</div><div class="line"></div><div class="line">	<span class="comment">// 获取当前时间的下一分钟</span></div><div class="line">	Date runTime = evenMinuteDate(<span class="keyword">new</span> Date());</div><div class="line"></div><div class="line">	log.info(<span class="string">"------- Scheduling Job  -------------------"</span>);</div><div class="line"></div><div class="line">	<span class="comment">// 定义job</span></div><div class="line">	JobDetail job = newJob(HelloJob.class).withIdentity(<span class="string">"job1"</span>, <span class="string">"group1"</span>).build();</div><div class="line"></div><div class="line">	<span class="comment">// 定义触发器，每2秒执行一次</span></div><div class="line">	Trigger trigger = newTrigger().withIdentity(<span class="string">"trigger1"</span>, <span class="string">"group1"</span>).withSchedule(cronSchedule(<span class="string">"0 0/1 * * * ?"</span>)).build();</div><div class="line"></div><div class="line">	<span class="comment">// 将job注册到调度器</span></div><div class="line">	sched.scheduleJob(job, trigger);</div><div class="line">	log.info(job.getKey() + <span class="string">" will run at: "</span> + runTime);</div><div class="line"></div><div class="line">	<span class="comment">// 启动调度器</span></div><div class="line">	sched.start();</div><div class="line"></div><div class="line">	log.info(<span class="string">"------- Started Scheduler -----------------"</span>);</div><div class="line"></div><div class="line">	<span class="comment">// 等待1分钟</span></div><div class="line">	log.info(<span class="string">"------- Waiting 60 seconds... -------------"</span>);</div><div class="line">	<span class="keyword">try</span> &#123;</div><div class="line">	    Thread.sleep(<span class="number">60L</span> * <span class="number">1000L</span>);</div><div class="line">	&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">	    <span class="comment">//</span></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">// 关闭调度器</span></div><div class="line">	log.info(<span class="string">"------- Shutting Down ---------------------"</span>);</div><div class="line">	sched.shutdown(<span class="keyword">true</span>);</div><div class="line">	log.info(<span class="string">"------- Shutdown Complete -----------------"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line"></div><div class="line">	SimpleCronExample example = <span class="keyword">new</span> SimpleCronExample();</div><div class="line">	example.run();</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="3-spring整合quartz"><a href="#3-spring整合quartz" class="headerlink" title="3 spring整合quartz"></a>3 spring整合quartz</h3><h4 id="3-1-导入依赖"><a href="#3-1-导入依赖" class="headerlink" title="3.1 导入依赖"></a>3.1 导入依赖</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&lt;dependency&gt;</div><div class="line">	&lt;groupId&gt;org.quartz-scheduler&lt;/groupId&gt;</div><div class="line">	&lt;artifactId&gt;quartz&lt;/artifactId&gt;</div><div class="line">	&lt;version&gt;2.2.1&lt;/version&gt;</div><div class="line">&lt;/dependency&gt;</div><div class="line">&lt;!-- 支持spring整合第三方框架支持包 --&gt;</div><div class="line">&lt;dependency&gt;</div><div class="line">	&lt;groupId&gt;org.springframework&lt;/groupId&gt;</div><div class="line">	&lt;artifactId&gt;spring-context-support&lt;/artifactId&gt;</div><div class="line">	&lt;version&gt;4.0.6.RELEASE&lt;/version&gt;</div><div class="line">&lt;/dependency&gt;</div></pre></td></tr></table></figure>
<h4 id="3-2-Job类继承抽象类QuartzJobBean实现其中的executeInternal方法"><a href="#3-2-Job类继承抽象类QuartzJobBean实现其中的executeInternal方法" class="headerlink" title="3.2 Job类继承抽象类QuartzJobBean实现其中的executeInternal方法"></a>3.2 Job类继承抽象类QuartzJobBean实现其中的executeInternal方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> org.quartz.JobExecutionContext;</div><div class="line"><span class="keyword">import</span> org.quartz.JobExecutionException;</div><div class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</div><div class="line"><span class="keyword">import</span> org.springframework.scheduling.quartz.QuartzJobBean;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyJob</span> <span class="keyword">extends</span> <span class="title">QuartzJobBean</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">executeInternal</span><span class="params">(JobExecutionContext context)</span> <span class="keyword">throws</span> JobExecutionException </span>&#123;</div><div class="line">	System.out.println(<span class="string">"myJob 执行了............."</span> + context.getTrigger().getKey().getName());</div><div class="line">	ApplicationContext applicationContext = (ApplicationContext) context.getJobDetail().getJobDataMap().get(<span class="string">"applicationContext"</span>); <span class="comment">// 配置中设置applicationContext</span></div><div class="line">	System.out.println(<span class="string">"获取到的Spring容器是： "</span> + applicationContext);</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="3-3-加载scheduler配置文件-启动调度器"><a href="#3-3-加载scheduler配置文件-启动调度器" class="headerlink" title="3.3 加载scheduler配置文件(启动调度器)"></a><span id="jump">3.3 加载scheduler配置文件(启动调度器)</span></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">	<span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"classpath:applicationContext-scheduler.xml"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="3-3-1-applicationContext-scheduler-xml配置文件"><a href="#3-3-1-applicationContext-scheduler-xml配置文件" class="headerlink" title="3.3.1 applicationContext-scheduler.xml配置文件"></a>3.3.1 applicationContext-scheduler.xml配置文件</h5><blockquote>
<ul>
<li>1.定义任务job类</li>
<li>2.定义表达式触发器</li>
<li>3.定义调度器并注册触发</li>
<li><a href="#jump">4.启动spring容器(启动调度器)</a></li>
</ul>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">&lt;!-- 定义任务bean --&gt;</div><div class="line">	&lt;bean name=&quot;myJobDetail&quot; class=&quot;org.springframework.scheduling.quartz.JobDetailFactoryBean&quot;&gt;</div><div class="line">		&lt;!-- 指定具体的job类 --&gt;</div><div class="line">		&lt;property name=&quot;jobClass&quot; value=&quot;cn.test.quartz.MyJob&quot; /&gt;</div><div class="line">		&lt;!-- 指定job的名称 --&gt;</div><div class="line">		&lt;property name=&quot;name&quot; value=&quot;myJob&quot; /&gt;</div><div class="line">		&lt;!-- 指定job的分组 --&gt;</div><div class="line">		&lt;property name=&quot;group&quot; value=&quot;jobs&quot; /&gt;</div><div class="line">		&lt;!-- 必须设置为true，如果为false，当没有活动的触发器与之关联时会在调度器中删除该任务 --&gt;</div><div class="line">		&lt;property name=&quot;durability&quot; value=&quot;true&quot; /&gt;</div><div class="line">		&lt;!-- 指定spring容器的key，如果不设定在job中的jobmap中是获取不到spring容器的 --&gt;</div><div class="line">		&lt;property name=&quot;applicationContextJobDataKey&quot; value=&quot;applicationContext&quot; /&gt;</div><div class="line">	&lt;/bean&gt;</div><div class="line"></div><div class="line">	&lt;!-- 定义触发器 --&gt;</div><div class="line">	&lt;bean id=&quot;cronTrigger&quot; class=&quot;org.springframework.scheduling.quartz.CronTriggerFactoryBean&quot;&gt;</div><div class="line">		&lt;!-- 一个触发器只能有一个job，因为CronTriggerFactoryBean中没有setJobDetails --&gt;</div><div class="line">		&lt;property name=&quot;jobDetail&quot; ref=&quot;myJobDetail&quot; /&gt;</div><div class="line">		&lt;!-- 每一分钟执行一次 --&gt;</div><div class="line">		&lt;property name=&quot;cronExpression&quot; value=&quot;0/5 * * * * ?&quot; /&gt;</div><div class="line">	&lt;/bean&gt;</div><div class="line"></div><div class="line">	&lt;!-- 定义触发器 --&gt;</div><div class="line">	&lt;!-- 演示：一个job可以有多个trigger； --&gt;</div><div class="line">	&lt;!-- &lt;bean id=&quot;cronTrigger2&quot; class=&quot;org.springframework.scheduling.quartz.CronTriggerFactoryBean&quot;&gt; &lt;property name=&quot;jobDetail&quot; ref=&quot;myJobDetail&quot; /&gt; 每一分钟执行一次 &lt;property name=&quot;cronExpression&quot; value=&quot;0 */1 </div><div class="line">		* * * ?&quot; /&gt; &lt;/bean&gt; --&gt;</div><div class="line">	&lt;!-- 定义调度器 --&gt;</div><div class="line">	&lt;bean class=&quot;org.springframework.scheduling.quartz.SchedulerFactoryBean&quot;&gt;</div><div class="line">		&lt;property name=&quot;triggers&quot;&gt;</div><div class="line">			&lt;list&gt;</div><div class="line">				&lt;ref bean=&quot;cronTrigger&quot; /&gt;</div><div class="line">				&lt;ref bean=&quot;cronTrigger2&quot; /&gt;</div><div class="line">			&lt;/list&gt;</div><div class="line">		&lt;/property&gt;</div><div class="line">	&lt;/bean&gt;</div></pre></td></tr></table></figure>
<h3 id="4-使用org-springframework-scheduling-concurrent-ThreadPoolTaskExecutor多线程执行任务"><a href="#4-使用org-springframework-scheduling-concurrent-ThreadPoolTaskExecutor多线程执行任务" class="headerlink" title="4 使用org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor多线程执行任务"></a>4 使用org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor多线程执行任务</h3><p>ThreadPoolTaskExecutor线程池，用来并行执行每个对应的job，提高效率，这也是上面提到不推荐使用jdk自身timer的一个很重要的原因</p>
<h4 id="4-1-job类"><a href="#4-1-job类" class="headerlink" title="4.1 job类"></a>4.1 job类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyJobThread</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">()</span> </span>&#123;</div><div class="line">	ThreadPoolTaskExecutor jobPropertyConfigurer = (ThreadPoolTaskExecutor) ContextUtil.getBean(<span class="string">"executor"</span>);</div><div class="line">	jobPropertyConfigurer.execute(<span class="keyword">new</span> TestThread()); <span class="comment">// 单个线程加入到线程池中执行，可加入多个线程到线程池</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="4-2-需要执行的线程类"><a href="#4-2-需要执行的线程类" class="headerlink" title="4.2 需要执行的线程类"></a>4.2 需要执行的线程类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * <span class="doctag">@ClassName</span> TestThread</div><div class="line"> * <span class="doctag">@Author</span> volc</div><div class="line"> * <span class="doctag">@Description</span> 需要执行的线程类</div><div class="line"> * <span class="doctag">@Date</span> 2017年4月10日 上午12:55:36</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestThread</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">	System.out.println(<span class="string">"执行了线程"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="4-3-启动调度器"><a href="#4-3-启动调度器" class="headerlink" title="4.3 启动调度器"></a>4.3 启动调度器</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> org.springframework.beans.BeansException;</div><div class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</div><div class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * <span class="doctag">@ClassName</span> ContextUtil</div><div class="line"> * <span class="doctag">@Author</span> volc</div><div class="line"> * <span class="doctag">@Description</span> 获取ApplicationContext对象工具类，用于方取出注入的bean</div><div class="line"> * <span class="doctag">@Date</span> 2017年4月10日 上午12:08:58</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ContextUtil</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ApplicationContext context;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ApplicationContext <span class="title">getContext</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">return</span> context;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">getBean</span><span class="params">(String beanName)</span> </span>&#123;</div><div class="line">	<span class="keyword">return</span> context.getBean(beanName);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setApplicationContext</span><span class="params">(ApplicationContext applicationContext)</span> <span class="keyword">throws</span> BeansException </span>&#123;</div><div class="line">	context = applicationContext;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// 启动调度器</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">	context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="keyword">new</span> String[] &#123; <span class="string">"applicationContext-schedulerThread.xml"</span> &#125;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="4-4-scheduler配置文件applicationContext-schedulerThread-xml"><a href="#4-4-scheduler配置文件applicationContext-schedulerThread-xml" class="headerlink" title="4.4 scheduler配置文件applicationContext-schedulerThread.xml"></a>4.4 scheduler配置文件applicationContext-schedulerThread.xml</h4><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line">&lt;beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"</div><div class="line">	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"</div><div class="line">	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd</div><div class="line">	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd</div><div class="line">	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd</div><div class="line">	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd"&gt;</div><div class="line"></div><div class="line">	&lt;!-- 线程执行器配置，用于任务注册 --&gt;</div><div class="line">	&lt;bean id="executor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"&gt;</div><div class="line">		&lt;property name="corePoolSize" value="10" /&gt;</div><div class="line">		&lt;property name="maxPoolSize" value="100" /&gt;</div><div class="line">		&lt;property name="queueCapacity" value="500" /&gt;</div><div class="line">	&lt;/bean&gt;</div><div class="line"></div><div class="line">	&lt;bean id="testJobTask" class="cn.test.quartz.MyJobThread" /&gt;</div><div class="line"></div><div class="line">	&lt;!-- 定义任务bean --&gt;</div><div class="line">	&lt;bean name="myJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean"&gt;</div><div class="line">		&lt;property name="targetObject" ref="testJobTask" /&gt;</div><div class="line">		&lt;property name="targetMethod" value="service" /&gt;</div><div class="line">	&lt;/bean&gt;</div><div class="line"></div><div class="line">	&lt;!-- 定义触发器 --&gt;</div><div class="line">	&lt;bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean"&gt;</div><div class="line">		&lt;property name="jobDetail" ref="myJobDetail" /&gt;</div><div class="line">		&lt;!-- 每一分钟执行一次 --&gt;</div><div class="line">		&lt;property name="cronExpression" value="0/5 * * * * ?" /&gt;</div><div class="line">	&lt;/bean&gt;</div><div class="line"></div><div class="line">	&lt;!-- 定义触发器 --&gt;</div><div class="line">	&lt;!-- 演示：一个job可以有多个trigger； --&gt;</div><div class="line">	&lt;!-- &lt;bean id="cronTrigger2" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean"&gt; &lt;property name="jobDetail" ref="myJobDetail" /&gt; 每一分钟执行一次 &lt;property name="cronExpression" value="0 */1 </div><div class="line">		* * * ?" /&gt; &lt;/bean&gt; --&gt;</div><div class="line">	&lt;!-- 定义调度器 --&gt;</div><div class="line">	&lt;bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean"&gt;</div><div class="line">		&lt;property name="triggers"&gt;</div><div class="line">			&lt;list&gt;</div><div class="line">				&lt;ref bean="cronTrigger" /&gt;</div><div class="line">				&lt;!-- &lt;ref bean="cronTrigger2" /&gt; --&gt;</div><div class="line">			&lt;/list&gt;</div><div class="line">		&lt;/property&gt;</div><div class="line">		&lt;!-- ThreadPoolTaskExecutor，线程池，用来并行执行每个对应的job，提高效率，这也是上面提到不推荐使用jdk自身timer的一个很重要的原因 --&gt;</div><div class="line">		&lt;property name="taskExecutor" ref="executor" /&gt;</div><div class="line">	&lt;/bean&gt;</div><div class="line"></div><div class="line">&lt;/beans&gt;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">执行了线程</div><div class="line">2017-04-10 00:58:30,016 [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_QuartzSchedulerThread] [org.quartz.core.QuartzSchedulerThread]-[DEBUG] batch acquisition of 1 triggers</div><div class="line">2017-04-10 00:58:35,004 [executor-4] [org.quartz.core.JobRunShell]-[DEBUG] Calling execute on job DEFAULT.myJobDetail</div><div class="line">2017-04-10 00:58:35,004 [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_QuartzSchedulerThread] [org.quartz.core.QuartzSchedulerThread]-[DEBUG] batch acquisition of 1 triggers</div><div class="line">2017-04-10 00:58:35,004 [executor-4] [org.springframework.beans.factory.support.DefaultListableBeanFactory]-[DEBUG] Returning cached instance of singleton bean &apos;executor&apos;</div><div class="line">执行了线程</div><div class="line">2017-04-10 00:58:40,011 [executor-5] [org.quartz.core.JobRunShell]-[DEBUG] Calling execute on job DEFAULT.myJobDetail</div><div class="line">2017-04-10 00:58:40,011 [executor-5] [org.springframework.beans.factory.support.DefaultListableBeanFactory]-[DEBUG] Returning cached instance of singleton bean &apos;executor&apos;</div><div class="line">执行了线程</div><div class="line">2017-04-10 00:58:40,012 [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_QuartzSchedulerThread] [org.quartz.core.QuartzSchedulerThread]-[DEBUG] batch acquisition of 1 triggers</div><div class="line">2017-04-10 00:58:45,001 [executor-7] [org.quartz.core.JobRunShell]-[DEBUG] Calling execute on job DEFAULT.myJobDetail</div><div class="line">2017-04-10 00:58:45,001 [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_QuartzSchedulerThread] [org.quartz.core.QuartzSchedulerThread]-[DEBUG] batch acquisition of 1 triggers</div><div class="line">2017-04-10 00:58:45,001 [executor-7] [org.springframework.beans.factory.support.DefaultListableBeanFactory]-[DEBUG] Returning cached instance of singleton bean &apos;executor&apos;</div><div class="line">执行了线程</div></pre></td></tr></table></figure>
<hr>
<h3 id="5-quratz-cron表达式"><a href="#5-quratz-cron表达式" class="headerlink" title="5 quratz cron表达式"></a>5 quratz cron表达式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line">1.	CronTrigger</div><div class="line">CronTriggers往往比SimpleTrigger更有用，如果您需要基于日历的概念，而非SimpleTrigger完全指定的时间间隔，复发的发射工作的时间表。</div><div class="line">CronTrigger，你可以指定触发的时间表如“每星期五中午”，或“每个工作日9:30时”，甚至“每5分钟一班9:00和10:00逢星期一上午，星期三星期五“。</div><div class="line">即便如此，SimpleTrigger一样，CronTrigger拥有的startTime指定的时间表时生效，指定的时间表时，应停止（可选）结束时间。</div><div class="line">2.	Cron Expressions</div><div class="line">cron的表达式被用来配置CronTrigger实例。 cron的表达式是字符串，实际上是由七子表达式，描述个别细节的时间表。这些子表达式是分开的空白，代表：</div><div class="line">1.	1.        Seconds</div><div class="line">2.	2.        Minutes</div><div class="line">3.	3.        Hours</div><div class="line">4.	4.        Day-of-Month</div><div class="line">5.	5.        Month</div><div class="line">6.	6.        Day-of-Week</div><div class="line">7.	7.        Year (可选字段)</div><div class="line">例  &quot;0 0 12 ? * WED&quot; 在每星期三下午12:00 执行,</div><div class="line">个别子表达式可以包含范围, 例如，在前面的例子里(&quot;WED&quot;)可以替换成 &quot;MON-FRI&quot;, &quot;MON, WED, FRI&quot;甚至&quot;MON-WED,SAT&quot;.</div><div class="line">“*” 代表整个时间段.</div><div class="line">每一个字段都有一套可以指定有效值，如</div><div class="line">Seconds (秒)         ：可以用数字0－59 表示，</div><div class="line">Minutes(分)          ：可以用数字0－59 表示，</div><div class="line">Hours(时)             ：可以用数字0-23表示,</div><div class="line">Day-of-Month(天) ：可以用数字1-31 中的任一一个值，但要注意一些特别的月份</div><div class="line">Month(月)            ：可以用0-11 或用字符串  “JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV and DEC” 表示</div><div class="line">Day-of-Week(每周)：可以用数字1-7表示（1 ＝ 星期日）或用字符口串“SUN, MON, TUE, WED, THU, FRI and SAT”表示</div><div class="line">“/”：为特别单位，表示为“每”如“0/15”表示每隔15分钟执行一次,“0”表示为从“0”分开始, “3/20”表示表示每隔20分钟执行一次，“3”表示从第3分钟开始执行</div><div class="line">“?”：表示每月的某一天，或第周的某一天</div><div class="line">“L”：用于每月，或每周，表示为每月的最后一天，或每个月的最后星期几如“6L”表示“每月的最后一个星期五”</div><div class="line">“W”：表示为最近工作日，如“15W”放在每月（day-of-month）字段上表示为“到本月15日最近的工作日”</div><div class="line">““#”：是用来指定“的”每月第n个工作日,例 在每周（day-of-week）这个字段中内容为&quot;6#3&quot; or &quot;FRI#3&quot; 则表示“每月第三个星期五”</div><div class="line"> </div><div class="line">1）Cron表达式的格式：秒 分 时 日 月 周 年(可选)。</div><div class="line">               字段名                 允许的值                        允许的特殊字符  </div><div class="line">               秒                         0-59                               , - * /  </div><div class="line">               分                         0-59                               , - * /  </div><div class="line">               小时                     0-23                               , - * /  </div><div class="line">               日                         1-31                               , - * ? / L W C  </div><div class="line">               月                         1-12 or JAN-DEC         , - * /  </div><div class="line">               周几                     1-7 or SUN-SAT           , - * ? / L C #  </div><div class="line">               年 (可选字段)     empty, 1970-2099      , - * /</div><div class="line"> </div><div class="line">               “?”字符：表示不确定的值</div><div class="line">               “,”字符：指定数个值</div><div class="line">               “-”字符：指定一个值的范围</div><div class="line">               “/”字符：指定一个值的增加幅度。n/m表示从n开始，每次增加m</div><div class="line">               “L”字符：用在日表示一个月中的最后一天，用在周表示该月最后一个星期X</div><div class="line">               “W”字符：指定离给定日期最近的工作日(周一到周五)</div><div class="line">               “#”字符：表示该月第几个周X。6#3表示该月第3个周五</div><div class="line"> </div><div class="line"> </div><div class="line">         2）Cron表达式范例：</div><div class="line">                 每隔5秒执行一次：*/5 * * * * ?</div><div class="line">                 每隔1分钟执行一次：0 */1 * * * ?</div><div class="line">                 每天23点执行一次：0 0 23 * * ?</div><div class="line">                 每天凌晨1点执行一次：0 0 1 * * ?</div><div class="line">                 每月1号凌晨1点执行一次：0 0 1 1 * ?</div><div class="line">                 每月最后一天23点执行一次：0 0 23 L * ?</div><div class="line">                 每周星期天凌晨1点实行一次：0 0 1 ? * L</div><div class="line">                 在26分、29分、33分执行一次：0 26,29,33 * * * ?</div><div class="line">                 每天的0点、13点、18点、21点都执行一次：0 0 0,13,18,21 * * ?</div></pre></td></tr></table></figure>
<p>生成cron表达式工具:<br><a href="http://pan.baidu.com/s/1pKZKQWb" target="_blank" rel="external">CronExpBuilder-1.0(触发器表达式生成器).jar</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[收发邮件]]></title>
      <url>https://volc1605.github.io/2017/04/08/%E6%94%B6%E5%8F%91%E9%82%AE%E4%BB%B6/</url>
      <content type="html"><![CDATA[<h3 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h3><a id="more"></a>
<h4 id="设置邮件标记"><a href="#设置邮件标记" class="headerlink" title="设置邮件标记"></a>设置邮件标记</h4><p>这个标记跟随email，用于区分是否为系统发送邮件，进行同步各用户邮件服务的邮件<br>有两种方式：<br>1.邮件对象设置内容ID(不推荐，容易丢失数据)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">msg.setContentID();</div></pre></td></tr></table></figure></p>
<p>2.邮件对象设置handler(推荐)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">msg.setHeader(&quot;key&quot;,&quot;value&quot;);</div></pre></td></tr></table></figure>
<p>3.IMAP解析<br>使用IMAP进行解析就可以获取该邮件的标识，来进行判断是否为外部系统发送的邮件，再同步该邮件到本地<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">msg.getContentID();</div><div class="line">String[] header = msg.getHeader(&quot;key&quot;);</div><div class="line">for (String s : header) &#123;</div><div class="line">	System.out.println(&quot;设定唯一标记&quot; + s);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<hr>
<h3 id="1-javamail收发邮件"><a href="#1-javamail收发邮件" class="headerlink" title="1 javamail收发邮件"></a>1 javamail收发邮件</h3><p>操作邮件收发需要服务开启POP3/SMTP服务。<br>引入javamailjar包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;!-- https://mvnrepository.com/artifact/javax.mail/mail --&gt;</div><div class="line">&lt;dependency&gt;</div><div class="line">    &lt;groupId&gt;javax.mail&lt;/groupId&gt;</div><div class="line">    &lt;artifactId&gt;mail&lt;/artifactId&gt;</div><div class="line">    &lt;version&gt;1.4&lt;/version&gt;</div><div class="line">&lt;/dependency&gt;</div></pre></td></tr></table></figure></p>
<p>验证邮件账号<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> test;</div><div class="line"></div><div class="line"><span class="keyword">import</span> javax.mail.Authenticator;</div><div class="line"><span class="keyword">import</span> javax.mail.PasswordAuthentication;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * <span class="doctag">@author</span> Administrator</div><div class="line"> *         发送邮件验证发送人账号</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmailAutherticator</span> <span class="keyword">extends</span> <span class="title">Authenticator</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> String m_username = <span class="keyword">null</span>;</div><div class="line">    <span class="keyword">private</span> String m_userpass = <span class="keyword">null</span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123;</div><div class="line">        m_username = username;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserpass</span><span class="params">(String userpass)</span> </span>&#123;</div><div class="line">        m_userpass = userpass;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">EmailAutherticator</span><span class="params">(String username, String userpass)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>();</div><div class="line">        setUsername(username);</div><div class="line">        setUserpass(userpass);</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> PasswordAuthentication <span class="title">getPasswordAuthentication</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> PasswordAuthentication(m_username, m_userpass);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>发邮件<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> test;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.Date;</div><div class="line"><span class="keyword">import</span> java.util.Properties;</div><div class="line"><span class="keyword">import</span> javax.activation.DataHandler;</div><div class="line"><span class="keyword">import</span> javax.activation.FileDataSource;</div><div class="line"><span class="keyword">import</span> javax.mail.Authenticator;</div><div class="line"><span class="keyword">import</span> javax.mail.Multipart;</div><div class="line"><span class="keyword">import</span> javax.mail.internet.InternetAddress;</div><div class="line"><span class="keyword">import</span> javax.mail.internet.MimeBodyPart;</div><div class="line"><span class="keyword">import</span> javax.mail.internet.MimeMultipart;</div><div class="line"><span class="keyword">import</span> javax.mail.internet.MimeUtility;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 利用java.mail的邮件发送程序</div><div class="line"> */</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SendMail</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        String title = <span class="string">"公司信息"</span>; <span class="comment">// 发送邮件主题</span></div><div class="line">        <span class="comment">// String from = ""; // 发送人邮箱账号</span></div><div class="line">        String from = <span class="string">""</span>;</div><div class="line">        String sendTo[] = &#123;<span class="string">""</span>, <span class="string">""</span>&#125;; <span class="comment">// 收件人邮箱账号</span></div><div class="line"></div><div class="line">        <span class="comment">// 邮件的文本内容，可以包含html标记则显示为html页面</span></div><div class="line">        <span class="comment">// String content = "内容含有html变迁支持mail test!!!!!!&lt;br&gt;&lt;a href=#&gt;aaa&lt;/a&gt;";</span></div><div class="line">        String content = <span class="string">"gongsixinxi&lt;a href=\"#\"&gt;111&lt;/a&gt;"</span>;</div><div class="line">        <span class="comment">// 上传多个附件及修改附件名称</span></div><div class="line">        String fileNames[] = &#123;<span class="string">"F:\\javamail\\mailtmp\\attachment\\test\\test.txt,test.txt"</span>,</div><div class="line">                <span class="string">"F:\\javamail\\mailtmp\\attachment\\test.txt,哈哈.txt"</span>&#125;;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="comment">// MailSender mailsender = new MailSender(); // 封装为邮件对象存储本次邮件信息</span></div><div class="line">            sendmail(title, from, sendTo, content, fileNames, <span class="string">"text/html;charset=gb2312"</span>);</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception ex) &#123;</div><div class="line">            ex.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@SuppressWarnings</span>(<span class="string">"static-access"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sendmail</span><span class="params">(String subject, String from, String[] to, String text, String[] filenames,</span></span></div><div class="line">                                String mimeType) <span class="keyword">throws</span> Exception &#123;</div><div class="line">        <span class="comment">// ResourceBundle mailProps = ResourceBundle.getBundle("mail");</span></div><div class="line">        <span class="comment">// 可以从配置文件读取相应的参数</span></div><div class="line">        Properties props = <span class="keyword">new</span> Properties();</div><div class="line"></div><div class="line">        String smtp = <span class="string">"smtp.qq.com"</span>; <span class="comment">// 使用smtp协议传输，对应发送端的邮件服务器</span></div><div class="line">        String servername = <span class="string">""</span>; <span class="comment">// 发件人账号</span></div><div class="line">        String serverpaswd = <span class="string">""</span>; <span class="comment">// 发件人邮箱密码</span></div><div class="line"></div><div class="line">        javax.mail.Session mailSession; <span class="comment">// 邮件会话对象</span></div><div class="line">        javax.mail.internet.MimeMessage mimeMsg; <span class="comment">// MIME邮件对象</span></div><div class="line"></div><div class="line">        props = System.getProperties(); <span class="comment">// 获得系统属性对象</span></div><div class="line">        props.put(<span class="string">"mail.smtp.host"</span>, smtp); <span class="comment">// 设置SMTP主机</span></div><div class="line">        props.put(<span class="string">"mail.smtp.auth"</span>, <span class="string">"true"</span>); <span class="comment">// 设置为默认验证用户名和密码</span></div><div class="line"></div><div class="line">        <span class="comment">// 统一使用ssl协议端口, qq邮箱服务需要ssl协议认证，否侧返回530错误</span></div><div class="line">        <span class="keyword">final</span> String smtpPort = <span class="string">"465"</span>;</div><div class="line">        props.setProperty(<span class="string">"mail.smtp.port"</span>, smtpPort);</div><div class="line">        props.setProperty(<span class="string">"mail.smtp.socketFactory.class"</span>, <span class="string">"javax.net.ssl.SSLSocketFactory"</span>);</div><div class="line">        props.setProperty(<span class="string">"mail.smtp.socketFactory.fallback"</span>, <span class="string">"false"</span>);</div><div class="line">        props.setProperty(<span class="string">"mail.smtp.socketFactory.port"</span>, smtpPort);</div><div class="line"></div><div class="line">        <span class="comment">// 到服务器验证发送的用户名和密码是否正确</span></div><div class="line">        EmailAutherticator myEmailAuther = <span class="keyword">new</span> EmailAutherticator(servername, serverpaswd);</div><div class="line">        <span class="comment">// 设置邮件会话</span></div><div class="line">        mailSession = javax.mail.Session.getInstance(props, (Authenticator) myEmailAuther);</div><div class="line"></div><div class="line">        <span class="comment">// 设置debug打印信息</span></div><div class="line">        mailSession.setDebug(<span class="keyword">true</span>);</div><div class="line"></div><div class="line">        <span class="comment">// 设置传输协议</span></div><div class="line">        javax.mail.Transport transport = mailSession.getTransport(<span class="string">"smtp"</span>);</div><div class="line">        <span class="comment">// 设置from、to等信息</span></div><div class="line">        mimeMsg = <span class="keyword">new</span> javax.mail.internet.MimeMessage(mailSession);</div><div class="line">        <span class="keyword">if</span> (!from.isEmpty()) &#123;</div><div class="line"></div><div class="line">            InternetAddress sentFrom = <span class="keyword">new</span> InternetAddress(from);</div><div class="line">            mimeMsg.setFrom(sentFrom); <span class="comment">// 设置发送人地址</span></div><div class="line">        &#125;</div><div class="line"></div><div class="line">        InternetAddress[] sendTo = <span class="keyword">new</span> InternetAddress[to.length];</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; to.length; i++) &#123;</div><div class="line">            System.out.println(<span class="string">"发送到:"</span> + to[i]);</div><div class="line">            sendTo[i] = <span class="keyword">new</span> InternetAddress(to[i]);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        mimeMsg.setRecipients(javax.mail.internet.MimeMessage.RecipientType.TO, sendTo);</div><div class="line">        mimeMsg.setSubject(subject, <span class="string">"gb2312"</span>);</div><div class="line"></div><div class="line">        MimeBodyPart messageBodyPart1 = <span class="keyword">new</span> MimeBodyPart();</div><div class="line">        <span class="comment">// messageBodyPart.setText(UnicodeToChinese(text));</span></div><div class="line">        messageBodyPart1.setContent(text, mimeType);</div><div class="line"></div><div class="line">        Multipart multipart = <span class="keyword">new</span> MimeMultipart();<span class="comment">// 附件传输格式</span></div><div class="line">        multipart.addBodyPart(messageBodyPart1);</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; filenames.length; i++) &#123;</div><div class="line">            MimeBodyPart messageBodyPart2 = <span class="keyword">new</span> MimeBodyPart();</div><div class="line">            <span class="comment">// 选择出每一个附件名</span></div><div class="line">            String filename = filenames[i].split(<span class="string">","</span>)[<span class="number">0</span>];</div><div class="line">            System.out.println(<span class="string">"附件名："</span> + filename);</div><div class="line">            String displayname = filenames[i].split(<span class="string">","</span>)[<span class="number">1</span>];</div><div class="line">            <span class="comment">// 得到数据源</span></div><div class="line">            FileDataSource fds = <span class="keyword">new</span> FileDataSource(filename);</div><div class="line">            <span class="comment">// 得到附件本身并至入BodyPart</span></div><div class="line">            messageBodyPart2.setDataHandler(<span class="keyword">new</span> DataHandler(fds));</div><div class="line">            <span class="comment">// 得到文件名同样至入BodyPart</span></div><div class="line">            <span class="comment">// messageBodyPart2.setFileName(displayname);</span></div><div class="line">            <span class="comment">// messageBodyPart2.setFileName(fds.getName());</span></div><div class="line">            messageBodyPart2.setFileName(MimeUtility.encodeText(displayname));</div><div class="line">            multipart.addBodyPart(messageBodyPart2);</div><div class="line">        &#125;</div><div class="line">        mimeMsg.setContent(multipart);</div><div class="line">        <span class="comment">// 设置信件头的发送日期</span></div><div class="line">        mimeMsg.setSentDate(<span class="keyword">new</span> Date());</div><div class="line">        mimeMsg.saveChanges();</div><div class="line">        <span class="comment">// 发送邮件</span></div><div class="line">        transport.send(mimeMsg);</div><div class="line">        System.out.println(<span class="string">" 邮件发送成功.. "</span>);</div><div class="line">        transport.close();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>使用pop3解析邮件<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div><div class="line">370</div><div class="line">371</div><div class="line">372</div><div class="line">373</div><div class="line">374</div><div class="line">375</div><div class="line">376</div><div class="line">377</div><div class="line">378</div><div class="line">379</div><div class="line">380</div><div class="line">381</div><div class="line">382</div><div class="line">383</div><div class="line">384</div><div class="line">385</div><div class="line">386</div><div class="line">387</div><div class="line">388</div><div class="line">389</div><div class="line">390</div><div class="line">391</div><div class="line">392</div><div class="line">393</div><div class="line">394</div><div class="line">395</div><div class="line">396</div><div class="line">397</div><div class="line">398</div><div class="line">399</div><div class="line">400</div><div class="line">401</div><div class="line">402</div><div class="line">403</div><div class="line">404</div><div class="line">405</div><div class="line">406</div><div class="line">407</div><div class="line">408</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> test;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.BufferedInputStream;</div><div class="line"><span class="keyword">import</span> java.io.BufferedOutputStream;</div><div class="line"><span class="keyword">import</span> java.io.File;</div><div class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</div><div class="line"><span class="keyword">import</span> java.io.FileOutputStream;</div><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> java.io.InputStream;</div><div class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</div><div class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</div><div class="line"><span class="keyword">import</span> java.util.Date;</div><div class="line"><span class="keyword">import</span> java.util.Properties;</div><div class="line"><span class="keyword">import</span> javax.mail.Address;</div><div class="line"><span class="keyword">import</span> javax.mail.BodyPart;</div><div class="line"><span class="keyword">import</span> javax.mail.FetchProfile;</div><div class="line"><span class="keyword">import</span> javax.mail.Flags;</div><div class="line"><span class="keyword">import</span> javax.mail.Folder;</div><div class="line"><span class="keyword">import</span> javax.mail.Message;</div><div class="line"><span class="keyword">import</span> javax.mail.MessagingException;</div><div class="line"><span class="keyword">import</span> javax.mail.Multipart;</div><div class="line"><span class="keyword">import</span> javax.mail.Part;</div><div class="line"><span class="keyword">import</span> javax.mail.Session;</div><div class="line"><span class="keyword">import</span> javax.mail.Store;</div><div class="line"><span class="keyword">import</span> javax.mail.URLName;</div><div class="line"><span class="keyword">import</span> javax.mail.internet.InternetAddress;</div><div class="line"><span class="keyword">import</span> javax.mail.internet.MimeMessage;</div><div class="line"><span class="keyword">import</span> javax.mail.internet.MimeMultipart;</div><div class="line"><span class="keyword">import</span> javax.mail.internet.MimeUtility;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 使用POP3协议接收邮件</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">POP3ReceiveMail</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">        receive();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 接收邮件</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">receive</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">        <span class="comment">// 准备连接服务器的会话信息</span></div><div class="line">        <span class="keyword">final</span> String SSL_FACTORY = <span class="string">"javax.net.ssl.SSLSocketFactory"</span>;</div><div class="line">        Properties props = <span class="keyword">new</span> Properties();</div><div class="line">        props.setProperty(<span class="string">"mail.pop3.host"</span>, <span class="string">"smtp.163.com"</span>);</div><div class="line">        props.setProperty(<span class="string">"mail.pop3.socketFactory.class"</span>, SSL_FACTORY);</div><div class="line">        props.setProperty(<span class="string">"mail.pop3.socketFactory.fallback"</span>, <span class="string">"false"</span>);</div><div class="line">        props.setProperty(<span class="string">"mail.pop3.port"</span>, <span class="string">"995"</span>);</div><div class="line">        props.setProperty(<span class="string">"mail.pop3.socketFactory.port"</span>, <span class="string">"995"</span>);</div><div class="line">        props.setProperty(<span class="string">"mail.pop3.auth"</span>, <span class="string">"true"</span>);</div><div class="line"></div><div class="line">        <span class="comment">// 建立会话</span></div><div class="line">        Session session = Session.getDefaultInstance(props, <span class="keyword">null</span>);</div><div class="line">        <span class="comment">// 设置连接邮件仓库的环境</span></div><div class="line">        URLName url = <span class="keyword">new</span> URLName(<span class="string">"pop3"</span>, <span class="string">"pop.163.com"</span>, <span class="number">995</span>, <span class="keyword">null</span>, <span class="string">""</span>, <span class="string">""</span>); <span class="comment">// 后两个参数发送账号和密码</span></div><div class="line">        Store store = <span class="keyword">null</span>;</div><div class="line">        Folder folder = <span class="keyword">null</span>;</div><div class="line"></div><div class="line">        <span class="comment">// 得到邮件仓库并连接</span></div><div class="line">        store = session.getStore(url);</div><div class="line">        store.connect();</div><div class="line"></div><div class="line">        <span class="comment">// 得到收件箱并抓取邮件</span></div><div class="line">        folder = store.getFolder(<span class="string">"INBOX"</span>);</div><div class="line">        <span class="comment">/*</span></div><div class="line">         * Folder.READ_ONLY：只读权限 Folder.READ_WRITE：可读可写（可以修改邮件的状态）</div><div class="line">		 */</div><div class="line">        folder.open(Folder.READ_ONLY);</div><div class="line"></div><div class="line">        FetchProfile profile = <span class="keyword">new</span> FetchProfile();</div><div class="line">        profile.add(FetchProfile.Item.ENVELOPE);</div><div class="line">        <span class="comment">// 获取收件箱邮件</span></div><div class="line">        Message[] messages = folder.getMessages();</div><div class="line">        folder.fetch(messages, profile);</div><div class="line">        <span class="comment">// 由于POP3协议无法获知邮件的状态,所以getUnreadMessageCount得到的是收件箱的邮件总数</span></div><div class="line">        System.out.println(<span class="string">"未读邮件数: "</span> + folder.getUnreadMessageCount());</div><div class="line"></div><div class="line">        <span class="comment">// 由于POP3协议无法获知邮件的状态,所以下面得到的结果始终都是为0</span></div><div class="line">        System.out.println(<span class="string">"删除邮件数: "</span> + folder.getDeletedMessageCount());</div><div class="line">        System.out.println(<span class="string">"新邮件: "</span> + folder.getNewMessageCount());</div><div class="line"></div><div class="line">        <span class="comment">// 获得收件箱中的邮件总数</span></div><div class="line">        System.out.println(<span class="string">"邮件总数: "</span> + folder.getMessageCount());</div><div class="line"></div><div class="line">        <span class="comment">// 解析获取到的邮件f</span></div><div class="line">        parseMessage(messages);</div><div class="line"></div><div class="line">        <span class="comment">// 释放资源</span></div><div class="line">        folder.close(<span class="keyword">true</span>);</div><div class="line">        store.close();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 解析邮件</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> messages 要解析的邮件列表</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">parseMessage</span><span class="params">(Message... messages)</span> <span class="keyword">throws</span> MessagingException, IOException </span>&#123;</div><div class="line">        <span class="keyword">if</span> (messages == <span class="keyword">null</span> || messages.length &lt; <span class="number">1</span>)</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> MessagingException(<span class="string">"未找到要解析的邮件!"</span>);</div><div class="line"></div><div class="line">        <span class="comment">// 解析所有邮件</span></div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, count = messages.length; i &lt; count; i++) &#123;</div><div class="line">            MimeMessage msg = (MimeMessage) messages[i];</div><div class="line">            System.out.println(<span class="string">"------------------解析第"</span> + msg.getMessageNumber() + <span class="string">"封邮件-------------------- "</span>);</div><div class="line">            System.out.println(<span class="string">"主题: "</span> + getSubject(msg));</div><div class="line">            System.out.println(<span class="string">"发件人: "</span> + getFrom(msg));</div><div class="line">            System.out.println(<span class="string">"收件人："</span> + getReceiveAddress(msg, <span class="keyword">null</span>));</div><div class="line">            System.out.println(<span class="string">"发送时间："</span> + getSentDate(msg, <span class="keyword">null</span>));</div><div class="line">            System.out.println(<span class="string">"是否已读："</span> + isSeen(msg));</div><div class="line">            System.out.println(<span class="string">"邮件优先级："</span> + getPriority(msg));</div><div class="line">            System.out.println(<span class="string">"是否需要回执："</span> + isReplySign(msg));</div><div class="line">            System.out.println(<span class="string">"邮件大小："</span> + msg.getSize() * <span class="number">1024</span> + <span class="string">"kb"</span>);</div><div class="line">            <span class="keyword">boolean</span> isContainerAttachment = isContainAttachment(msg);</div><div class="line">            System.out.println(<span class="string">"是否包含附件："</span> + isContainerAttachment);</div><div class="line">            <span class="keyword">if</span> (isContainerAttachment) &#123;</div><div class="line">                saveAttachment(msg, <span class="string">"F:\\javamail\\mailtmp\\"</span> + msg.getSubject() + <span class="string">"_"</span>); <span class="comment">// 保存附件</span></div><div class="line">            &#125;</div><div class="line">            StringBuffer content = <span class="keyword">new</span> StringBuffer(<span class="number">30</span>);</div><div class="line">            getMailTextContent(msg, content);</div><div class="line">            System.out.println(<span class="string">"邮件正文："</span> + (content.length() &gt; <span class="number">100</span> ? content.substring(<span class="number">0</span>, <span class="number">100</span>) + <span class="string">"..."</span> : content));</div><div class="line">            System.out.println(<span class="string">"------------------第"</span> + msg.getMessageNumber() + <span class="string">"封邮件解析结束-------------------- "</span>);</div><div class="line">            System.out.println();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 获得邮件主题</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> msg 邮件内容</div><div class="line">     * <span class="doctag">@return</span> 解码后的邮件主题</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getSubject</span><span class="params">(MimeMessage msg)</span> <span class="keyword">throws</span> UnsupportedEncodingException, MessagingException </span>&#123;</div><div class="line">        <span class="keyword">return</span> MimeUtility.decodeText(msg.getSubject());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 获得邮件发件人</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> msg 邮件内容</div><div class="line">     * <span class="doctag">@return</span> 姓名 &lt;Email地址&gt;</div><div class="line">     * <span class="doctag">@throws</span> MessagingException</div><div class="line">     * <span class="doctag">@throws</span> UnsupportedEncodingException</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getFrom</span><span class="params">(MimeMessage msg)</span> <span class="keyword">throws</span> MessagingException, UnsupportedEncodingException </span>&#123;</div><div class="line">        String from = <span class="string">""</span>;</div><div class="line">        Address[] froms = msg.getFrom();</div><div class="line">        <span class="keyword">if</span> (froms.length &lt; <span class="number">1</span>)</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> MessagingException(<span class="string">"没有发件人!"</span>);</div><div class="line"></div><div class="line">        InternetAddress address = (InternetAddress) froms[<span class="number">0</span>];</div><div class="line">        String person = address.getPersonal();</div><div class="line">        <span class="keyword">if</span> (person != <span class="keyword">null</span>) &#123;</div><div class="line">            person = MimeUtility.decodeText(person) + <span class="string">" "</span>;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            person = <span class="string">""</span>;</div><div class="line">        &#125;</div><div class="line">        from = person + <span class="string">"&lt;"</span> + address.getAddress() + <span class="string">"&gt;"</span>;</div><div class="line"></div><div class="line">        <span class="keyword">return</span> from;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 根据收件人类型，获取邮件收件人、抄送和密送地址。如果收件人类型为空，则获得所有的收件人</div><div class="line">     * &lt;p&gt;</div><div class="line">     * Message.RecipientType.TO 收件人</div><div class="line">     * &lt;/p&gt;</div><div class="line">     * &lt;p&gt;</div><div class="line">     * Message.RecipientType.CC 抄送</div><div class="line">     * &lt;/p&gt;</div><div class="line">     * &lt;p&gt;</div><div class="line">     * Message.RecipientType.BCC 密送</div><div class="line">     * &lt;/p&gt;</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> msg  邮件内容</div><div class="line">     * <span class="doctag">@param</span> type 收件人类型</div><div class="line">     * <span class="doctag">@return</span> 收件人1 &lt;邮件地址1&gt;, 收件人2 &lt;邮件地址2&gt;, ...</div><div class="line">     * <span class="doctag">@throws</span> MessagingException</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getReceiveAddress</span><span class="params">(MimeMessage msg, Message.RecipientType type)</span> <span class="keyword">throws</span> MessagingException </span>&#123;</div><div class="line">        StringBuffer receiveAddress = <span class="keyword">new</span> StringBuffer();</div><div class="line">        Address[] addresss = <span class="keyword">null</span>;</div><div class="line">        <span class="keyword">if</span> (type == <span class="keyword">null</span>) &#123;</div><div class="line">            addresss = msg.getAllRecipients();</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            addresss = msg.getRecipients(type);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (addresss == <span class="keyword">null</span> || addresss.length &lt; <span class="number">1</span>)</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> MessagingException(<span class="string">"没有收件人!"</span>);</div><div class="line">        <span class="keyword">for</span> (Address address : addresss) &#123;</div><div class="line">            InternetAddress internetAddress = (InternetAddress) address;</div><div class="line">            receiveAddress.append(internetAddress.toUnicodeString()).append(<span class="string">","</span>);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        receiveAddress.deleteCharAt(receiveAddress.length() - <span class="number">1</span>); <span class="comment">// 删除最后一个逗号</span></div><div class="line"></div><div class="line">        <span class="keyword">return</span> receiveAddress.toString();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 获得邮件发送时间</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> msg 邮件内容</div><div class="line">     * <span class="doctag">@return</span> yyyy年mm月dd日 星期X HH:mm</div><div class="line">     * <span class="doctag">@throws</span> MessagingException</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getSentDate</span><span class="params">(MimeMessage msg, String pattern)</span> <span class="keyword">throws</span> MessagingException </span>&#123;</div><div class="line">        Date receivedDate = msg.getSentDate();</div><div class="line">        <span class="keyword">if</span> (receivedDate == <span class="keyword">null</span>)</div><div class="line">            <span class="keyword">return</span> <span class="string">""</span>;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (pattern == <span class="keyword">null</span> || <span class="string">""</span>.equals(pattern))</div><div class="line">            pattern = <span class="string">"yyyy年MM月dd日 E HH:mm "</span>;</div><div class="line"></div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> SimpleDateFormat(pattern).format(receivedDate);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 判断邮件中是否包含附件</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> msg 邮件内容</div><div class="line">     * <span class="doctag">@return</span> 邮件中存在附件返回true，不存在返回false</div><div class="line">     * <span class="doctag">@throws</span> MessagingException</div><div class="line">     * <span class="doctag">@throws</span> IOException</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isContainAttachment</span><span class="params">(Part part)</span> <span class="keyword">throws</span> MessagingException, IOException </span>&#123;</div><div class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</div><div class="line">        <span class="keyword">if</span> (part.isMimeType(<span class="string">"multipart/*"</span>)) &#123;</div><div class="line">            MimeMultipart multipart = (MimeMultipart) part.getContent();</div><div class="line">            <span class="keyword">int</span> partCount = multipart.getCount();</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; partCount; i++) &#123;</div><div class="line">                BodyPart bodyPart = multipart.getBodyPart(i);</div><div class="line">                String disp = bodyPart.getDisposition();</div><div class="line">                <span class="keyword">if</span> (disp != <span class="keyword">null</span> &amp;&amp; (disp.equalsIgnoreCase(Part.ATTACHMENT) || disp.equalsIgnoreCase(Part.INLINE))) &#123;</div><div class="line">                    flag = <span class="keyword">true</span>;</div><div class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (bodyPart.isMimeType(<span class="string">"multipart/*"</span>)) &#123;</div><div class="line">                    flag = isContainAttachment(bodyPart);</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    String contentType = bodyPart.getContentType();</div><div class="line">                    <span class="keyword">if</span> (contentType.indexOf(<span class="string">"application"</span>) != -<span class="number">1</span>) &#123;</div><div class="line">                        flag = <span class="keyword">true</span>;</div><div class="line">                    &#125;</div><div class="line"></div><div class="line">                    <span class="keyword">if</span> (contentType.indexOf(<span class="string">"name"</span>) != -<span class="number">1</span>) &#123;</div><div class="line">                        flag = <span class="keyword">true</span>;</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                <span class="keyword">if</span> (flag)</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (part.isMimeType(<span class="string">"message/rfc822"</span>)) &#123;</div><div class="line">            flag = isContainAttachment((Part) part.getContent());</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> flag;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 判断邮件是否已读</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> msg 邮件内容</div><div class="line">     * <span class="doctag">@return</span> 如果邮件已读返回true, 否则返回false</div><div class="line">     * <span class="doctag">@throws</span> MessagingException</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isSeen</span><span class="params">(MimeMessage msg)</span> <span class="keyword">throws</span> MessagingException </span>&#123;</div><div class="line">        <span class="keyword">return</span> msg.getFlags().contains(Flags.Flag.SEEN);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 判断邮件是否需要阅读回执</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> msg 邮件内容</div><div class="line">     * <span class="doctag">@return</span> 需要回执返回true, 否则返回false</div><div class="line">     * <span class="doctag">@throws</span> MessagingException</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isReplySign</span><span class="params">(MimeMessage msg)</span> <span class="keyword">throws</span> MessagingException </span>&#123;</div><div class="line">        <span class="keyword">boolean</span> replySign = <span class="keyword">false</span>;</div><div class="line">        String[] headers = msg.getHeader(<span class="string">"Disposition-Notification-To"</span>);</div><div class="line">        <span class="keyword">if</span> (headers != <span class="keyword">null</span>)</div><div class="line">            replySign = <span class="keyword">true</span>;</div><div class="line">        <span class="keyword">return</span> replySign;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 获得邮件的优先级</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> msg 邮件内容</div><div class="line">     * <span class="doctag">@return</span> 1(High):紧急 3:普通(Normal) 5:低(Low)</div><div class="line">     * <span class="doctag">@throws</span> MessagingException</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getPriority</span><span class="params">(MimeMessage msg)</span> <span class="keyword">throws</span> MessagingException </span>&#123;</div><div class="line">        String priority = <span class="string">"普通"</span>;</div><div class="line">        String[] headers = msg.getHeader(<span class="string">"X-Priority"</span>);</div><div class="line">        <span class="keyword">if</span> (headers != <span class="keyword">null</span>) &#123;</div><div class="line">            String headerPriority = headers[<span class="number">0</span>];</div><div class="line">            <span class="keyword">if</span> (headerPriority.indexOf(<span class="string">"1"</span>) != -<span class="number">1</span> || headerPriority.indexOf(<span class="string">"High"</span>) != -<span class="number">1</span>)</div><div class="line">                priority = <span class="string">"紧急"</span>;</div><div class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (headerPriority.indexOf(<span class="string">"5"</span>) != -<span class="number">1</span> || headerPriority.indexOf(<span class="string">"Low"</span>) != -<span class="number">1</span>)</div><div class="line">                priority = <span class="string">"低"</span>;</div><div class="line">            <span class="keyword">else</span></div><div class="line">                priority = <span class="string">"普通"</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> priority;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 获得邮件文本内容</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> part    邮件体</div><div class="line">     * <span class="doctag">@param</span> content 存储邮件文本内容的字符串</div><div class="line">     * <span class="doctag">@throws</span> MessagingException</div><div class="line">     * <span class="doctag">@throws</span> IOException</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getMailTextContent</span><span class="params">(Part part, StringBuffer content)</span> <span class="keyword">throws</span> MessagingException, IOException </span>&#123;</div><div class="line">        <span class="comment">// 如果是文本类型的附件，通过getContent方法可以取到文本内容，但这不是我们需要的结果，所以在这里要做判断</span></div><div class="line">        <span class="keyword">boolean</span> isContainTextAttach = part.getContentType().indexOf(<span class="string">"name"</span>) &gt; <span class="number">0</span>;</div><div class="line">        <span class="keyword">if</span> (part.isMimeType(<span class="string">"text/*"</span>) &amp;&amp; !isContainTextAttach) &#123;</div><div class="line">            content.append(part.getContent().toString());</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (part.isMimeType(<span class="string">"message/rfc822"</span>)) &#123;</div><div class="line">            getMailTextContent((Part) part.getContent(), content);</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (part.isMimeType(<span class="string">"multipart/*"</span>)) &#123;</div><div class="line">            Multipart multipart = (Multipart) part.getContent();</div><div class="line">            <span class="keyword">int</span> partCount = multipart.getCount();</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; partCount; i++) &#123;</div><div class="line">                BodyPart bodyPart = multipart.getBodyPart(i);</div><div class="line">                getMailTextContent(bodyPart, content);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 保存附件</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> part    邮件中多个组合体中的其中一个组合体</div><div class="line">     * <span class="doctag">@param</span> destDir 附件保存目录</div><div class="line">     * <span class="doctag">@throws</span> UnsupportedEncodingException</div><div class="line">     * <span class="doctag">@throws</span> MessagingException</div><div class="line">     * <span class="doctag">@throws</span> FileNotFoundException</div><div class="line">     * <span class="doctag">@throws</span> IOException</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">saveAttachment</span><span class="params">(Part part, String destDir)</span></span></div><div class="line">            <span class="keyword">throws</span> UnsupportedEncodingException, MessagingException, FileNotFoundException, IOException &#123;</div><div class="line">        <span class="keyword">if</span> (part.isMimeType(<span class="string">"multipart/*"</span>)) &#123;</div><div class="line">            Multipart multipart = (Multipart) part.getContent(); <span class="comment">// 复杂体邮件</span></div><div class="line">            <span class="comment">// 复杂体邮件包含多个邮件体</span></div><div class="line">            <span class="keyword">int</span> partCount = multipart.getCount();</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; partCount; i++) &#123;</div><div class="line">                <span class="comment">// 获得复杂体邮件中其中一个邮件体</span></div><div class="line">                BodyPart bodyPart = multipart.getBodyPart(i);</div><div class="line">                <span class="comment">// 某一个邮件体也有可能是由多个邮件体组成的复杂体</span></div><div class="line">                String disp = bodyPart.getDisposition();</div><div class="line">                <span class="keyword">if</span> (disp != <span class="keyword">null</span> &amp;&amp; (disp.equalsIgnoreCase(Part.ATTACHMENT) || disp.equalsIgnoreCase(Part.INLINE))) &#123;</div><div class="line">                    InputStream is = bodyPart.getInputStream();</div><div class="line">                    saveFile(is, destDir, decodeText(bodyPart.getFileName()));</div><div class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (bodyPart.isMimeType(<span class="string">"multipart/*"</span>)) &#123;</div><div class="line">                    saveAttachment(bodyPart, destDir);</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    String contentType = bodyPart.getContentType();</div><div class="line">                    <span class="keyword">if</span> (contentType.indexOf(<span class="string">"name"</span>) != -<span class="number">1</span> || contentType.indexOf(<span class="string">"application"</span>) != -<span class="number">1</span>) &#123;</div><div class="line">                        saveFile(bodyPart.getInputStream(), destDir, decodeText(bodyPart.getFileName()));</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (part.isMimeType(<span class="string">"message/rfc822"</span>)) &#123;</div><div class="line">            saveAttachment((Part) part.getContent(), destDir);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 读取输入流中的数据保存至指定目录</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> is       输入流</div><div class="line">     * <span class="doctag">@param</span> fileName 文件名</div><div class="line">     * <span class="doctag">@param</span> destDir  文件存储目录</div><div class="line">     * <span class="doctag">@throws</span> FileNotFoundException</div><div class="line">     * <span class="doctag">@throws</span> IOException</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">saveFile</span><span class="params">(InputStream is, String destDir, String fileName)</span></span></div><div class="line">            <span class="keyword">throws</span> FileNotFoundException, IOException &#123;</div><div class="line">        BufferedInputStream bis = <span class="keyword">new</span> BufferedInputStream(is);</div><div class="line">        BufferedOutputStream bos = <span class="keyword">new</span> BufferedOutputStream(<span class="keyword">new</span> FileOutputStream(<span class="keyword">new</span> File(destDir + fileName)));</div><div class="line">        <span class="keyword">int</span> len = -<span class="number">1</span>;</div><div class="line">        <span class="keyword">while</span> ((len = bis.read()) != -<span class="number">1</span>) &#123;</div><div class="line">            bos.write(len);</div><div class="line">            bos.flush();</div><div class="line">        &#125;</div><div class="line">        bos.close();</div><div class="line">        bis.close();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 文本解码</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> encodeText 解码MimeUtility.encodeText(String text)方法编码后的文本</div><div class="line">     * <span class="doctag">@return</span> 解码后的文本</div><div class="line">     * <span class="doctag">@throws</span> UnsupportedEncodingException</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">decodeText</span><span class="params">(String encodeText)</span> <span class="keyword">throws</span> UnsupportedEncodingException </span>&#123;</div><div class="line">        <span class="keyword">if</span> (encodeText == <span class="keyword">null</span> || <span class="string">""</span>.equals(encodeText)) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="string">""</span>;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">return</span> MimeUtility.decodeText(encodeText);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>IMAP协议读取收件箱邮件解析邮件，和POP3的区别是，IMAP解析邮件时就会标记为已读邮件，收件箱中的未读邮件的状态自动更新为已读，<br>而POP3只是单向输出邮件信息，并不向邮件服务器返回状态。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div><div class="line">370</div><div class="line">371</div><div class="line">372</div><div class="line">373</div><div class="line">374</div><div class="line">375</div><div class="line">376</div><div class="line">377</div><div class="line">378</div><div class="line">379</div><div class="line">380</div><div class="line">381</div><div class="line">382</div><div class="line">383</div><div class="line">384</div><div class="line">385</div><div class="line">386</div><div class="line">387</div><div class="line">388</div><div class="line">389</div><div class="line">390</div><div class="line">391</div><div class="line">392</div><div class="line">393</div><div class="line">394</div><div class="line">395</div><div class="line">396</div><div class="line">397</div><div class="line">398</div><div class="line">399</div><div class="line">400</div><div class="line">401</div><div class="line">402</div><div class="line">403</div><div class="line">404</div><div class="line">405</div><div class="line">406</div><div class="line">407</div><div class="line">408</div><div class="line">409</div><div class="line">410</div><div class="line">411</div><div class="line">412</div><div class="line">413</div><div class="line">414</div><div class="line">415</div><div class="line">416</div><div class="line">417</div><div class="line">418</div><div class="line">419</div><div class="line">420</div><div class="line">421</div><div class="line">422</div><div class="line">423</div><div class="line">424</div><div class="line">425</div><div class="line">426</div><div class="line">427</div><div class="line">428</div><div class="line">429</div><div class="line">430</div><div class="line">431</div><div class="line">432</div><div class="line">433</div><div class="line">434</div><div class="line">435</div><div class="line">436</div><div class="line">437</div><div class="line">438</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.BufferedInputStream;</div><div class="line"><span class="keyword">import</span> java.io.BufferedOutputStream;</div><div class="line"><span class="keyword">import</span> java.io.File;</div><div class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</div><div class="line"><span class="keyword">import</span> java.io.FileOutputStream;</div><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> java.io.InputStream;</div><div class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</div><div class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</div><div class="line"><span class="keyword">import</span> java.util.Date;</div><div class="line"><span class="keyword">import</span> java.util.Properties;</div><div class="line"><span class="keyword">import</span> javax.mail.Address;</div><div class="line"><span class="keyword">import</span> javax.mail.BodyPart;</div><div class="line"><span class="keyword">import</span> javax.mail.Flags;</div><div class="line"><span class="keyword">import</span> javax.mail.Folder;</div><div class="line"><span class="keyword">import</span> javax.mail.Message;</div><div class="line"><span class="keyword">import</span> javax.mail.MessagingException;</div><div class="line"><span class="keyword">import</span> javax.mail.Multipart;</div><div class="line"><span class="keyword">import</span> javax.mail.Part;</div><div class="line"><span class="keyword">import</span> javax.mail.Session;</div><div class="line"><span class="keyword">import</span> javax.mail.internet.InternetAddress;</div><div class="line"><span class="keyword">import</span> javax.mail.internet.MimeMessage;</div><div class="line"><span class="keyword">import</span> javax.mail.internet.MimeMultipart;</div><div class="line"><span class="keyword">import</span> javax.mail.internet.MimeUtility;</div><div class="line"><span class="keyword">import</span> com.sun.mail.imap.IMAPFolder;</div><div class="line"><span class="keyword">import</span> com.sun.mail.imap.IMAPStore;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * <span class="doctag">@ClassName</span> IMAPReceiveMail</div><div class="line"> * <span class="doctag">@Author</span> volc</div><div class="line"> * <span class="doctag">@Description</span> IMAP协议读取解析邮件</div><div class="line"> * <span class="doctag">@Date</span> 2017年4月10日 下午4:54:27</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IMAPReceiveMail</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> String host;</div><div class="line">    <span class="keyword">private</span> String port;</div><div class="line">    <span class="keyword">private</span> String username;</div><div class="line">    <span class="keyword">private</span> String password;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">IMAPReceiveMail</span><span class="params">(String host, String port, String username, String password)</span> </span>&#123;</div><div class="line">	<span class="keyword">this</span>.host = host;</div><div class="line">	<span class="keyword">this</span>.port = port;</div><div class="line">	<span class="keyword">this</span>.username = username;</div><div class="line">	<span class="keyword">this</span>.password = password;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">	<span class="comment">// IMAPReceiveMail imapReceiveMail = new</span></div><div class="line">	<span class="comment">// IMAPReceiveMail("imap.sina.com", "143", "",</span></div><div class="line">	<span class="comment">// ""); // 账号和密码</span></div><div class="line">	IMAPReceiveMail imapReceiveMail = <span class="keyword">new</span> IMAPReceiveMail(<span class="string">"imap.163.com"</span>, <span class="string">"995"</span>, <span class="string">"userAccount"</span>, <span class="string">"passWord"</span>);</div><div class="line">	<span class="comment">// IMAPReceiveMail imapReceiveMail = new IMAPReceiveMail("imap.qq.com",</span></div><div class="line">	<span class="comment">// "995", "", "");</span></div><div class="line"></div><div class="line">	imapReceiveMail.receive();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 读取邮件</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">	Properties prop = System.getProperties();</div><div class="line">	prop.put(<span class="string">"mail.store.protocol"</span>, <span class="string">"imap"</span>);</div><div class="line">	prop.put(<span class="string">"mail.imap.host"</span>, host);</div><div class="line"></div><div class="line">	prop.put(<span class="string">"mail.smtp.port"</span>, port);</div><div class="line">	prop.put(<span class="string">"mail.smtp.auth"</span>, <span class="string">"true"</span>);</div><div class="line"></div><div class="line">	Session session = Session.getInstance(prop);</div><div class="line"></div><div class="line">	<span class="keyword">int</span> total = <span class="number">0</span>;</div><div class="line">	IMAPStore store = (IMAPStore) session.getStore(<span class="string">"imap"</span>); <span class="comment">// 使用imap会话机制，连接服务器</span></div><div class="line">	store.connect(username, password);</div><div class="line">	<span class="comment">// 获取收件箱邮件</span></div><div class="line">	IMAPFolder folder = (IMAPFolder) store.getFolder(<span class="string">"INBOX"</span>);</div><div class="line">	folder.open(Folder.READ_WRITE);</div><div class="line">	<span class="comment">// 获取总邮件数</span></div><div class="line">	total = folder.getMessageCount();</div><div class="line">	System.out.println(<span class="string">"-----------------共有邮件："</span> + total + <span class="string">" 封--------------"</span>);</div><div class="line">	<span class="comment">// 获取收件箱邮件</span></div><div class="line">	Message[] messages = folder.getMessages();</div><div class="line">	<span class="comment">// 解析获取到的邮件</span></div><div class="line">	<span class="keyword">int</span> unReadCount = getUnReadCount(messages);</div><div class="line">	System.out.println(unReadCount);</div><div class="line">	<span class="comment">// parseMessage(messages);</span></div><div class="line">	<span class="comment">// 释放资源</span></div><div class="line">	folder.close(<span class="keyword">true</span>);</div><div class="line">	store.close();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 解析邮件</div><div class="line">     * </div><div class="line">     * <span class="doctag">@param</span> messages</div><div class="line">     *            要解析的邮件列表</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">parseMessage</span><span class="params">(Message... messages)</span> <span class="keyword">throws</span> MessagingException, IOException </span>&#123;</div><div class="line">	<span class="keyword">if</span> (messages == <span class="keyword">null</span> || messages.length &lt; <span class="number">1</span>)</div><div class="line">	    <span class="keyword">throw</span> <span class="keyword">new</span> MessagingException(<span class="string">"未找到要解析的邮件!"</span>);</div><div class="line">	<span class="comment">// 解析所有邮件</span></div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, count = messages.length; i &lt; count; i++) &#123;</div><div class="line">	    MimeMessage msg = (MimeMessage) messages[i];</div><div class="line">	    System.out.println(<span class="string">"------------------解析第"</span> + msg.getMessageNumber() + <span class="string">"封邮件-------------------- "</span>);</div><div class="line">	    System.out.println(<span class="string">"主题: "</span> + getSubject(msg));</div><div class="line">	    System.out.println(<span class="string">"发件人: "</span> + getFrom(msg));</div><div class="line">	    System.out.println(<span class="string">"收件人："</span> + getReceiveAddress(msg, <span class="keyword">null</span>));</div><div class="line">	    System.out.println(<span class="string">"发送时间："</span> + getSentDate(msg, <span class="keyword">null</span>));</div><div class="line">	    System.out.println(<span class="string">"是否已读："</span> + isSeen(msg));</div><div class="line">	    System.out.println(<span class="string">"邮件优先级："</span> + getPriority(msg));</div><div class="line">	    System.out.println(<span class="string">"是否需要回执："</span> + isReplySign(msg));</div><div class="line">	    System.out.println(<span class="string">"邮件大小："</span> + msg.getSize() * <span class="number">1024</span> + <span class="string">"kb"</span>);</div><div class="line">	    <span class="keyword">boolean</span> isContainerAttachment = isContainAttachment(msg);</div><div class="line">	    System.out.println(<span class="string">"是否包含附件："</span> + isContainerAttachment);</div><div class="line">	    <span class="keyword">if</span> (isContainerAttachment) &#123;</div><div class="line">		saveAttachment(msg, <span class="string">"F:\\javamail\\mailtmp\\"</span> + msg.getSubject() + <span class="string">"_"</span>); <span class="comment">// 保存附件</span></div><div class="line">	    &#125;</div><div class="line">	    StringBuffer content = <span class="keyword">new</span> StringBuffer(<span class="number">30</span>);</div><div class="line">	    getMailTextContent(msg, content);</div><div class="line">	    System.out.println(<span class="string">"邮件正文："</span> + (content.length() &gt; <span class="number">100</span> ? content.substring(<span class="number">0</span>, <span class="number">100</span>) + <span class="string">"..."</span> : content));</div><div class="line">	    System.out.println(<span class="string">"------------------第"</span> + msg.getMessageNumber() + <span class="string">"封邮件解析结束-------------------- "</span>);</div><div class="line">	    System.out.println();</div><div class="line">	&#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 获得邮件主题</div><div class="line">     * </div><div class="line">     * <span class="doctag">@param</span> msg</div><div class="line">     *            邮件内容</div><div class="line">     * <span class="doctag">@return</span> 解码后的邮件主题</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getSubject</span><span class="params">(MimeMessage msg)</span> <span class="keyword">throws</span> UnsupportedEncodingException, MessagingException </span>&#123;</div><div class="line">	<span class="keyword">return</span> MimeUtility.decodeText(msg.getSubject());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 获得邮件发件人</div><div class="line">     * </div><div class="line">     * <span class="doctag">@param</span> msg</div><div class="line">     *            邮件内容</div><div class="line">     * <span class="doctag">@return</span> 姓名 &lt;Email地址&gt;</div><div class="line">     * <span class="doctag">@throws</span> MessagingException</div><div class="line">     * <span class="doctag">@throws</span> UnsupportedEncodingException</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getFrom</span><span class="params">(MimeMessage msg)</span> <span class="keyword">throws</span> MessagingException, UnsupportedEncodingException </span>&#123;</div><div class="line">	String from = <span class="string">""</span>;</div><div class="line">	Address[] froms = msg.getFrom();</div><div class="line">	<span class="keyword">if</span> (froms.length &lt; <span class="number">1</span>)</div><div class="line">	    <span class="keyword">throw</span> <span class="keyword">new</span> MessagingException(<span class="string">"没有发件人!"</span>);</div><div class="line"></div><div class="line">	InternetAddress address = (InternetAddress) froms[<span class="number">0</span>];</div><div class="line">	String person = address.getPersonal();</div><div class="line">	<span class="keyword">if</span> (person != <span class="keyword">null</span>) &#123;</div><div class="line">	    person = MimeUtility.decodeText(person) + <span class="string">" "</span>;</div><div class="line">	&#125; <span class="keyword">else</span> &#123;</div><div class="line">	    person = <span class="string">""</span>;</div><div class="line">	&#125;</div><div class="line">	from = person + <span class="string">"&lt;"</span> + address.getAddress() + <span class="string">"&gt;"</span>;</div><div class="line"></div><div class="line">	<span class="keyword">return</span> from;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 根据收件人类型，获取邮件收件人、抄送和密送地址。如果收件人类型为空，则获得所有的收件人</div><div class="line">     * &lt;p&gt;</div><div class="line">     * Message.RecipientType.TO 收件人</div><div class="line">     * &lt;/p&gt;</div><div class="line">     * &lt;p&gt;</div><div class="line">     * Message.RecipientType.CC 抄送</div><div class="line">     * &lt;/p&gt;</div><div class="line">     * &lt;p&gt;</div><div class="line">     * Message.RecipientType.BCC 密送</div><div class="line">     * &lt;/p&gt;</div><div class="line">     * </div><div class="line">     * <span class="doctag">@param</span> msg</div><div class="line">     *            邮件内容</div><div class="line">     * <span class="doctag">@param</span> type</div><div class="line">     *            收件人类型</div><div class="line">     * <span class="doctag">@return</span> 收件人1 &lt;邮件地址1&gt;, 收件人2 &lt;邮件地址2&gt;, ...</div><div class="line">     * <span class="doctag">@throws</span> MessagingException</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getReceiveAddress</span><span class="params">(MimeMessage msg, Message.RecipientType type)</span> <span class="keyword">throws</span> MessagingException </span>&#123;</div><div class="line">	StringBuffer receiveAddress = <span class="keyword">new</span> StringBuffer();</div><div class="line">	Address[] addresss = <span class="keyword">null</span>;</div><div class="line">	<span class="keyword">if</span> (type == <span class="keyword">null</span>) &#123;</div><div class="line">	    addresss = msg.getAllRecipients();</div><div class="line">	&#125; <span class="keyword">else</span> &#123;</div><div class="line">	    addresss = msg.getRecipients(type);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">if</span> (addresss == <span class="keyword">null</span> || addresss.length &lt; <span class="number">1</span>)</div><div class="line">	    <span class="keyword">throw</span> <span class="keyword">new</span> MessagingException(<span class="string">"没有收件人!"</span>);</div><div class="line">	<span class="keyword">for</span> (Address address : addresss) &#123;</div><div class="line">	    InternetAddress internetAddress = (InternetAddress) address;</div><div class="line">	    receiveAddress.append(internetAddress.toUnicodeString()).append(<span class="string">","</span>);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	receiveAddress.deleteCharAt(receiveAddress.length() - <span class="number">1</span>); <span class="comment">// 删除最后一个逗号</span></div><div class="line"></div><div class="line">	<span class="keyword">return</span> receiveAddress.toString();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 获得邮件发送时间</div><div class="line">     * </div><div class="line">     * <span class="doctag">@param</span> msg</div><div class="line">     *            邮件内容</div><div class="line">     * <span class="doctag">@return</span> yyyy年mm月dd日 星期X HH:mm</div><div class="line">     * <span class="doctag">@throws</span> MessagingException</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getSentDate</span><span class="params">(MimeMessage msg, String pattern)</span> <span class="keyword">throws</span> MessagingException </span>&#123;</div><div class="line">	Date receivedDate = msg.getSentDate();</div><div class="line">	<span class="keyword">if</span> (receivedDate == <span class="keyword">null</span>)</div><div class="line">	    <span class="keyword">return</span> <span class="string">""</span>;</div><div class="line"></div><div class="line">	<span class="keyword">if</span> (pattern == <span class="keyword">null</span> || <span class="string">""</span>.equals(pattern))</div><div class="line">	    pattern = <span class="string">"yyyy年MM月dd日 E HH:mm "</span>;</div><div class="line"></div><div class="line">	<span class="keyword">return</span> <span class="keyword">new</span> SimpleDateFormat(pattern).format(receivedDate);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 判断邮件中是否包含附件</div><div class="line">     * </div><div class="line">     * <span class="doctag">@param</span> msg</div><div class="line">     *            邮件内容</div><div class="line">     * <span class="doctag">@return</span> 邮件中存在附件返回true，不存在返回false</div><div class="line">     * <span class="doctag">@throws</span> MessagingException</div><div class="line">     * <span class="doctag">@throws</span> IOException</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isContainAttachment</span><span class="params">(Part part)</span> <span class="keyword">throws</span> MessagingException, IOException </span>&#123;</div><div class="line">	<span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</div><div class="line">	<span class="keyword">if</span> (part.isMimeType(<span class="string">"multipart/*"</span>)) &#123;</div><div class="line">	    MimeMultipart multipart = (MimeMultipart) part.getContent();</div><div class="line">	    <span class="keyword">int</span> partCount = multipart.getCount();</div><div class="line">	    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; partCount; i++) &#123;</div><div class="line">		BodyPart bodyPart = multipart.getBodyPart(i);</div><div class="line">		String disp = bodyPart.getDisposition();</div><div class="line">		<span class="keyword">if</span> (disp != <span class="keyword">null</span> &amp;&amp; (disp.equalsIgnoreCase(Part.ATTACHMENT) || disp.equalsIgnoreCase(Part.INLINE))) &#123;</div><div class="line">		    flag = <span class="keyword">true</span>;</div><div class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> (bodyPart.isMimeType(<span class="string">"multipart/*"</span>)) &#123;</div><div class="line">		    flag = isContainAttachment(bodyPart);</div><div class="line">		&#125; <span class="keyword">else</span> &#123;</div><div class="line">		    String contentType = bodyPart.getContentType();</div><div class="line">		    <span class="keyword">if</span> (contentType.indexOf(<span class="string">"application"</span>) != -<span class="number">1</span>) &#123;</div><div class="line">			flag = <span class="keyword">true</span>;</div><div class="line">		    &#125;</div><div class="line"></div><div class="line">		    <span class="keyword">if</span> (contentType.indexOf(<span class="string">"name"</span>) != -<span class="number">1</span>) &#123;</div><div class="line">			flag = <span class="keyword">true</span>;</div><div class="line">		    &#125;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		<span class="keyword">if</span> (flag)</div><div class="line">		    <span class="keyword">break</span>;</div><div class="line">	    &#125;</div><div class="line">	&#125; <span class="keyword">else</span> <span class="keyword">if</span> (part.isMimeType(<span class="string">"message/rfc822"</span>)) &#123;</div><div class="line">	    flag = isContainAttachment((Part) part.getContent());</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> flag;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 判断邮件是否已读</div><div class="line">     * </div><div class="line">     * <span class="doctag">@param</span> msg</div><div class="line">     *            邮件内容</div><div class="line">     * <span class="doctag">@return</span> 如果邮件已读返回true,否则返回false</div><div class="line">     * <span class="doctag">@throws</span> MessagingException</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isSeen</span><span class="params">(MimeMessage msg)</span> <span class="keyword">throws</span> MessagingException </span>&#123;</div><div class="line">	<span class="keyword">return</span> msg.getFlags().contains(Flags.Flag.SEEN);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 判断邮件是否需要阅读回执</div><div class="line">     * </div><div class="line">     * <span class="doctag">@param</span> msg</div><div class="line">     *            邮件内容</div><div class="line">     * <span class="doctag">@return</span> 需要回执返回true,否则返回false</div><div class="line">     * <span class="doctag">@throws</span> MessagingException</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isReplySign</span><span class="params">(MimeMessage msg)</span> <span class="keyword">throws</span> MessagingException </span>&#123;</div><div class="line">	<span class="keyword">boolean</span> replySign = <span class="keyword">false</span>;</div><div class="line">	String[] headers = msg.getHeader(<span class="string">"Disposition-Notification-To"</span>);</div><div class="line">	<span class="keyword">if</span> (headers != <span class="keyword">null</span>)</div><div class="line">	    replySign = <span class="keyword">true</span>;</div><div class="line">	<span class="keyword">return</span> replySign;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 获得邮件的优先级</div><div class="line">     * </div><div class="line">     * <span class="doctag">@param</span> msg</div><div class="line">     *            邮件内容</div><div class="line">     * <span class="doctag">@return</span> 1(High):紧急 3:普通(Normal) 5:低(Low)</div><div class="line">     * <span class="doctag">@throws</span> MessagingException</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getPriority</span><span class="params">(MimeMessage msg)</span> <span class="keyword">throws</span> MessagingException </span>&#123;</div><div class="line">	String priority = <span class="string">"普通"</span>;</div><div class="line">	String[] headers = msg.getHeader(<span class="string">"X-Priority"</span>);</div><div class="line">	<span class="keyword">if</span> (headers != <span class="keyword">null</span>) &#123;</div><div class="line">	    String headerPriority = headers[<span class="number">0</span>];</div><div class="line">	    <span class="keyword">if</span> (headerPriority.indexOf(<span class="string">"1"</span>) != -<span class="number">1</span> || headerPriority.indexOf(<span class="string">"High"</span>) != -<span class="number">1</span>)</div><div class="line">		priority = <span class="string">"紧急"</span>;</div><div class="line">	    <span class="keyword">else</span> <span class="keyword">if</span> (headerPriority.indexOf(<span class="string">"5"</span>) != -<span class="number">1</span> || headerPriority.indexOf(<span class="string">"Low"</span>) != -<span class="number">1</span>)</div><div class="line">		priority = <span class="string">"低"</span>;</div><div class="line">	    <span class="keyword">else</span></div><div class="line">		priority = <span class="string">"普通"</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> priority;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 获得邮件文本内容</div><div class="line">     * </div><div class="line">     * <span class="doctag">@param</span> part</div><div class="line">     *            邮件体</div><div class="line">     * <span class="doctag">@param</span> content</div><div class="line">     *            存储邮件文本内容的字符串</div><div class="line">     * <span class="doctag">@throws</span> MessagingException</div><div class="line">     * <span class="doctag">@throws</span> IOException</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getMailTextContent</span><span class="params">(Part part, StringBuffer content)</span> <span class="keyword">throws</span> MessagingException, IOException </span>&#123;</div><div class="line">	<span class="comment">// 如果是文本类型的附件，通过getContent方法可以取到文本内容，但这不是我们需要的结果，所以在这里要做判断</span></div><div class="line">	<span class="keyword">boolean</span> isContainTextAttach = part.getContentType().indexOf(<span class="string">"name"</span>) &gt; <span class="number">0</span>;</div><div class="line">	<span class="keyword">if</span> (part.isMimeType(<span class="string">"text/*"</span>) &amp;&amp; !isContainTextAttach) &#123;</div><div class="line">	    content.append(part.getContent().toString());</div><div class="line">	&#125; <span class="keyword">else</span> <span class="keyword">if</span> (part.isMimeType(<span class="string">"message/rfc822"</span>)) &#123;</div><div class="line">	    getMailTextContent((Part) part.getContent(), content);</div><div class="line">	&#125; <span class="keyword">else</span> <span class="keyword">if</span> (part.isMimeType(<span class="string">"multipart/*"</span>)) &#123;</div><div class="line">	    Multipart multipart = (Multipart) part.getContent();</div><div class="line">	    <span class="keyword">int</span> partCount = multipart.getCount();</div><div class="line">	    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; partCount; i++) &#123;</div><div class="line">		BodyPart bodyPart = multipart.getBodyPart(i);</div><div class="line">		getMailTextContent(bodyPart, content);</div><div class="line">	    &#125;</div><div class="line">	&#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 保存附件</div><div class="line">     * </div><div class="line">     * <span class="doctag">@param</span> part</div><div class="line">     *            邮件中多个组合体中的其中一个组合体</div><div class="line">     * <span class="doctag">@param</span> destDir</div><div class="line">     *            附件保存目录</div><div class="line">     * <span class="doctag">@throws</span> UnsupportedEncodingException</div><div class="line">     * <span class="doctag">@throws</span> MessagingException</div><div class="line">     * <span class="doctag">@throws</span> FileNotFoundException</div><div class="line">     * <span class="doctag">@throws</span> IOException</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">saveAttachment</span><span class="params">(Part part, String destDir)</span> <span class="keyword">throws</span> UnsupportedEncodingException, MessagingException, FileNotFoundException, IOException </span>&#123;</div><div class="line">	<span class="keyword">if</span> (part.isMimeType(<span class="string">"multipart/*"</span>)) &#123;</div><div class="line">	    Multipart multipart = (Multipart) part.getContent(); <span class="comment">// 复杂体邮件</span></div><div class="line">	    <span class="comment">// 复杂体邮件包含多个邮件体</span></div><div class="line">	    <span class="keyword">int</span> partCount = multipart.getCount();</div><div class="line">	    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; partCount; i++) &#123;</div><div class="line">		<span class="comment">// 获得复杂体邮件中其中一个邮件体</span></div><div class="line">		BodyPart bodyPart = multipart.getBodyPart(i);</div><div class="line">		<span class="comment">// 某一个邮件体也有可能是由多个邮件体组成的复杂体</span></div><div class="line">		String disp = bodyPart.getDisposition();</div><div class="line">		<span class="keyword">if</span> (disp != <span class="keyword">null</span> &amp;&amp; (disp.equalsIgnoreCase(Part.ATTACHMENT) || disp.equalsIgnoreCase(Part.INLINE))) &#123;</div><div class="line">		    InputStream is = bodyPart.getInputStream();</div><div class="line">		    saveFile(is, destDir, decodeText(bodyPart.getFileName()));</div><div class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> (bodyPart.isMimeType(<span class="string">"multipart/*"</span>)) &#123;</div><div class="line">		    saveAttachment(bodyPart, destDir);</div><div class="line">		&#125; <span class="keyword">else</span> &#123;</div><div class="line">		    String contentType = bodyPart.getContentType();</div><div class="line">		    <span class="keyword">if</span> (contentType.indexOf(<span class="string">"name"</span>) != -<span class="number">1</span> || contentType.indexOf(<span class="string">"application"</span>) != -<span class="number">1</span>) &#123;</div><div class="line">			saveFile(bodyPart.getInputStream(), destDir, decodeText(bodyPart.getFileName()));</div><div class="line">		    &#125;</div><div class="line">		&#125;</div><div class="line">	    &#125;</div><div class="line">	&#125; <span class="keyword">else</span> <span class="keyword">if</span> (part.isMimeType(<span class="string">"message/rfc822"</span>)) &#123;</div><div class="line">	    saveAttachment((Part) part.getContent(), destDir);</div><div class="line">	&#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 读取输入流中的数据保存至指定目录</div><div class="line">     * </div><div class="line">     * <span class="doctag">@param</span> is</div><div class="line">     *            输入流</div><div class="line">     * <span class="doctag">@param</span> fileName</div><div class="line">     *            文件名</div><div class="line">     * <span class="doctag">@param</span> destDir</div><div class="line">     *            文件存储目录</div><div class="line">     * <span class="doctag">@throws</span> FileNotFoundException</div><div class="line">     * <span class="doctag">@throws</span> IOException</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">saveFile</span><span class="params">(InputStream is, String destDir, String fileName)</span> <span class="keyword">throws</span> FileNotFoundException, IOException </span>&#123;</div><div class="line">	BufferedInputStream bis = <span class="keyword">new</span> BufferedInputStream(is);</div><div class="line">	BufferedOutputStream bos = <span class="keyword">new</span> BufferedOutputStream(<span class="keyword">new</span> FileOutputStream(<span class="keyword">new</span> File(destDir + fileName)));</div><div class="line">	<span class="keyword">int</span> len = -<span class="number">1</span>;</div><div class="line">	<span class="keyword">while</span> ((len = bis.read()) != -<span class="number">1</span>) &#123;</div><div class="line">	    bos.write(len);</div><div class="line">	    bos.flush();</div><div class="line">	&#125;</div><div class="line">	bos.close();</div><div class="line">	bis.close();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 文本解码</div><div class="line">     * </div><div class="line">     * <span class="doctag">@param</span> encodeText</div><div class="line">     *            解码MimeUtility.encodeText(String text)方法编码后的文本</div><div class="line">     * <span class="doctag">@return</span> 解码后的文本</div><div class="line">     * <span class="doctag">@throws</span> UnsupportedEncodingException</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">decodeText</span><span class="params">(String encodeText)</span> <span class="keyword">throws</span> UnsupportedEncodingException </span>&#123;</div><div class="line">	<span class="keyword">if</span> (encodeText == <span class="keyword">null</span> || <span class="string">""</span>.equals(encodeText)) &#123;</div><div class="line">	    <span class="keyword">return</span> <span class="string">""</span>;</div><div class="line">	&#125; <span class="keyword">else</span> &#123;</div><div class="line">	    <span class="keyword">return</span> MimeUtility.decodeText(encodeText);</div><div class="line">	&#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@throws</span> MessagingException </div><div class="line">     * <span class="doctag">@MethodName</span> getUnreadCount </div><div class="line">     * <span class="doctag">@Author</span> volc</div><div class="line">     * <span class="doctag">@Description</span> 获取未读邮件</div><div class="line">     * <span class="doctag">@Date</span> 2017年4月11日 下午2:20:53</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getUnReadCount</span><span class="params">(Message... messages)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">	<span class="keyword">int</span> count = <span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span> (Message messge : messages) &#123;</div><div class="line">	    MimeMessage mineMessage = (MimeMessage) messge;</div><div class="line">	    <span class="keyword">if</span> (!(isSeen(mineMessage))) &#123;</div><div class="line">		count++;</div><div class="line">	    &#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> count;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>操作收发邮件返回码提示参考：<br><a href="https://my.oschina.net/darkspell/blog/12511" target="_blank" rel="external">https://my.oschina.net/darkspell/blog/12511</a><br>具体返回码信息需要查看各邮件服务器返回码提示。</p>
<h3 id="2-遇到的错误"><a href="#2-遇到的错误" class="headerlink" title="2 遇到的错误"></a>2 遇到的错误</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">535 Error: ÇëÊ¹ÓÃÊÚÈ¨ÂëµÇÂ¼¡£ÏêÇéÇë¿´: http://service.mail.qq.com/cgi-bin/help?subtype=1&amp;&amp;id=28&amp;&amp;no=1001256</div></pre></td></tr></table></figure>
<p>qq邮箱服务未开启smtp/pop,获取授权码错误</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[js中逻辑或用法]]></title>
      <url>https://volc1605.github.io/2017/03/29/js%E4%B8%AD%E9%80%BB%E8%BE%91%E6%88%96%E7%94%A8%E6%B3%95/</url>
      <content type="html"><![CDATA[<h3 id="1-js中-的用法"><a href="#1-js中-的用法" class="headerlink" title="1 js中||的用法"></a>1 js中||的用法</h3><a id="more"></a>
<p>js中||运算符的含义：<br>例如a || b<br>系统先判断A表达式的布尔值，是真是假。如果为真，直接返回a对象。如果为假，直接返回b对象(并不只是b的值，还有类型)。<br>所以，var a = a || {}这行代码中如果a为false则直接返回null对象{}赋值给a。<br>这样写，虽然看着比较复杂点，但是效率高，特别是判断一些变量，属性或者是传参是否存在，如果存在就直接用，不存在，就赋予一个空变量。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        test(<span class="number">1</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params">a</span>) </span>&#123; <span class="comment">// 如果a为1，a的类型b值为number，如果a为0，a的类型b值为object</span></div><div class="line">        a = a || &#123;&#125;; <span class="comment">// 如果a为</span></div><div class="line">        <span class="keyword">var</span> b = <span class="keyword">typeof</span> a;</div><div class="line">        alert(b);</div><div class="line">        <span class="keyword">if</span> (a === <span class="string">'1'</span>) &#123;</div><div class="line">            alert(a);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure></p>
<p>作者：李文龙<br>链接：<a href="https://www.zhihu.com/question/22914542/answer/23070403" target="_blank" rel="external">https://www.zhihu.com/question/22914542/answer/23070403</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[使用idea开发工具同步本地代码到github远程仓库]]></title>
      <url>https://volc1605.github.io/2017/03/28/%E5%90%8C%E6%AD%A5github/</url>
      <content type="html"><![CDATA[<p><img src="http://p1.pstatp.com/large/19420003a59e4ef41c50" alt="taiji"><br><a id="more"></a></p>
<h3 id="1-使用idea开发工具同步本地代码到github远程仓库"><a href="#1-使用idea开发工具同步本地代码到github远程仓库" class="headerlink" title="1 使用idea开发工具同步本地代码到github远程仓库"></a>1 使用idea开发工具同步本地代码到github远程仓库</h3><p>git clone<br>git fetch # 抓取远程仓库中更新的数据<br>git merge # 合并将本地更改与其他的更改。通常，合并远程更新的数据和本地修改的数据<br>git pull</p>
<h4 id="1-1-本地配置远程提交仓库"><a href="#1-1-本地配置远程提交仓库" class="headerlink" title="1.1 本地配置远程提交仓库"></a>1.1 本地配置远程提交仓库</h4><h5 id="1）idea关联-初始化-本地仓库"><a href="#1）idea关联-初始化-本地仓库" class="headerlink" title="1）idea关联(初始化)本地仓库"></a>1）idea关联(初始化)本地仓库</h5><p>本地git仓库地址E:\projectidea\springwind(也就是idea中项目所在地址)。</p>
<h5 id="2）本地提交"><a href="#2）本地提交" class="headerlink" title="2）本地提交"></a>2）本地提交</h5><p>选择项目中的src和pom右击git，先add提交的内容，再点击commit directories，最后只选择commit提交。</p>
<h5 id="3）关联远程仓库"><a href="#3）关联远程仓库" class="headerlink" title="3）关联远程仓库"></a>3）关联远程仓库</h5><p>在远程创建没有README.md的仓库，如果创建含有文件的远程仓库，在本地关联时会遇到问题，下面介绍了解决的方法。<br>这里为了方便在远程创建了空的仓库，github上的项目仓库url: <a href="https://github.com/volc1605/springwindide.git" target="_blank" rel="external">https://github.com/volc1605/springwindide.git</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"># 进入本地项目目录，在第1步idea已经关联了这个目录</div><div class="line">PS E:\&gt; cd .\projectidea</div><div class="line">PS E:\projectidea&gt; cd .\springwind</div><div class="line"># 关联远程仓库地址</div><div class="line">PS E:\projectidea\springwind&gt; git remote add origin https://github.com/volc1605/springwindide.git</div><div class="line"># 下面一行命令意思是本地的master分支推送到origin主机，同时指定origin为默认主机，后面就可以不加任何参数使用git push了</div><div class="line">PS E:\projectidea\springwind&gt; git push -u origin master</div><div class="line">To https://github.com/volc1605/springwindide.git</div><div class="line"> ! [rejected]        master -&gt; master (fetch first)</div><div class="line">error: failed to push some refs to &apos;https://github.com/volc1605/springwindide.git&apos;</div><div class="line">hint: Updates were rejected because the remote contains work that you do</div><div class="line">hint: not have locally. This is usually caused by another repository pushing</div><div class="line">hint: to the same ref. You may want to first integrate the remote changes</div><div class="line">hint: (e.g., &apos;git pull ...&apos;) before pushing again.</div><div class="line">hint: See the &apos;Note about fast-forwards&apos; in &apos;git push --help&apos; for details.</div><div class="line">PS E:\projectidea\springwind&gt; git pull --rebase origin master</div><div class="line">remote: Counting objects: 5, done.</div><div class="line">remote: Compressing objects: 100% (3/3), done.</div><div class="line">remote: Total 5 (delta 0), reused 3 (delta 0), pack-reused 0</div><div class="line">warning: no common commits</div><div class="line">Unpacking objects: 100% (5/5), done.</div><div class="line">From https://github.com/volc1605/springwindide</div><div class="line"> * branch            master     -&gt; FETCH_HEAD</div><div class="line"> * [new branch]      master     -&gt; origin/master</div><div class="line">First, rewinding head to replay your work on top of it...</div><div class="line">Applying: giiigiigi  # 第2步本地提交的注释信息</div><div class="line">PS E:\projectidea\springwind&gt;</div></pre></td></tr></table></figure>
<p>这时恭喜你！本地项目已和github远程同步成功。</p>
<h4 id="1-2-遇到的问题"><a href="#1-2-遇到的问题" class="headerlink" title="1.2 遇到的问题"></a>1.2 遇到的问题</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line">********************远程仓库无文件时***************</div><div class="line">PS E:\test&gt; git remote add origin https://github.com/volc1605/test.git</div><div class="line">PS E:\test&gt; git push -u origin master</div><div class="line">error: src refspec master does not match any.</div><div class="line">error: failed to push some refs to &apos;https://github.com/volc1605/test.git&apos;</div><div class="line"># 产生的原因是本地没有文件提交</div><div class="line"># 解决方法：</div><div class="line"># 在本地仓库随意新建一个文件，linux下执行**touch README**命令即可</div><div class="line">PS E:\test&gt; git add --all</div><div class="line">PS E:\test&gt; git commit -m &apos;first commit&apos;</div><div class="line">[master (root-commit) 4fae4c6] first commit</div><div class="line"> 1 file changed, 0 insertions(+), 0 deletions(-)</div><div class="line"> create mode 100644 &quot;\346\226\260\345\273\272\346\226\207\346\234\254\346\226\207\346\241\243.txt&quot;</div><div class="line">PS E:\test&gt; git push origin master</div><div class="line">Counting objects: 3, done.</div><div class="line">Delta compression using up to 4 threads.</div><div class="line">Compressing objects: 100% (2/2), done.</div><div class="line">Writing objects: 100% (3/3), 218 bytes | 0 bytes/s, done.</div><div class="line">Total 3 (delta 0), reused 0 (delta 0)</div><div class="line">To https://github.com/volc1605/test.git</div><div class="line"> * [new branch]      master -&gt; master</div><div class="line">PS E:\test&gt;</div><div class="line"></div><div class="line">********************远程仓库有文件时***************</div><div class="line">PS E:\test&gt; cd ../test1</div><div class="line">PS E:\test1&gt; git remote add origin https://github.com/volc1605/test.git</div><div class="line">PS E:\test1&gt; git push origin master</div><div class="line">error: src refspec master does not match any.</div><div class="line">error: failed to push some refs to &apos;https://github.com/volc1605/test.git&apos;</div><div class="line">PS E:\test1&gt; git push origin master</div><div class="line">error: src refspec master does not match any.</div><div class="line">error: failed to push some refs to &apos;https://github.com/volc1605/test.git&apos;</div><div class="line">PS E:\test1&gt; git add --all</div><div class="line">PS E:\test1&gt; git commit -m &apos;test&apos;</div><div class="line">[master (root-commit) a52ce82] test</div><div class="line"> 1 file changed, 0 insertions(+), 0 deletions(-)</div><div class="line"> create mode 100644 ee.txt</div><div class="line">PS E:\test1&gt; git push origin master</div><div class="line">To https://github.com/volc1605/test.git</div><div class="line"> ! [rejected]        master -&gt; master (fetch first)</div><div class="line">error: failed to push some refs to &apos;https://github.com/volc1605/test.git&apos;</div><div class="line">hint: Updates were rejected because the remote contains work that you do</div><div class="line">hint: not have locally. This is usually caused by another repository pushing</div><div class="line">hint: to the same ref. You may want to first integrate the remote changes</div><div class="line">hint: (e.g., &apos;git pull ...&apos;) before pushing again.</div><div class="line">hint: See the &apos;Note about fast-forwards&apos; in &apos;git push --help&apos; for details.</div><div class="line"># 产生的原因是本地和远程不同步，无法建立连接，提交拒绝</div><div class="line"># 解决方法是先同步远程代码，再提交</div><div class="line">PS E:\test1&gt; git pull --rebase origin master</div><div class="line">remote: Counting objects: 5, done.</div><div class="line">remote: Compressing objects: 100% (4/4), done.</div><div class="line">remote: Total 5 (delta 0), reused 5 (delta 0), pack-reused 0</div><div class="line">warning: no common commits</div><div class="line">Unpacking objects: 100% (5/5), done.</div><div class="line">From https://github.com/volc1605/test</div><div class="line"> * branch            master     -&gt; FETCH_HEAD</div><div class="line"> * [new branch]      master     -&gt; origin/master</div><div class="line">First, rewinding head to replay your work on top of it...</div><div class="line">Applying: test</div><div class="line"># 这时远程的代码已经同步到本地了，刚才本地修改的代码已经commit，这时再push到远程就没有问题了。</div><div class="line">PS E:\test1&gt; git push origin master</div><div class="line">Counting objects: 2, done.</div><div class="line">Delta compression using up to 4 threads.</div><div class="line">Compressing objects: 100% (2/2), done.</div><div class="line">Writing objects: 100% (2/2), 215 bytes | 0 bytes/s, done.</div><div class="line">Total 2 (delta 1), reused 0 (delta 0)</div><div class="line">remote: Resolving deltas: 100% (1/1), completed with 1 local objects.</div><div class="line">To https://github.com/volc1605/test.git</div><div class="line">   534a267..f6fed00  master -&gt; master</div><div class="line">PS E:\test1&gt;</div></pre></td></tr></table></figure>
<h3 id="2-简单方法同步"><a href="#2-简单方法同步" class="headerlink" title="2 简单方法同步"></a>2 简单方法同步</h3><p>intelij中 VCS-&gt;Checkout from Version Contrl—&gt;Git中粘贴远程仓库url地址<br>本地修改代码后提交到远程仓库会提示输入github的账号密码。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[盐值加密]]></title>
      <url>https://volc1605.github.io/2017/03/26/%E7%9B%90%E5%80%BC%E5%8A%A0%E5%AF%86/</url>
      <content type="html"><![CDATA[<h3 id="1-盐值加密"><a href="#1-盐值加密" class="headerlink" title="1 盐值加密"></a>1 盐值加密</h3><a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;!-- https://mvnrepository.com/artifact/com.baomidou/kisso --&gt;</div><div class="line">&lt;dependency&gt;</div><div class="line">    &lt;groupId&gt;com.baomidou&lt;/groupId&gt;</div><div class="line">    &lt;artifactId&gt;kisso&lt;/artifactId&gt;</div><div class="line">    &lt;version&gt;3.6.11&lt;/version&gt;</div><div class="line">&lt;/dependency&gt;</div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"> <span class="comment">/* </span></div><div class="line"> * 注册</div><div class="line"> * 演示不验证表单，用户名作为密码盐值 </div><div class="line"> * md5SaltEncode用账号和密码生成salt值，再使用salt值和密码作为加密字符串进行散列得到hash值</div><div class="line"> */</div><div class="line">user.setPassword(SaltEncoder.md5SaltEncode(user.getLoginName(), user.getPassword()));</div><div class="line"><span class="comment">/* </span></div><div class="line"> * 登录</div><div class="line"> * 生成的hash值和数据库中的用户密码(hash)值进行比较</div><div class="line"> * 校验用户名登录密码是否正确。登录名 提交的密码 数据库中的密码</div><div class="line"> * 返回true或false</div><div class="line"> */</div><div class="line">SaltEncoder.md5SaltValid(loginName, user.getPassword(), password);</div></pre></td></tr></table></figure>
<p>以上是使用SaltEncoder类自动生成salt值加密(SaltEncoder中的加密策略)。当然也可以使用固定的salt值，自定义加密策略。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[项目架构]]></title>
      <url>https://volc1605.github.io/2017/03/05/%E9%A1%B9%E7%9B%AE%E6%9E%84%E6%9E%B6/</url>
      <content type="html"><![CDATA[<h3 id="1-项目架构"><a href="#1-项目架构" class="headerlink" title="1 项目架构"></a>1 项目架构</h3><a id="more"></a>
<h4 id="1、项目架构示意图"><a href="#1、项目架构示意图" class="headerlink" title="1、项目架构示意图"></a>1、项目架构示意图</h4><!-- ![jiagou](https://volc1605.github.io/images/项目架构/架构.png) -->
<!-- ![jiagou](http://127.0.0.1:4000/images/项目架构/jiagou.png) -->
<p><img src="https://volc1605.github.io/images/项目架构/jiagou.png" alt="jiagou"><br>所有的入口经过nginx，项目性能取决于nginx,存在性能安全隐患。<br>解决方案<br>方案一：<br>keepalived+nginx实现双机主备<br><img src="https://volc1605.github.io/images/项目架构/jiagou2.png" alt="jiagou"><br>方案二：<br>keepalived+nginx实现双主热备<br><img src="https://volc1605.github.io/images/项目架构/jiagou3.png" alt="jiagou"><br>方案三：<br>lvs+nginx实现负载均衡，直接代替nginx的负载均衡，解决足够大的并发问题<br><img src="https://volc1605.github.io/images/项目架构/jiagou4.png" alt="jiagou"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[图片无法显示的问题]]></title>
      <url>https://volc1605.github.io/2017/03/05/%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<h3 id="1-图片无法显示的问题"><a href="#1-图片无法显示的问题" class="headerlink" title="1 图片无法显示的问题"></a>1 图片无法显示的问题</h3><a id="more"></a>
<p>问题产生原因：</p>
<p>后台系统taotao-manage上传的图片是在192.168.0.44的/ucenter/web/taotao-upload<br>前台系统taotao-web访问图片，现在的nginx的配置是：将image.taotao.com指向到本地(192.168.0.50)的/ucneter/web/taotao-upload<br>导致新上传的图片将无法显示。<br>如何解决方式：<br>方式一：部署一台单独的图片服务器，上传和访问都是同一台服务器<br>方式二：使用FTP频繁手动上传到192.168.0.44的/ucenter/web/taotao-upload<br>方式三(推荐使用)：NFS – 网络文件系统(类似windows系统中，多台电脑访问共享文件夹)<br>临时解决方案：在192.168.0.50上直接上传taotao-upload.tar.gz解压</p>
<hr>
<p>下面介绍具体使用NFS<br>在CentOS下搭建NFS服务器总结：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div></pre></td><td class="code"><pre><div class="line">环境介绍：</div><div class="line">1. 服务器： 192.168.0.100</div><div class="line">2. 客户机： 192.168.0.101</div><div class="line">安装软件包：</div><div class="line">服务器和客户机都要安装nfs 和 rpcbind 软件包：</div><div class="line">yum -y install nfs-utils  rpcbind</div><div class="line">服务器端配置：</div><div class="line">1. 在服务器上创建NFS共享目录：mkdir /usr/local/test</div><div class="line">2. 设置共享目录的读写权限: chmod 666 /usr/local/test</div><div class="line">3. 编辑export文件：  vi /etc/exports </div><div class="line">/usr/local/test/ 192.168.0.101(rw,no_root_squash,no_all_squash,sync)</div><div class="line">注意地址和参数表之间没有空格。如果下面设置的mountd端口大于1024，需要在参数表里加入参数：insecure</div><div class="line">4. 配置生效：</div><div class="line">exportfs  -r</div><div class="line">注：配置文件说明：</div><div class="line">/usr/local/test/ 为共享的目录，使用绝对路径。</div><div class="line">192.168.0.101(rw,no_root_squash,no_all_squash,sync) 为客户端的地址及权限，地址可以是一个网段（如：192.168.0.0/24），一个IP地址或者是一个域名，域名支持通配符，如：*.hpce.cn，地址与权限中间没有空格。</div><div class="line">权限说明：</div><div class="line">rw：read-write，可读写；</div><div class="line">ro：read-only，只读；</div><div class="line">sync：文件同时写入硬盘和内存；</div><div class="line">async：文件暂存于内存，而不是直接写入内存；</div><div class="line">no_root_squash：NFS客户端连接服务端时如果使用的是root的话，那么对服务端分享的目录来说，也拥有root权限。显然开启这项是不安全的。</div><div class="line">root_squash：NFS客户端连接服务端时如果使用的是root的话，那么对服务端分享的目录来说，拥有匿名用户权限，通常他将使用nobody或nfsnobody身份；</div><div class="line">all_squash：不论NFS客户端连接服务端时使用什么用户，对服务端分享的目录来说都是拥有匿名用户权限；</div><div class="line">anonuid：匿名用户的UID值，通常是nobody或nfsnobody，可以在此处自行设定；</div><div class="line">anongid：匿名用户的GID值。</div><div class="line"></div><div class="line">5. 启动服务rpcbind、nfs服务:</div><div class="line">service rpcbind  start</div><div class="line">service nfs  start</div><div class="line">服务器端防火墙设置（NFS 开启防墙配置）：</div><div class="line">修改/etc/services文件：</div><div class="line">配置rpc，nfsd，rquotad，mountd使用的端口。配置之前先检查一下是否已经配置过了，已经配过的就不用配置了。没有配置的，要分配一个在此文件中未被使用的端口号。我的机器默认配置了：rpc、nfsd、rquotad</div><div class="line">mountd: 没有配置。手工加上：</div><div class="line">mountd          48620/tcp               #rpc.mountd </div><div class="line">mountd          48620/udp               #rpc.mountd </div><div class="line">如果mountd占用端口大于 1024，在文件 /etc/exports里需要加入参数insecure。如：192.168.0.100(insecure,rw,async,root_squash,no_all_squash)</div><div class="line">重启NFS服务：</div><div class="line">service nfs restart </div><div class="line">在防火墙配置文件里开放上面配置的端口：</div><div class="line">打开文件：vim /etc/sysconfig/iptables</div><div class="line">加入红色部分的内容： </div><div class="line">-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT</div><div class="line">#rpc</div><div class="line">-A INPUT -m state --state NEW -m tcp -p tcp --dport 121 -j ACCEPT</div><div class="line">-A INPUT -m state --state NEW -m udp -p udp --dport 121 -j ACCEPT</div><div class="line">#nfsd</div><div class="line">-A INPUT -m state --state NEW -m tcp -p tcp --dport 2049 -j ACCEPT</div><div class="line">-A INPUT -m state --state NEW -m udp -p udp --dport 2049 -j ACCEPT</div><div class="line">#rquotad</div><div class="line">-A INPUT -m state --state NEW -m tcp -p tcp --dport 875 -j ACCEPT</div><div class="line">-A INPUT -m state --state NEW -m udp -p udp --dport 875 -j ACCEPT</div><div class="line">#mountd</div><div class="line">-A INPUT -m state --state NEW -m tcp -p tcp --dport 48620 -j ACCEPT</div><div class="line">-A INPUT -m state --state NEW -m udp -p udp --dport 48620 -j ACCEPT</div><div class="line">-A INPUT -j REJECT --reject-with icmp-host-prohibited</div><div class="line"></div><div class="line"></div><div class="line">或者：</div><div class="line">/sbin/iptables -I INPUT -p tcp --dport 121 -j ACCEPT </div><div class="line"></div><div class="line">/sbin/iptables -I INPUT -p tcp --dport 2049 -j ACCEPT </div><div class="line"></div><div class="line">/sbin/iptables -I INPUT -p tcp --dport 875 -j ACCEPT </div><div class="line"></div><div class="line">/sbin/iptables -I INPUT -p tcp --dport 48620 -j ACCEPT </div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">客户端挂载：</div><div class="line">创建挂载目录： mkdir /usr/local/test</div><div class="line">查看服务器抛出的共享目录信息：</div><div class="line">showmount -e 192.168.0.100</div><div class="line">Export list for 192.168.0.100:</div><div class="line">/usr/local/test 192.168.0.101</div><div class="line">如果显示：rpc mount export: RPC: Unable to receive; errno = No route to host，则需要在服务端关闭防火墙。</div><div class="line">为了提高NFS的稳定性，使用TCP协议挂载，NFS默认用UDP协议：</div><div class="line">mount -t nfs 192.168.0.100:/usr/local/test  /usr/local/test  -o proto=tcp -o nolock</div><div class="line">挂载成功后即可访问共享的NFS文件系统了。</div><div class="line">卸载已挂在的NFS</div><div class="line">umount /usr/local/test</div><div class="line">查看挂载目录的信息：</div><div class="line">fuser -m -v /usr/local/test</div><div class="line"></div><div class="line">来源： &lt;http://blog.chinaunix.net/uid-23500957-id-4217525.html&gt;</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[tomcat集群]]></title>
      <url>https://volc1605.github.io/2017/03/05/tomcat%E9%9B%86%E7%BE%A4/</url>
      <content type="html"><![CDATA[<h3 id="1-tomcat集群"><a href="#1-tomcat集群" class="headerlink" title="1 tomcat集群"></a>1 tomcat集群</h3><a id="more"></a>
<h4 id="1、安装多个tomcat，每个tomcat部署同一个项目"><a href="#1、安装多个tomcat，每个tomcat部署同一个项目" class="headerlink" title="1、安装多个tomcat，每个tomcat部署同一个项目"></a>1、安装多个tomcat，每个tomcat部署同一个项目</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"># 这里的taotao-web-tomcat-01已经安装成功，并部署了项目，只要复制taotao-web-tomcat-01即可，不需要再次部署项目</div><div class="line"># 复制递归tomcat[taotao-web-tomcat-01]</div><div class="line">cd /ucenter/taotao-web</div><div class="line">cp taotao-web-tomcat-01 taotao-web-tomcat-02 -R</div><div class="line"># 做tomcat集群需要修改三个地方的配置文件</div><div class="line">cd taotao-web-tomcat-02/conf</div><div class="line">vim server.xml</div><div class="line">&lt;!-- 第一个tomcatport=&quot;8005&quot;,这里修改成8105--&gt;</div><div class="line">&lt;Server port=&quot;8005&quot; shutdown=&quot;SHUTDOWN&quot;&gt;</div><div class="line">  &lt;Listener className=&quot;org.apache.catalina.startup.VersionLoggerListener&quot; /&gt;</div><div class="line">  </div><div class="line">&lt;!-- 请求端口，第一个tomcatport=&quot;8080&quot;，修改为8081 --&gt;</div><div class="line">&lt;Connector port=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot;</div><div class="line">   connectionTimeout=&quot;20000&quot;</div><div class="line"> </div><div class="line">&lt;!-- 修改AJP服务端口，第一个tomcat为8009，这里修改为8109 --&gt;</div><div class="line">&lt;Connector port=&quot;8009&quot; protocol=&quot;AJP/1.3&quot; redirectPort=&quot;8443&quot; /&gt;</div><div class="line"># 保存退出</div></pre></td></tr></table></figure>
<h4 id="2、使用nginx做负载均衡"><a href="#2、使用nginx做负载均衡" class="headerlink" title="2、使用nginx做负载均衡"></a>2、使用nginx做负载均衡</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line"># 进入安装nginx服务器，修改配置文件</div><div class="line">cd /ucenter/soft/nginx/conf</div><div class="line">vim nginx.xml</div><div class="line"># 第一个tomcat配置</div><div class="line">server &#123;</div><div class="line">	listen       80;</div><div class="line">	server_name  www.taotao.com taotao.com;</div><div class="line"></div><div class="line">	#charset koi8-r;</div><div class="line"></div><div class="line">	#access_log  logs/host.access.log  main;</div><div class="line"></div><div class="line">	proxy_set_header X-Forwarded-Host $host;</div><div class="line">	proxy_set_header X-Forwarded-Server $host;</div><div class="line">	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</div><div class="line">	proxy_set_header Host $host;</div><div class="line">	location / &#123;</div><div class="line">		proxy_pass http://安装第一个tomcat[taotao-web-tomcat-01]所在服务器的ip:8080;</div><div class="line">		proxy_connect_timeout 600;</div><div class="line">		proxy_read_timeout 600;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"># 需要在http节点添加以下配置</div><div class="line">upstream taotao-web &#123;</div><div class="line">	# 这里taotao-web-tomcat-01和taotao-web-tomcat-02两个tomcat都安装在了同一个服务器上</div><div class="line">	# 8080和8081分别是两个tomcat访问的端口号</div><div class="line">	server 安装第一个tomcat[taotao-web-tomcat-01]所在服务器的ip:8080;</div><div class="line">	server 安装第二个tomcat[taotao-web-tomcat-02]所在服务器的ip:8081;</div><div class="line">&#125;</div><div class="line"># 最后修改nginx.conf配置文件为</div><div class="line">upstream taotao-web &#123;</div><div class="line">	server 安装第一个tomcat[taotao-web-tomcat-01]所在服务器的ip:8080;</div><div class="line">	server 安装第二个tomcat[taotao-web-tomcat-02]所在服务器的ip:8081;</div><div class="line">&#125;</div><div class="line"></div><div class="line">server &#123;</div><div class="line">	listen       80;</div><div class="line">	server_name  www.taotao.com taotao.com;</div><div class="line"></div><div class="line">	#charset koi8-r;</div><div class="line"></div><div class="line">	#access_log  logs/host.access.log  main;</div><div class="line"></div><div class="line">	proxy_set_header X-Forwarded-Host $host;</div><div class="line">	proxy_set_header X-Forwarded-Server $host;</div><div class="line">	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</div><div class="line">	proxy_set_header Host $host;</div><div class="line">	location / &#123;</div><div class="line">		# taotao-web就是上面upstream后面的名称，相当于一个变量</div><div class="line">		proxy_pass http://taotao-web;</div><div class="line">		proxy_connect_timeout 600;</div><div class="line">		proxy_read_timeout 600;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"># 保存退出nginx.conf配置文件,重启nginx</div><div class="line">:wq</div><div class="line">cd /ucenter/soft/nginx/conf/sbin</div><div class="line">./ngin -s reload</div></pre></td></tr></table></figure>
<hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"># 需要明白一点的是nginx配合tomcat作集群，proxy_pass http://taotao-web;是采用轮询方式来代理不同的tomcat的。</div><div class="line"># 第一次访问</div><div class="line"># 	server 安装第一个tomcat[taotao-web-tomcat-01]所在服务器的ip:8080;</div><div class="line"># 第二次就会访问</div><div class="line"># 	server 安装第二个tomcat[taotao-web-tomcat-02]所在服务器的ip:8081;</div><div class="line"># 第三次再次访问</div><div class="line"># 	server 安装第一个tomcat[taotao-web-tomcat-01]所在服务器的ip:8080;</div><div class="line"># 类似MySQL的主从配置后轮询读取主库和从库数据</div><div class="line"># 如果其中一个tomcat挂掉，nginx会自动检测并从轮询列表中移除该轮询对象。</div><div class="line"># 如果这个tomcat又正常启动了，nginx会自动检测添加该对象到轮询列表中，进行下一轮询。</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[linux下部署项目]]></title>
      <url>https://volc1605.github.io/2017/03/05/linux%E9%83%A8%E7%BD%B2%E9%A1%B9%E7%9B%AE/</url>
      <content type="html"><![CDATA[<h3 id="1-部署项目"><a href="#1-部署项目" class="headerlink" title="1 部署项目"></a>1 部署项目</h3><a id="more"></a>
<p>注意：先安装JDK,然后再部署项目</p>
<h4 id="1、创建普通用户"><a href="#1、创建普通用户" class="headerlink" title="1、创建普通用户"></a>1、创建普通用户</h4><p>一般生产环境是不会使用root用户来发布tomcat等应用的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"># 创建linux服务器的普通用户，用户名为ucenter，默认权限目录为home下的ucenter目录</div><div class="line">useradd ucenter</div><div class="line"># 进入根目录的home目录中</div><div class="line">cd home</div><div class="line"># 查看当前用户所处的目录</div><div class="line">pwd</div><div class="line"># ll会列出该文件下的所有文件信息，包括隐藏的文件，而ls -l只列出显式文件</div><div class="line">ll</div><div class="line"># 切换用户到ucenter</div><div class="line">su - ucenter</div><div class="line"># 查看当前用户所处的目录</div><div class="line">pwd</div><div class="line">/home/ucenter</div><div class="line"># 创建用户，用户名为ucenter访问权限为根目录下ucenter目录</div><div class="line">useradd ucenter -d /ucenter</div><div class="line"># 设置ucenter用户的密码为:ucenter</div><div class="line">passwd ucenter</div><div class="line"># 为ucenter用户创建ucenter目录</div><div class="line">mkdir /ucenter</div><div class="line"># 把ucenter目录及其下所有的目录的授权给ucenter用户和其所在的组</div><div class="line">chown ucenter:ucenter /ucenter/ -R</div></pre></td></tr></table></figure></p>
<h4 id="2、安装tomcat"><a href="#2、安装tomcat" class="headerlink" title="2、安装tomcat"></a>2、安装tomcat</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">cd /ucenter/</div><div class="line">mkdir web</div><div class="line">cd web/</div><div class="line">mkdir taotao-manage</div><div class="line">cd taotao-manage/</div><div class="line"># 上传tomcat</div><div class="line">rz</div><div class="line"># 解压到当前目录</div><div class="line">tar -xvf apache-tomcat-7.0.57.tar.gz</div><div class="line"># 重命名</div><div class="line">mv apache-tomcat-7.0.57 taotao-manage-tomcat</div><div class="line">cd taotao-manage-tomcat</div><div class="line">cd webapps/</div><div class="line"># 删除当前目录下所有的文件和文件夹</div><div class="line">rm -rf *</div><div class="line"># 创建ROOT目录</div><div class="line">mkdir ROOT</div><div class="line"># 上传打好的war包，taotao-manage.war</div><div class="line">rz</div><div class="line"># 使用jdk提供的jar命令，解压war包</div><div class="line">jar -xvf taotao-manage.war</div><div class="line"># 解压成功删除taotao-manage.war</div><div class="line">rm  -rf taotao-manage.war</div></pre></td></tr></table></figure>
<h4 id="3、修改项目配置文件"><a href="#3、修改项目配置文件" class="headerlink" title="3、修改项目配置文件"></a>3、修改项目配置文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"># 修改配置文件</div><div class="line">cd /ucenter/web/taotao-manage/taotao-manage-tomcat/WEB-INF/classes</div><div class="line">vim env.properties</div><div class="line"># 修改为</div><div class="line">REPOSITORY_PATH=/ucenter/web/taotao-upload</div><div class="line">IMAGE_BASE_URL=http://image.taotao.com</div><div class="line">TAOTAO_WEB_UTL=http://www.taotao.com</div><div class="line"># 保存退出</div><div class="line">:wq</div><div class="line"># 创建taotao-upload目录</div><div class="line">mkdir /ucenter/web/taotao-upload</div><div class="line"># 修改jdbc.properties</div><div class="line"># 修改rabbitmq.properties</div><div class="line">rabbitmq.host=服务器ip地址</div><div class="line">rabbitmq.port=5672</div><div class="line">rabbitmq.username=taotao</div><div class="line">rabbitmq.password=taotao</div><div class="line">rabbitmq.vhost=/taotao</div><div class="line"># 修改redis.properties</div><div class="line">redis.maxTotal=100</div><div class="line">redis.node1.host=服务器ip地址</div><div class="line">redis.node1.port=6379</div><div class="line"># 保存退出</div></pre></td></tr></table></figure>
<h4 id="4、启动tomcat"><a href="#4、启动tomcat" class="headerlink" title="4、启动tomcat"></a>4、启动tomcat</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">cd /ucenter/web/taotao-manage/taotao-manage-tomcat/bin</div><div class="line"># 查看8080端口是否开放</div><div class="line">/etc/init.d/iptables status</div><div class="line"># dtp后面为开放的端口号，没有8080端口号，需要添加8080端口</div><div class="line">/sbin/iptables -I INPUT -p tcp --dport 8080 -j ACCEPT</div><div class="line">/etc/rc.d/init.d/iptables save</div><div class="line"># 启动tomcat</div><div class="line">./startup.sh</div><div class="line"># 浏览器访问地址：[服务器ip:8080/rest/page/index]成功访问</div></pre></td></tr></table></figure>
<h4 id="5、解决浏览器无法访问线上项目问题"><a href="#5、解决浏览器无法访问线上项目问题" class="headerlink" title="5、解决浏览器无法访问线上项目问题"></a>5、解决浏览器无法访问线上项目问题</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"># 查看所有的tomcat进程</div><div class="line">ps -ef | grep tomcat</div><div class="line"># 结束多个进程</div><div class="line">kill -9 18007 23419</div><div class="line"># 提示不允许的操作，说明没有权限，需要用root用户进行kill</div><div class="line"># 结束全部tomcat进程后，重新启动tomcat</div><div class="line">cd /ucenter/web/taotao-manage/taotao-manage-tomcat/bin</div><div class="line"># 启动taotao-manage-tomcat并查看tomcat日志，&amp;&amp; 代表逻辑执行，如果前面的命令执行成功就执行后面的命令</div><div class="line">./statup.sh &amp;&amp; tail -f ../logs/catalina.out</div><div class="line"># 浏览器访问地址：[服务器ip:8080/rest/page/index]成功访问</div></pre></td></tr></table></figure>
<h4 id="6、本地通过域名访问线上项目"><a href="#6、本地通过域名访问线上项目" class="headerlink" title="6、本地通过域名访问线上项目"></a>6、本地通过域名访问线上项目</h4><h5 id="6-1修改本地SwitchHosts映射"><a href="#6-1修改本地SwitchHosts映射" class="headerlink" title="6.1修改本地SwitchHosts映射"></a>6.1修改本地SwitchHosts映射</h5><p>本地使用SwitchHosts映射，nginx反向代理，访问本地项目，要想访问线上的项目，需要修改SwitchHosts映射和nginx反向代理配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># SwitchHosts映射修改为</div><div class="line"># 淘淘生产环境</div><div class="line">安装nginx服务器的ip地址 manage.taotao.com</div></pre></td></tr></table></figure></p>
<h5 id="6-2修改线上nginx代理配置"><a href="#6-2修改线上nginx代理配置" class="headerlink" title="6.2修改线上nginx代理配置"></a>6.2修改线上nginx代理配置</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"># 进入安装ngin的服务器，切换到普通用户</div><div class="line">su ucenter</div><div class="line">cd soft/nginx/conf</div><div class="line">vim nginx.conf</div><div class="line"># 先做bak</div><div class="line">mv nginx.conf nginx.conf.bak</div><div class="line"># 上传本地的nginx.conf配置文件</div><div class="line">rz</div><div class="line"># 打开nignx.conf(这个文件应该是uft-8进行编码的，否则上传到服务器会出现中文乱码)</div><div class="line">vim nginx.conf</div><div class="line"># 修改manage.taotao.com的代理如下</div><div class="line">server &#123;</div><div class="line">	listen       80;</div><div class="line">	server_name  manage.taotao.com;</div><div class="line">	#charset koi8-r;</div><div class="line">	#access_log  logs/host.access.log  main;</div><div class="line">	proxy_set_header X-Forwarded-Host $host;</div><div class="line">	proxy_set_header X-Forwarded-Server $host;</div><div class="line">	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</div><div class="line">	location / &#123;</div><div class="line">		proxy_pass http://部署taotao-manage项目的tomcat所在的服务器的ip地址:8080;</div><div class="line">		proxy_connect_timeout 600;</div><div class="line">		proxy_read_timeout 600;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"># 保存退出:wq</div><div class="line">cd sbin/</div><div class="line"># 重启nginx</div><div class="line">./nginx -s reload</div><div class="line"># 浏览器访问地址：[manage.taotao.com/rest/page/index]成功访问</div></pre></td></tr></table></figure>
<h3 id="2-其他项目部署问题"><a href="#2-其他项目部署问题" class="headerlink" title="2 其他项目部署问题"></a>2 其他项目部署问题</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"># taotao-web项目，evn.properties</div><div class="line">TAOTAO_MANAGE_URL=http://manage.taotao.com</div><div class="line">TAOTAO_ORDER_URL=http://order.taotao.com</div><div class="line">TAOTAO_SSO_URL=http://sso.taotao.com</div><div class="line">TAOTAO_CART_URL=http://cart.taotao.com</div><div class="line">TAOTAO_ORDER_URL=http://order.taotao.com</div><div class="line">TAOTAO_CART_UTL=http://cart.taotao.com</div><div class="line">SSO_TAOTAO_URL=http://sso.taotao.com</div><div class="line">INDEX_AD1_URL=/rest/content?categoryId=16&amp;page=1&amp;rows=6</div><div class="line">INDEX_AD2_URL=/rest/content?categoryId=18&amp;page=1&amp;rows=1</div><div class="line"># 修改rabbitmq.properties</div><div class="line">rabbitmq.host=安装rabbitmq服务器IP</div><div class="line">rabbitmq.port=5672</div><div class="line">rabbitmq.username=taotao</div><div class="line">rabbitmq.password=taotao</div><div class="line">rabbitmq.vhost=/taotao</div><div class="line"># 修改redis.properties</div><div class="line">redis.maxTotal=100</div><div class="line">redis.node1.host=安装redis服务器的IP</div><div class="line">redis.node1.port=6379</div></pre></td></tr></table></figure>
<p>taotao-web前台项目需要访问后台taotao-manage项目<br>进入部署taotao-web项目的tomcat所在的服务器，进行ping<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">ping taotao.manage.com</div><div class="line"># ping不通，无法访问后台项目，这里就需要参考evn.properties配置文件修改hosts文件</div><div class="line">vim /etc/hosts</div><div class="line">安装nginx服务器的ip地址 manage.taotao.com</div><div class="line">安装nginx服务器的ip地址 order.taotao.com</div><div class="line">安装nginx服务器的ip地址 sso.taotao.com</div><div class="line">安装nginx服务器的ip地址 cart.taotao.com</div><div class="line"># 保存退出</div></pre></td></tr></table></figure></p>
<h3 id="3-配置访问静态资源"><a href="#3-配置访问静态资源" class="headerlink" title="3 配置访问静态资源"></a>3 配置访问静态资源</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">cd cd soft/nginx/conf</div><div class="line">vim nginx.conf</div><div class="line"># 查找image字符串</div><div class="line">/image</div><div class="line"># 修改nginx代理访问静态资源</div><div class="line"># 首先创建静态资源访问目录</div><div class="line">cd /ucenter</div><div class="line"># 上传静态资源,taotao-upload.tar.gz</div><div class="line">rz</div><div class="line"># 解压tar包</div><div class="line">tar -xvf taotao-upload</div><div class="line">rm -rf taotao-upload.tar.gz</div><div class="line"># 查看静态资源</div><div class="line">cd taotao-upload</div><div class="line">cd cd soft/nginx/conf</div><div class="line">vim nginx.conf</div><div class="line"># 修改访问静态资源路径</div><div class="line">server &#123;</div><div class="line">	listen       80;</div><div class="line">	server_name  image.taotao.com;</div><div class="line">	#charset koi8-r;</div><div class="line">	#access_log  logs/host.access.log  main;</div><div class="line">	proxy_set_header X-Forwarded-Host $host;</div><div class="line">	proxy_set_header X-Forwarded-Server $host;</div><div class="line">	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</div><div class="line">	location / &#123;</div><div class="line">		root  /ucenter/taotao-upload;</div><div class="line">	&#125; </div><div class="line">&#125;</div><div class="line"># 保存退出</div><div class="line">cd ../sbin/</div><div class="line"># 重启nginx</div><div class="line">./nginx -s reload</div></pre></td></tr></table></figure>
<h3 id="4-solr相关配置"><a href="#4-solr相关配置" class="headerlink" title="4 solr相关配置"></a>4 solr相关配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"># taotao-search-tomcat中项目配置文件evn.properties</div><div class="line">TAOTAO_MANAGE_URL=http://manage.taotao.com</div><div class="line"># 也要在安装tomcat[taotao-search-tomcat]所在的服务其中配置hosts</div><div class="line">vim /etc/hosts</div><div class="line">安装nginx服务器的ip地址 manage.taotao.com</div><div class="line"># taotao-search-tomcat中项目配置文件solr.properties</div><div class="line">solr.url=http://solr.taotao.com/taotao</div><div class="line">solr.maxRetries=1</div><div class="line">solr.connectionTimeout=500</div><div class="line"># 需要配置hosts，这里仍然指向nginx所在的服务器</div><div class="line">安装nginx服务器的ip地址 solr.taotao.com</div><div class="line"># 需要注意的是域名全部要指向ngin所在的服务器</div><div class="line"># 最后的tomcat[taotao-search-tomcat]所在的服务其中配置hosts配置为</div><div class="line">安装nginx服务器的ip地址 manage.taotao.com</div><div class="line">安装nginx服务器的ip地址 solr.taotao.com</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[linux下安装RabbitMQ]]></title>
      <url>https://volc1605.github.io/2017/03/05/linux%E4%B8%8B%E5%AE%89%E8%A3%85RabbitMQ/</url>
      <content type="html"><![CDATA[<h3 id="1-安装RabbitMQ"><a href="#1-安装RabbitMQ" class="headerlink" title="1 安装RabbitMQ"></a>1 安装RabbitMQ</h3><a id="more"></a>
<h4 id="1、安装Erlang"><a href="#1、安装Erlang" class="headerlink" title="1、安装Erlang"></a>1、安装Erlang</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"># 方式一</div><div class="line">cd /usr/local/src/</div><div class="line">mkdir rabbitmq</div><div class="line">cd rabbitmq</div><div class="line"></div><div class="line">wget http://packages.erlang-solutions.com/erlang-solutions-1.0-1.noarch.rpm</div><div class="line">rpm -Uvh erlang-solutions-1.0-1.noarch.rpm</div><div class="line"></div><div class="line">rpm --import http://packages.erlang-solutions.com/rpm/erlang_solutions.asc</div><div class="line"></div><div class="line">sudo yum install erlang</div><div class="line"># 方式二(推荐使用)</div><div class="line">上传：esl-erlang_17.3-1~centos~6_amd64.rpm</div><div class="line">执行 yum install esl-erlang_17.3-1~centos~6_amd64.rpm</div><div class="line">上传：esl-erlang-compat-R14B-1.el6.noarch.rpm</div><div class="line">yum install esl-erlang-compat-R14B-1.el6.noarch.rpm</div></pre></td></tr></table></figure>
<h4 id="2、安装RabbitMQ"><a href="#2、安装RabbitMQ" class="headerlink" title="2、安装RabbitMQ"></a>2、安装RabbitMQ</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">mkdir /user/local/src/rabbitmq/</div><div class="line">cd /user/local/src/rabbitmq/</div><div class="line"># 上传rabbitmq-server-3.4.1-1.noarch.rpm安装文件</div><div class="line">rz</div><div class="line"># 安装命令</div><div class="line">rpm -ivh rabbitmq-server-3.4.1-1.noarch.rpm</div><div class="line"># rabbitmq服务命令</div><div class="line">cd /user/local/src/rabbitmq/</div><div class="line">service rabbitmq-server start</div><div class="line">service rabbitmq-server stop</div><div class="line">service rabbitmq-server restart</div><div class="line"># 发现启动很慢，原因是rabbitmq启动时需要获取到主机名称，命令行前面的含义[root@主机名称 rebbitmq]</div><div class="line"># rabbitmq，会执行ping 主机名称 结果ping不到，linux需要配置类似window中的host文件</div><div class="line">vim /etc/hosts</div><div class="line"># 添加一条信息，主机名称为命令行前面[root@主机名称 rebbitmq]中的主机名称</div><div class="line">127.0.0.1 主机名称</div><div class="line"># 保存退出</div><div class="line"># 重新启动rabbitmq服务</div><div class="line">service rabbitmq-server start</div><div class="line"># 启动成功</div></pre></td></tr></table></figure>
<h4 id="3、配置"><a href="#3、配置" class="headerlink" title="3、配置"></a>3、配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">cd /etc/rabbitmq</div><div class="line"># 复制配置文件</div><div class="line">cp /usr/share/doc/rabbitmq-server-3.4.1/rabbitmq.config.example /etc/rabbitmq/</div><div class="line"># mv重命名</div><div class="line">mv rabbitmq.config.example rabbitmq.config</div><div class="line"># 开启普通用户远程访问</div><div class="line">vi /etc/rabbitmq/rabbitmq.config</div><div class="line"># 搜索&#123;loopback_users, []&#125;，去掉前面的%%和后面的, 保存退出</div><div class="line"># 重启rabbitmq服务</div><div class="line">service rabbitmq-server restart</div><div class="line"># 设置开机启动</div><div class="line">chkconfig rabbitmq-server on</div></pre></td></tr></table></figure>
<h4 id="4、开启web界面管理工具"><a href="#4、开启web界面管理工具" class="headerlink" title="4、开启web界面管理工具"></a>4、开启web界面管理工具</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">cd /etc/rabbitmq</div><div class="line">rabbitmq-plugins enable rabbitmq_management</div><div class="line">#开放5672和15672两个端口</div><div class="line">/sbin/iptables -I INPUT -p tcp --dport 15672 -j ACCEPT</div><div class="line">/sbin/iptables -I INPUT -p tcp --dport 5672 -j ACCEPT</div><div class="line">/etc/rc.d/init.d/iptables save</div></pre></td></tr></table></figure>
<h4 id="5、创建用户"><a href="#5、创建用户" class="headerlink" title="5、创建用户"></a>5、创建用户</h4><p>浏览器访问，服务器ip+rabbitmq访问端口<br>192.168.10.25:15672<br>默认账号：guest 密码：guest<br>创建用户</p>
<h3 id="2-创建用户绑定交换机"><a href="#2-创建用户绑定交换机" class="headerlink" title="2 创建用户绑定交换机"></a>2 创建用户绑定交换机</h3><p>本地登录地址：<a href="http://127.0.0.1:15672" target="_blank" rel="external">http://127.0.0.1:15672</a><br><!-- ![rabbitmq](https://volc1605.github.io/images/rabbitmq/login.PNG) --><br><img src="http://volc1605.github.io/images/rabbitmq/login.PNG" alt="rabbitmq"><br>1、创建普通用户<br>rabbitmq默认账户为：guest 密码：guest，拥有最高权限，这里需要创建普通权限的用户<br><img src="http://volc1605.github.io/images/rabbitmq/create.gif" alt="rabbitmq"><br>2、为用户添加Virtual Hosts访问权限<br><img src="http://volc1605.github.io/images/rabbitmq/createv.gif" alt="rabbitmq"><br>3、监听队列绑定交换机，实现数据同步。<br>1) 后台系统声明交换机(定义交换机持久化并自动声明的交换机,自动声明并不是在tomcat启动时声明，而是在使用中没有交换机时才声明)。<br>2) 其他系统定义队列(一个持久化自动声明的队列 ，需要绑定后台系统(taotao-manage-web)创建的交换机，这种绑定要人工维护实现(设置权限更灵活))。<br>3) 当后台数据改变时，会发送一个消息给队列，其他系统监听队列是否有消息存在，如果有消息在本系统进行处理。<br>搜索系统需要获取数据的更新，删除和添加消息<br>前台系统需要获取数据的更新和删除消息<br>使用projectname账户登录rabbitmq后台，进行绑定<br><img src="http://volc1605.github.io/images/rabbitmq/binding.gif" alt="rabbitmq"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[linux下安装Redis]]></title>
      <url>https://volc1605.github.io/2017/03/05/linux%E4%B8%8B%E5%AE%89%E8%A3%85Redis/</url>
      <content type="html"><![CDATA[<h3 id="1-linux下安装Redis"><a href="#1-linux下安装Redis" class="headerlink" title="1 linux下安装Redis"></a>1 linux下安装Redis</h3><a id="more"></a>
<h4 id="1、安装依赖"><a href="#1、安装依赖" class="headerlink" title="1、安装依赖"></a>1、安装依赖</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install cpp binutils glibc glibc-kernheaders glibc-common glibc-devel gcc make gcc-c++ libstdc++-devel tcl</div></pre></td></tr></table></figure>
<h4 id="2、安装"><a href="#2、安装" class="headerlink" title="2、安装"></a>2、安装</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">mkdir -p /usr/local/src/redis</div><div class="line">cd /usr/local/src/redis</div><div class="line">wget http://download.redis.io/releases/redis-2.8.17.tar.gz</div><div class="line"># 或者 rz 回车，从本地上传</div><div class="line">tar -xvf redis-2.8.17.tar.gz</div><div class="line">cd redis-2.8.17</div><div class="line">make</div><div class="line">make test #这个就不要执行了，需要很长时间</div><div class="line">make install</div><div class="line"># 安装成功</div><div class="line">cd /ucenter/soft</div><div class="line">mkdir redis</div><div class="line">cd redis/</div><div class="line"># 复制/user/local/src/redis/redis-3.0.0/redis.conf到当前目录，. 代表当前目录</div><div class="line">cp /user/local/src/redis/redis-3.0.0/redis.conf .</div><div class="line"># 使用redis.conf配置文件启动redis服务</div><div class="line">redis-server redis.conf</div><div class="line"># ctrl + c redis停止，并不是后台启动的，这里要修改redis.conf文件</div><div class="line">vim redis.conf</div><div class="line"># 修改daemonize yes，意思是作为后台启动</div><div class="line"># 启动redis查看进程</div><div class="line">redis-server redis.conf</div><div class="line">ps -ef | grep redis</div><div class="line"># 显示结果为，含有前面的进程号和后面的redis服务使用的端口号6379，启动成功</div><div class="line"># 开放端口号</div><div class="line">/sbin/iptables -I INPUT -p tcp --dport 6379 -j ACCEPT</div><div class="line">/etc/rc.d/init.d/iptables save</div><div class="line">/etc/init.d/iptables status</div></pre></td></tr></table></figure>
<h4 id="3、测试"><a href="#3、测试" class="headerlink" title="3、测试"></a>3、测试</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">cd /ucenter/soft/redis</div><div class="line"># 使用redis客户端</div><div class="line">redis-cli</div><div class="line">ping</div><div class="line"># 结果为PANG,连接成功</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[linux下安装solr搜索服务器]]></title>
      <url>https://volc1605.github.io/2017/03/03/solr%E6%90%9C%E7%B4%A2%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      <content type="html"><![CDATA[<h3 id="1-solr"><a href="#1-solr" class="headerlink" title="1 solr"></a>1 solr</h3><a id="more"></a>
<p>修改<br>nginx solr.taotao.com<br>启动solr<br>java -jar start.jar<br>浏览器访问<br>solr.taotao.com/solr</p>
<p>修改D:\solr-4.10.2\example\contexts\solr-jetty-context.xml文件<br>修改：<set name="contextPath"><systemproperty name="hostContext" default="/"></systemproperty></set><br>目的是可以solr.taotao.com这样访问</p>
<p>放置独立的搜索项目<br>启动方式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd D:\solr-4.10.2\example</div><div class="line">java -Dsolr.solr.home=taotao-solr -s jar start.jar</div></pre></td></tr></table></figure></p>
<p>因为linux系统中有java运行环境，只需要复制本地solr中的D:\solr-4.10.2\example文件夹下的文件和文件夹</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">切换到ucenter用户；</div><div class="line">mkdir /ucenter/web/</div><div class="line"># 上传taotao-solr-4.10.1.tar.gz</div><div class="line">rz</div><div class="line"></div><div class="line">tar –xvf taotao-solr-4.10.1.tar.gz</div><div class="line"># 修改/ucenter/web/example目录为/ucenter/web/taotao-solr</div><div class="line">mv example taotao-solr</div><div class="line"></div><div class="line">cd taotao-solr/</div><div class="line"># 启动solr,在linux系统中使用&amp;符号，代表服务在后台运行，ctrl + c后查看进程，solr仍然是启动状态</div><div class="line"># 类型redis中redis.conf里的daemonize yes，意思是作为后台启动配置</div><div class="line">java -Dsolr.solr.home=taotao-solr -jar start.jar &amp;</div><div class="line"># 输出结果有8861，这个就是启动solr的进程号</div><div class="line"># 开放8983solr默认端口号，这里和本地一样是通过nginx代理访问的</div><div class="line"># nginx.conf配置solr访问端口</div><div class="line">server &#123;</div><div class="line">	listen       80;</div><div class="line">	server_name  solr.taotao.com;</div><div class="line"></div><div class="line">	#charset koi8-r;</div><div class="line"></div><div class="line">	#access_log  logs/host.access.log  main;</div><div class="line"></div><div class="line">	proxy_set_header X-Forwarded-Host $host;</div><div class="line">	proxy_set_header X-Forwarded-Server $host;</div><div class="line">	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</div><div class="line">	proxy_set_header Host $host;</div><div class="line">	location / &#123;</div><div class="line">		proxy_pass http://安装solr所在的服务器ip:8983;</div><div class="line">		proxy_connect_timeout 600;</div><div class="line">		proxy_read_timeout 600;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">/sbin/iptables -I INPUT -p tcp --dport 8983 -j ACCEPT</div><div class="line">/etc/rc.d/init.d/iptables save</div><div class="line"># 查看solr进程</div><div class="line">ps -ef | grep java</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[无法写入cookie问题]]></title>
      <url>https://volc1605.github.io/2017/03/02/%E6%97%A0%E6%B3%95%E5%86%99%E5%85%A5cookie%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<h3 id="1-无法写入cookie原因"><a href="#1-无法写入cookie原因" class="headerlink" title="1 无法写入cookie原因"></a>1 无法写入cookie原因</h3><a id="more"></a>
<p>从request中获取域名为127.0.0.1，这样违反了浏览的安全的原则。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cookie.setDomain(getDomainName(request));</div></pre></td></tr></table></figure></p>
<p>解决方法：<br>nginx配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">   listen       80;</div><div class="line">   server_name  cart.taotao.com;</div><div class="line"></div><div class="line">   #charset koi8-r;</div><div class="line"></div><div class="line">   #access_log  logs/host.access.log  main;</div><div class="line"></div><div class="line">proxy_set_header X-Forwarded-Host $host;</div><div class="line">   proxy_set_header X-Forwarded-Server $host;</div><div class="line">   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</div><div class="line"># 配置代理头信息,名称为Host 值为$host变量(内置对象)，nginx传给tomcat真正的域名，</div><div class="line"># 而不是http://127.0.0.1:8083。处理设置cookie时域名不符导致存不到cookie的问题</div><div class="line">proxy_set_header Host $host;</div><div class="line">   location / &#123;</div><div class="line">proxy_pass http://127.0.0.1:8086; # tomcat访问地址</div><div class="line">proxy_connect_timeout 600;</div><div class="line">proxy_read_timeout 600;</div><div class="line">   &#125;</div><div class="line">   </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>总结：<br>二级域名可以将cookie写入到主域名下，a.taotao.com -&gt; taotao.com<br>二级域名之间不能互相写入，a.taotao.com 不能写入到 b.taotao.com</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[电视剧]]></title>
      <url>https://volc1605.github.io/2017/02/21/%E7%94%B5%E8%A7%86%E5%89%A7/</url>
      <content type="html"><![CDATA[<h3 id="1-this-is-us"><a href="#1-this-is-us" class="headerlink" title="1 this is us"></a>1 this is us</h3><a id="more"></a>
<p>S01<br>链接: <a href="http://pan.baidu.com/s/1nvfmydb" target="_blank" rel="external">http://pan.baidu.com/s/1nvfmydb</a> 密码: 53d9<br><img src="https://volc1605.github.io/images/电影/jitang.gif" alt="鸡汤"></p>
<h3 id="2-the-walking-dead"><a href="#2-the-walking-dead" class="headerlink" title="2 the walking dead"></a>2 the walking dead</h3><p>S07<br>链接:<a href="http://pan.baidu.com/s/1jIlxPOy" target="_blank" rel="external">http://pan.baidu.com/s/1jIlxPOy</a> 密码:53nr</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[电影]]></title>
      <url>https://volc1605.github.io/2017/02/21/%E7%94%B5%E5%BD%B1/</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[音乐]]></title>
      <url>https://volc1605.github.io/2017/02/21/%E9%9F%B3%E4%B9%90/</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[按月份水平分表思路]]></title>
      <url>https://volc1605.github.io/2017/02/21/%E6%8C%89%E6%9C%88%E4%BB%BD%E6%B0%B4%E5%B9%B3%E5%88%86%E8%A1%A8%E6%80%9D%E8%B7%AF/</url>
      <content type="html"><![CDATA[<h3 id="1-初始化判断当月表是否存在，不存在侧获取上一个月的表的自增主键ID，创建当月表，自增ID为获取到的ID-1"><a href="#1-初始化判断当月表是否存在，不存在侧获取上一个月的表的自增主键ID，创建当月表，自增ID为获取到的ID-1" class="headerlink" title="1 初始化判断当月表是否存在，不存在侧获取上一个月的表的自增主键ID，创建当月表，自增ID为获取到的ID+1"></a>1 初始化判断当月表是否存在，不存在侧获取上一个月的表的自增主键ID，创建当月表，自增ID为获取到的ID+1</h3><a id="more"></a>
<h4 id="1-1-查询上个月的表的自增ID-并创建当月表"><a href="#1-1-查询上个月的表的自增ID-并创建当月表" class="headerlink" title="1.1 查询上个月的表的自增ID,并创建当月表"></a>1.1 查询上个月的表的自增ID,并创建当月表</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">select max(id) from table_name</div></pre></td></tr></table></figure>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">private function AutoCreate_Table( $Auto_increment )</div><div class="line">    &#123;</div><div class="line">        $CreateSQL = "</div><div class="line">            CREATE TABLE `&#123;$this -&gt;Month_TableName_Now&#125;` (</div><div class="line">              `f_parcel_id` int(11) NOT NULL AUTO_INCREMENT COMMENT '包裹ID',</div><div class="line">              `f_exp_id` int(11) DEFAULT '0' COMMENT '快递员ID',</div><div class="line">              PRIMARY KEY (`f_parcel_id`),</div><div class="line">              KEY `f_parcel_status` (`f_parcel_status`)</div><div class="line">            ) ENGINE=InnoDB AUTO_INCREMENT=&#123;$Auto_increment&#125; DEFAULT CHARSET=utf8 COMMENT='包裹数据分表';</div><div class="line">        ";</div><div class="line">        //创建表</div><div class="line">        return ( new \Think\Model() ) -&gt;execute( $CreateSQL );</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h4 id="1-2-判断上一个月的表是否存在，如果不存在把主表作为第二张要关联的表，如果存在就把上个月的表作为第二关联的表-默认关联两个月数据"><a href="#1-2-判断上一个月的表是否存在，如果不存在把主表作为第二张要关联的表，如果存在就把上个月的表作为第二关联的表-默认关联两个月数据" class="headerlink" title="1.2 判断上一个月的表是否存在，如果不存在把主表作为第二张要关联的表，如果存在就把上个月的表作为第二关联的表(默认关联两个月数据)"></a>1.2 判断上一个月的表是否存在，如果不存在把主表作为第二张要关联的表，如果存在就把上个月的表作为第二关联的表(默认关联两个月数据)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">-- 查询xm170204数据库中的表名含有当月时间的表全名</div><div class="line">select table_name from information_schema.tables where table_schema=&apos;xm170204&apos; and table_name like &apos;%1701%&apos;;</div></pre></td></tr></table></figure>
<h3 id="2-按使用场景构造所需sql，用于操作数据"><a href="#2-按使用场景构造所需sql，用于操作数据" class="headerlink" title="2 按使用场景构造所需sql，用于操作数据"></a>2 按使用场景构造所需sql，用于操作数据</h3><h3 id="3-封装通用的方法用于操作分表数据"><a href="#3-封装通用的方法用于操作分表数据" class="headerlink" title="3 封装通用的方法用于操作分表数据"></a>3 封装通用的方法用于操作分表数据</h3>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MyBatis批量]]></title>
      <url>https://volc1605.github.io/2017/02/21/MyBatis%E6%89%B9%E9%87%8F/</url>
      <content type="html"><![CDATA[<h3 id="1-Mybatis批量更新出现的问题"><a href="#1-Mybatis批量更新出现的问题" class="headerlink" title="1.Mybatis批量更新出现的问题"></a>1.Mybatis批量更新出现的问题</h3><a id="more"></a>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"importStationDataFromExcel"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"list"</span> <span class="attr">item</span>=<span class="string">"item"</span> <span class="attr">index</span>=<span class="string">"index"</span> <span class="attr">open</span>=<span class="string">""</span></span></div><div class="line">			<span class="attr">close</span>=<span class="string">""</span> <span class="attr">separator</span>=<span class="string">";"</span>&gt;</div><div class="line">			update tp_user u set u.f_station_name = #&#123;item.fStationName&#125; where u.f_user_id = #&#123;item.fUserId&#125;</div><div class="line">		<span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></div></pre></td></tr></table></figure>
<p>组织sql语句，在赋值时报错，sql语句错误<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">### SQL: update tp_user     SET f_station_name = ?      WHERE f_user_id = ?     ;     update tp_user     SET f_station_name = ?      WHERE f_user_id = ?     ;     update tp_user     SET f_station_name = ?      WHERE f_user_id = ?</div><div class="line">### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Erreur de syntaxe près de 'update tp_user</div><div class="line">			 SET f_station_name = 'nanjing' </div><div class="line">			 WHERE f_use' à la ligne 5</div></pre></td></tr></table></figure></p>
<p>原因：<br>配置的 MySQL jdbc 链接字符串 默认不支持一次性执行多个sql 语句，<br>我们可以在配置文件中链接数据库的url添加一个参数allowMultiQueries=true，代表支持执行多个条sql，问题解决。<br>jdbc.url=jdbc:mysql://192.168.1.2:3/test4?characterEncoding=utf-8&amp;allowMultiQueries=true</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[事件调用存储过程]]></title>
      <url>https://volc1605.github.io/2017/02/17/%E8%A7%A6%E5%8F%91%E5%99%A8%E8%B0%83%E7%94%A8%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/</url>
      <content type="html"><![CDATA[<h3 id="1-存储过程"><a href="#1-存储过程" class="headerlink" title="1.存储过程"></a>1.存储过程</h3><a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"># 删除存在的存储过程</div><div class="line">DROP PROCEDURE IF EXISTS updateParcelStatu_1;</div><div class="line"># 创建存储过程</div><div class="line">CREATE PROCEDURE updateParcelStatu_1() </div><div class="line">BEGIN </div><div class="line">DECLARE sql_1 VARCHAR(1000);</div><div class="line">DECLARE d char(6);</div><div class="line">-- 构建表名 获取前两个月日期 格式201701</div><div class="line">select DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL 2 MONTH),&apos;%Y%m&apos;) into d;</div><div class="line">-- 两个月以前包裹状态为已到站更新为已提货</div><div class="line">SET sql_1:=CONCAT(&quot;update tp_parcel_info_&quot;,d,&quot; pi SET pi.f_parcel_status = &apos;1&apos; where pi.f_parcel_status = &apos;0&apos; and pi.f_arrive_time &lt; DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 2 MONTH),&apos;%Y%m%d%H%i%s&apos;);&quot;); </div><div class="line"># 执行sql_1SQL语句;</div><div class="line">SET @sqlStr:=sql_1;</div><div class="line">PREPARE stmt FROM @sqlStr;</div><div class="line">EXECUTE stmt;</div><div class="line">END</div><div class="line"></div><div class="line"># 调用存储过程</div><div class="line">call updateParcelStatu_1();</div><div class="line"></div><div class="line"># 获取执行后的sqlStr值</div><div class="line">SELECT @sqlStr;</div></pre></td></tr></table></figure>
<h3 id="2-创建事件"><a href="#2-创建事件" class="headerlink" title="2.创建事件"></a>2.创建事件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">begin</div><div class="line">	call updateParcelStatu_1();</div><div class="line">end</div></pre></td></tr></table></figure>
<p><img src="https://volc1605.github.io/images/触发器调用存储过程/trigger.png" alt="trigger"><br><img src="https://volc1605.github.io/images/触发器调用存储过程/set.png" alt="set"> </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># 每天凌晨执行</div><div class="line">CREATE EVENT updateInfoStatus </div><div class="line">ON SCHEDULE EVERY 1 DAY STARTS &apos;2017-02-20 01:00:00&apos;</div><div class="line">DO</div><div class="line">call updateParcelStatu_1();</div></pre></td></tr></table></figure>
<h3 id="3-查看事件是否启动"><a href="#3-查看事件是否启动" class="headerlink" title="3.查看事件是否启动"></a>3.查看事件是否启动</h3><p>SHOW VARIABLES LIKE ‘event_scheduler’;<br>启动事件开始执行<br>SET GLOBAL event_scheduler = 1;</p>
<h3 id="4-查看事件信息"><a href="#4-查看事件信息" class="headerlink" title="4.查看事件信息"></a>4.查看事件信息</h3><p>SHOW EVENTS</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[mysql分组按条件获取数据]]></title>
      <url>https://volc1605.github.io/2017/02/16/mysql%E5%88%86%E7%BB%84%E6%8C%89%E6%9D%A1%E4%BB%B6%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE/</url>
      <content type="html"><![CDATA[<p>1.查询含有两个及以上的圆通包裹的所有站点信息，并获取最近的两个包裹运单号运单的站点信息<br>参考：<a href="http://www.cnblogs.com/joeblackzqq/p/4334132.html" target="_blank" rel="external">http://www.cnblogs.com/joeblackzqq/p/4334132.html</a></p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line">SELECT ttt.f_station_id,</div><div class="line">       ttt.f_station_name,</div><div class="line">       group_concat(ttt.f_mail_no) 运单</div><div class="line">FROM</div><div class="line">  (SELECT tt.f_station_id,</div><div class="line">          tt.f_mail_no,</div><div class="line">          u.f_station_name</div><div class="line">   FROM</div><div class="line">     (SELECT a.f_station_id,</div><div class="line">             a.f_mail_no,</div><div class="line">             a.f_arrive_time</div><div class="line">      FROM</div><div class="line">        (SELECT i2.f_parcel_id,</div><div class="line">                i2.f_station_id,</div><div class="line">                i2.f_arrive_time,</div><div class="line">                i2.f_mail_no</div><div class="line">         FROM tp_parcel_info_201608 i2</div><div class="line">         WHERE i2.f_company_id = &apos;108&apos; ) a</div><div class="line">      WHERE 2 &gt;=</div><div class="line">          (SELECT count(1)</div><div class="line">           FROM</div><div class="line">             (SELECT i2.f_parcel_id,</div><div class="line">                     i2.f_station_id,</div><div class="line">                     i2.f_arrive_time,</div><div class="line">                     i2.f_mail_no</div><div class="line">              FROM tp_parcel_info_201608 i2</div><div class="line">              WHERE i2.f_company_id = &apos;108&apos; ) b</div><div class="line">           WHERE a.f_station_id = b.f_station_id</div><div class="line">             AND a.f_arrive_time &lt;= b.f_arrive_time )</div><div class="line">      ORDER BY a.f_station_id,</div><div class="line">               a.f_arrive_time DESC) tt</div><div class="line">   LEFT JOIN tp_user u ON u.f_user_id = tt.f_station_id</div><div class="line">   WHERE tt.f_station_id IN</div><div class="line">   -- 含有两个及以上的圆通包裹数据的所有站点ID,用于排除不满足条件的站点ID</div><div class="line">       (SELECT t.f_station_id</div><div class="line">        FROM</div><div class="line">          (SELECT count(1) c,</div><div class="line">                  pi.f_station_id</div><div class="line">           FROM tp_parcel_info_201608 pi</div><div class="line">           WHERE pi.f_company_id = &apos;108&apos;</div><div class="line">           GROUP BY pi.f_station_id) t</div><div class="line">        WHERE t.c &gt; 2 ) ) ttt</div><div class="line">GROUP BY ttt.f_station_id</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[视图]]></title>
      <url>https://volc1605.github.io/2017/02/06/%E8%A7%86%E5%9B%BE/</url>
      <content type="html"><![CDATA[<h3 id="1-MySQL视图"><a href="#1-MySQL视图" class="headerlink" title="1.MySQL视图"></a>1.MySQL视图</h3><a id="more"></a>
<h4 id="1-1-视图的使用条件"><a href="#1-1-视图的使用条件" class="headerlink" title="1.1 视图的使用条件"></a>1.1 视图的使用条件</h4><p>如果某个查询结果出现的非常频繁，就是要经常拿这个查询结果来做子查询，使用视图会更加方便。</p>
<h3 id="2-使用视图的好处"><a href="#2-使用视图的好处" class="headerlink" title="2.使用视图的好处"></a>2.使用视图的好处</h3><p>a、简化查询语句<br>b、可以进行权限控制<br>把表的权限封闭，但是开放相应的视图权限，视图里只开放部分数据列。<br>c、大数据表分表的时候，比如某张表的数据有100万条，那么可以将这张表分成四个视图。<br>按照对id取余计算。</p>
<h3 id="3-存储过程创建视图"><a href="#3-存储过程创建视图" class="headerlink" title="3.存储过程创建视图"></a>3.存储过程创建视图</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">create PROCEDURE useView()</div><div class="line">BEGIN</div><div class="line">create or replace view tUser2 as select * from t_user;</div><div class="line">select * from tUser2;</div><div class="line">END</div><div class="line">-- 调用</div><div class="line">call useView();</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[触发器]]></title>
      <url>https://volc1605.github.io/2017/02/06/%E8%A7%A6%E5%8F%91%E5%99%A8/</url>
      <content type="html"><![CDATA[<h3 id="1-MySQL触发器"><a href="#1-MySQL触发器" class="headerlink" title="1.MySQL触发器"></a>1.MySQL触发器</h3><p>触发器是一种特殊的存储过程，它在插入，删除或者修改特定表中的数据时触发执行，它比数据库本身标准的功能有更精细和更复杂的数据控制能力。<br>它具有这样的特征：<br>监视地点：一般就是表名<br>监视事件：update/delete/insert<br>触发时间：after/before<br>触发事件：update/delete/insert</p>
<p>他不能直接被调用，是由数据库主动执行。<br><a id="more"></a></p>
<p>建表<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">DROP TABLE IF EXISTS tab1;  </div><div class="line">CREATE TABLE tab1(  </div><div class="line">    tab1_id varchar(11)  </div><div class="line">);</div><div class="line">DROP TABLE IF EXISTS tab2;  </div><div class="line">CREATE TABLE tab2(  </div><div class="line">    tab2_id varchar(11)  </div><div class="line">);</div></pre></td></tr></table></figure></p>
<p>创建触发器:t_afterinsert_on_tab1</p>
<p>作用：增加tab1表记录后自动将记录增加到tab2表中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">DROP TRIGGER IF EXISTS t_afterinsert_on_tab1;  </div><div class="line">CREATE TRIGGER t_afterinsert_on_tab1   </div><div class="line">AFTER INSERT ON tab1  </div><div class="line">FOR EACH ROW  </div><div class="line">BEGIN  </div><div class="line">     insert into tab2(tab2_id) values(new.tab1_id);  </div><div class="line">END;</div></pre></td></tr></table></figure></p>
<p>测试<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">INSERT INTO tab1(tab1_id) values(&apos;0001&apos;);</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM tab1;  </div><div class="line">SELECT * FROM tab2;</div></pre></td></tr></table></figure>
<p>example2:</p>
<p>创建触发器:t_afterdelete_on_tab1</p>
<p>作用：删除tab1表记录后自动将tab2表中对应的记录删去<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">DROP TRIGGER IF EXISTS t_afterdelete_on_tab1;  </div><div class="line">CREATE TRIGGER t_afterdelete_on_tab1  </div><div class="line">AFTER DELETE ON tab1  </div><div class="line">FOR EACH ROW  </div><div class="line">BEGIN  </div><div class="line">      delete from tab2 where tab2_id=old.tab1_id;  </div><div class="line">END;</div></pre></td></tr></table></figure></p>
<p>测试<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">DELETE FROM tab1 WHERE tab1_id=&apos;0001&apos;;</div></pre></td></tr></table></figure></p>
<p>查看结果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM tab1;  </div><div class="line">SELECT * FROM tab2;</div></pre></td></tr></table></figure></p>
<p>实例一<br>1.创建存储过程<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">DROP PROCEDURE IF EXISTS updateParcelStatu;</div><div class="line">CREATE PROCEDURE updateParcelStatu(IN tableName VARCHAR(30),OUT parcelIdStr VARCHAR(1000)) </div><div class="line">BEGIN </div><div class="line">DECLARE sql_1 VARCHAR(1000);</div><div class="line"># 查询需要修改的包裹状态的包裹ID</div><div class="line">SELECT GROUP_CONCAT(t.f_parcel_id) FROM ( SELECT nr.f_parcel_id FROM tp_parcel_notice_result nr WHERE nr.f_sms_notice = &apos;0&apos; AND nr.f_weixin_notice = &apos;0&apos; AND (now() - nr.f_create_time) &gt; 60000 ) t ORDER BY t.f_parcel_id INTO parcelIdStr;</div><div class="line"># 根据包裹ID更新包裹状态为通知失败</div><div class="line">SET sql_1 = CONCAT(&quot;UPDATE tp_parcel_info_&quot;, tableName, &quot; pi SET pi.f_parcel_status=&apos;5&apos; WHERE pi.f_parcel_id in (&quot;,parcelIdStr,&quot;);&quot;); </div><div class="line">#执行sql_1SQL语句;</div><div class="line">SET @sql_1=sql_1;</div><div class="line">PREPARE stmt FROM @sql_1;</div><div class="line">EXECUTE stmt;</div><div class="line">END</div><div class="line"></div><div class="line">call updateParcelStatu(&apos;201608&apos;,@parcelIdStr);</div><div class="line">SELECT @parcelIdStr;</div><div class="line">SELECT @sql_1;</div></pre></td></tr></table></figure></p>
<p>2.创建事件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">begin</div><div class="line">	call updateParcelStatu();</div><div class="line">end</div></pre></td></tr></table></figure></p>
<p>3.设置事件为开启状态，执行sql<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SET GLOBAL event_scheduler = 1;</div></pre></td></tr></table></figure></p>
<p>4.重启mysql服务</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[JDBC]]></title>
      <url>https://volc1605.github.io/2017/02/06/Jdbc%E5%A4%8D%E4%B9%A0/</url>
      <content type="html"><![CDATA[<h3 id="1-链接数据库工具类"><a href="#1-链接数据库工具类" class="headerlink" title="1.链接数据库工具类"></a>1.链接数据库工具类</h3><a id="more"></a>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.bmx.omp.business.util;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.sql.Connection;</div><div class="line"><span class="keyword">import</span> java.sql.DriverManager;</div><div class="line"><span class="keyword">import</span> java.sql.ResultSet;</div><div class="line"><span class="keyword">import</span> java.sql.SQLException;</div><div class="line"><span class="keyword">import</span> java.sql.Statement;</div><div class="line"><span class="keyword">import</span> java.util.HashMap;</div><div class="line"><span class="keyword">import</span> java.util.Map;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtils</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="title">JdbcUtils</span><span class="params">()</span> </span>&#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String url;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String user;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String password;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ThreadLocal&lt;Connection&gt; tl = <span class="keyword">new</span> ThreadLocal&lt;Connection&gt;();</div><div class="line">    <span class="comment">// 将四要素抽取至配置文件</span></div><div class="line">    <span class="keyword">static</span> &#123;</div><div class="line">	<span class="keyword">try</span> &#123;</div><div class="line">	    <span class="comment">// 读取配置文件 获得四要素</span></div><div class="line">	    String driverClass = <span class="string">"com.mysql.jdbc.Driver"</span>;</div><div class="line">	    url = <span class="string">"jdbc:mysql://999.999.1.1:3306/test?characterEncoding=utf-8"</span>;</div><div class="line">	    user = <span class="string">"root"</span>;</div><div class="line">	    password = <span class="string">"123456"</span>;</div><div class="line">	    <span class="comment">// 注册驱动</span></div><div class="line">	    Class.forName(driverClass);</div><div class="line">	&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">	    <span class="keyword">throw</span> <span class="keyword">new</span> ExceptionInInitializerError(e);</div><div class="line">	&#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// 获得数据库连接</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String, Object&gt; <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</div><div class="line">	ThreadLocal&lt;Connection&gt; tl = <span class="keyword">new</span> ThreadLocal&lt;Connection&gt;();</div><div class="line">	<span class="comment">// 返回当前线程绑定的连接 原因是该连接上有事务</span></div><div class="line">	Connection conn = tl.get();</div><div class="line">	<span class="comment">// 如果conn 为 null 说明线程上未绑定连接</span></div><div class="line">	<span class="keyword">if</span> (conn == <span class="keyword">null</span>) &#123;</div><div class="line">	    <span class="comment">// 获得与数据库的连接</span></div><div class="line">	    conn = DriverManager.getConnection(url, user, password);</div><div class="line">	    <span class="comment">// 绑定到当前线程</span></div><div class="line">	    tl.set(conn);</div><div class="line">	&#125;</div><div class="line">	Map&lt;String, Object&gt; m = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</div><div class="line">	m.put(<span class="string">"thread"</span>, tl);</div><div class="line">	m.put(<span class="string">"conn"</span>, conn);</div><div class="line">	System.out.println(<span class="string">"创建线程"</span> + tl);</div><div class="line">	System.out.println(<span class="string">"线程绑定的链接"</span> + conn);</div><div class="line">	<span class="keyword">return</span> m;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// 开启事务</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">startTransaction</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">try</span> &#123;</div><div class="line">	    <span class="comment">// 获得当前线程上绑定的连接</span></div><div class="line">	    Map&lt;String, Object&gt; m = getConnection();</div><div class="line">	    Connection conn = (Connection) m.get(<span class="string">"conn"</span>);</div><div class="line">	    <span class="comment">// 开启事务</span></div><div class="line">	    conn.setAutoCommit(<span class="keyword">false</span>);</div><div class="line">	&#125; <span class="keyword">catch</span> (SQLException e) &#123;</div><div class="line">	&#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// 提交事务</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">commit</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="comment">// 获得当前线程上绑定的连接</span></div><div class="line">	Connection conn = tl.get();</div><div class="line">	<span class="comment">// 判断</span></div><div class="line">	<span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</div><div class="line">	    <span class="keyword">try</span> &#123;</div><div class="line">		<span class="comment">// 如果线程上有连接 提交该连接事务</span></div><div class="line">		conn.commit();</div><div class="line">	    &#125; <span class="keyword">catch</span> (SQLException e) &#123;</div><div class="line">	    &#125;</div><div class="line">	&#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// 回滚事务</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">rollback</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="comment">// 获得当前线程上绑定的连接</span></div><div class="line">	Connection conn = tl.get();</div><div class="line">	<span class="comment">// 判断</span></div><div class="line">	<span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</div><div class="line">	    <span class="keyword">try</span> &#123;</div><div class="line">		<span class="comment">// 如果线程上有连接 回滚事务</span></div><div class="line">		conn.rollback();</div><div class="line">	    &#125; <span class="keyword">catch</span> (SQLException e) &#123;</div><div class="line">	    &#125;</div><div class="line">	&#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// 关闭连接 关闭当前线程上绑定的连接</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="comment">// 获得当前线程上绑定的连接</span></div><div class="line">	Connection conn = tl.get();</div><div class="line">	<span class="comment">// 判断</span></div><div class="line">	<span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</div><div class="line">	    <span class="keyword">try</span> &#123;</div><div class="line">		<span class="comment">// 如果线程上有连接 关闭连接</span></div><div class="line">		conn.close();</div><div class="line">	    &#125; <span class="keyword">catch</span> (SQLException e) &#123;</div><div class="line">	    &#125;</div><div class="line">	    <span class="comment">// 移除当前线程绑定的 connnection 对象</span></div><div class="line">	    tl.remove();</div><div class="line">	&#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">release</span><span class="params">(Connection conn, Statement stmt, ResultSet rs)</span> </span>&#123;</div><div class="line">	<span class="keyword">if</span> (rs != <span class="keyword">null</span>) &#123;</div><div class="line">	    <span class="keyword">try</span> &#123;</div><div class="line">		rs.close();</div><div class="line">	    &#125; <span class="keyword">catch</span> (SQLException e) &#123;</div><div class="line">		e.printStackTrace();</div><div class="line">	    &#125;</div><div class="line">	    rs = <span class="keyword">null</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">if</span> (stmt != <span class="keyword">null</span>) &#123;</div><div class="line">	    <span class="keyword">try</span> &#123;</div><div class="line">		stmt.close();</div><div class="line">	    &#125; <span class="keyword">catch</span> (SQLException e) &#123;</div><div class="line">		e.printStackTrace();</div><div class="line">	    &#125;</div><div class="line">	    stmt = <span class="keyword">null</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</div><div class="line">	    <span class="keyword">try</span> &#123;</div><div class="line">		conn.close();</div><div class="line">	    &#125; <span class="keyword">catch</span> (SQLException e) &#123;</div><div class="line">		e.printStackTrace();</div><div class="line">	    &#125;</div><div class="line">	    conn = <span class="keyword">null</span>;</div><div class="line">	&#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>2.使用多线程绑定链接<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line">   <span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">queryParcelThread</span><span class="params">(ParcelBean mi)</span> </span>&#123;</div><div class="line">Map&lt;String, Object&gt; retMap = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</div><div class="line"><span class="keyword">try</span> &#123;</div><div class="line">    Map&lt;String, Object&gt; m1 = JdbcUtils.getConnection();</div><div class="line">    Connection connection1 = (Connection) m1.get(<span class="string">"conn"</span>);</div><div class="line">    Map&lt;String, Object&gt; m2 = JdbcUtils.getConnection();</div><div class="line">    Connection connection2 = (Connection) m2.get(<span class="string">"conn"</span>);</div><div class="line">    Map&lt;String, Object&gt; m3 = JdbcUtils.getConnection();</div><div class="line">    Connection connection3 = (Connection) m3.get(<span class="string">"conn"</span>);</div><div class="line">    Statement sta1 = connection1.createStatement();</div><div class="line">    Statement sta2 = connection2.createStatement();</div><div class="line">    Statement sta3 = connection3.createStatement();</div><div class="line">    <span class="comment">// 查询语句</span></div><div class="line">    String sql1 = <span class="string">"select "</span> + <span class="string">"f_parcel_id,f_recipient_name "</span> + <span class="string">"from "</span> + <span class="string">"tp_parcel_info "</span></div><div class="line">	    + <span class="string">"where f_station_id = 293"</span>;</div><div class="line">    String sql2 = <span class="string">"select "</span> + <span class="string">"f_parcel_id,f_recipient_name "</span> + <span class="string">"from "</span> + <span class="string">"tp_parcel_info "</span></div><div class="line">	    + <span class="string">"where f_station_id = 366"</span>;</div><div class="line">    String sql3 = <span class="string">"select "</span> + <span class="string">"f_parcel_id,f_recipient_name "</span> + <span class="string">"from "</span> + <span class="string">"tp_parcel_info "</span></div><div class="line">	    + <span class="string">"where f_station_id = 1002"</span>;</div><div class="line">    Date dt = <span class="keyword">new</span> Date();</div><div class="line">    Long time = dt.getTime();</div><div class="line">    ResultSet rs1 = sta1.executeQuery(sql1);</div><div class="line">    ResultSet rs2 = sta2.executeQuery(sql2);</div><div class="line">    ResultSet rs3 = sta3.executeQuery(sql3);</div><div class="line">    Date dt2 = <span class="keyword">new</span> Date();</div><div class="line">    Long time2 = dt2.getTime();</div><div class="line">    System.out.println(<span class="string">"毫秒数 ："</span> + (time2 - time));</div><div class="line">    System.out.println(sql3);</div><div class="line">    <span class="comment">// while (rs.next()) &#123;</span></div><div class="line">    <span class="comment">// String f_parcel_id = rs.getString(1);</span></div><div class="line">    <span class="comment">// String f_recipient_name = rs.getString(2);</span></div><div class="line">    <span class="comment">// System.out.println(f_parcel_id);</span></div><div class="line">    <span class="comment">// System.out.println(f_recipient_name);</span></div><div class="line">    <span class="comment">// &#125;</span></div><div class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</div><div class="line">    e.printStackTrace();</div><div class="line">&#125;</div><div class="line"><span class="keyword">return</span> retMap;</div><div class="line">   &#125;</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MySQL存储过程]]></title>
      <url>https://volc1605.github.io/2017/01/20/MySQL%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/</url>
      <content type="html"><![CDATA[<h3 id="1-java调用存储过程"><a href="#1-java调用存储过程" class="headerlink" title="1 java调用存储过程"></a>1 java调用存储过程</h3><a id="more"></a>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//	String url = "jdbc:mysql://192.168.1.1:3306/xmbg?characterEncoding=utf-8";</span></div><div class="line"><span class="comment">//	String user = "root";</span></div><div class="line"><span class="comment">//	String password = "yangqiang88";</span></div><div class="line"><span class="comment">//	Connection conn = DriverManager.getConnection(url, user, password);</span></div><div class="line">	Connection conn = dataSource.getConnection();</div><div class="line">	conn.setAutoCommit(<span class="keyword">false</span>);</div><div class="line">	CallableStatement cstmt = conn.prepareCall(<span class="string">"&#123; call test2(?) &#125;"</span>);</div><div class="line">	cstmt.registerOutParameter(<span class="number">1</span>, Types.VARCHAR);</div><div class="line">	cstmt.execute();</div><div class="line">	conn.commit();</div><div class="line">	String testPrint = cstmt.getString(<span class="number">1</span>);</div><div class="line">	System.out.println(<span class="string">"返回值：：：：：： "</span> + testPrint);</div></pre></td></tr></table></figure>
<p>参考：<br><a href="http://blog.csdn.net/evankaka/article/details/47276339" target="_blank" rel="external">http://blog.csdn.net/evankaka/article/details/47276339</a></p>
<h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><h4 id="创建表："><a href="#创建表：" class="headerlink" title="创建表："></a>创建表：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">DROP TABLE IF EXISTS `t_user`;</div><div class="line">CREATE TABLE `t_user` (</div><div class="line">  `USER_ID` int(11) NOT NULL AUTO_INCREMENT,</div><div class="line">  `USER_NAME` char(30) NOT NULL,</div><div class="line">  `USER_PASSWORD` char(10) NOT NULL,</div><div class="line">  `USER_EMAIL` char(30) NOT NULL,</div><div class="line">  PRIMARY KEY (`USER_ID`),</div><div class="line">  KEY `IDX_NAME` (`USER_NAME`)</div><div class="line">) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8;</div><div class="line"></div><div class="line">-- ----------------------------</div><div class="line">-- Records of t_user</div><div class="line">-- ----------------------------</div><div class="line">INSERT INTO `t_user` VALUES (&apos;1&apos;, &apos;王小二&apos;, &apos;123&apos;, &apos;123@qq.com&apos;);</div><div class="line">INSERT INTO `t_user` VALUES (&apos;2&apos;, &apos;葫芦娃&apos;, &apos;123&apos;, &apos;123@qq.com&apos;);</div><div class="line">INSERT INTO `t_user` VALUES (&apos;3&apos;, &apos;红孩儿&apos;, &apos;123&apos;, &apos;123@qq.com&apos;);</div><div class="line">INSERT INTO `t_user` VALUES (&apos;4&apos;, &apos;哪儿托&apos;, &apos;123&apos;, &apos;123@qq.com&apos;);</div><div class="line">INSERT INTO `t_user` VALUES (&apos;5&apos;, &apos;丹童&apos;, &apos;123&apos;, &apos;123@qq.com&apos;);</div><div class="line">INSERT INTO `t_user` VALUES (&apos;6&apos;, &apos;清风&apos;, &apos;123&apos;, &apos;123@qq.com&apos;);</div><div class="line">INSERT INTO `t_user` VALUES (&apos;7&apos;, &apos;明月&apos;, &apos;123&apos;, &apos;123@qq.com&apos;);</div><div class="line">INSERT INTO `t_user` VALUES (&apos;8&apos;, &apos;药童&apos;, &apos;123&apos;, &apos;123@qq.com&apos;);</div><div class="line">INSERT INTO `t_user` VALUES (&apos;9&apos;, &apos;郓哥&apos;, &apos;123&apos;, &apos;123@qq.com&apos;);</div><div class="line">INSERT INTO `t_user` VALUES (&apos;10&apos;, &apos;高峰&apos;, &apos;123&apos;, &apos;123@qq.com&apos;);</div></pre></td></tr></table></figure>
<h4 id="带IN的存储过程"><a href="#带IN的存储过程" class="headerlink" title="带IN的存储过程"></a>带IN的存储过程</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">CREATE  PROCEDURE  SP_SEARCH(IN p_name CHAR(20))  </div><div class="line">BEGIN  </div><div class="line">IF p_name is null or p_name=&apos;&apos; THEN  </div><div class="line">SELECT * FROM t_user;  </div><div class="line">ELSE  </div><div class="line">SELECT * FROM t_user WHERE USER_NAME LIKE p_name;  </div><div class="line">END IF;  </div><div class="line">END</div></pre></td></tr></table></figure>
<p>调用存储过程<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">CALL SP_SEARCH(&apos;王小二&apos;);</div></pre></td></tr></table></figure></p>
<h3 id="带OUT的存储过程"><a href="#带OUT的存储过程" class="headerlink" title="带OUT的存储过程"></a>带OUT的存储过程</h3><p>根据传入用户名称进行查询，统计次数返回给p_int变量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">CREATE  PROCEDURE  SP_SEARCH2(IN p_name CHAR(20),OUT p_int INT)  </div><div class="line">BEGIN  </div><div class="line">IF p_name is null or p_name=&apos;&apos; THEN  </div><div class="line">SELECT * FROM t_user;  </div><div class="line">ELSE  </div><div class="line">SELECT * FROM t_user WHERE USER_NAME LIKE p_name;  </div><div class="line">END IF;  </div><div class="line">SELECT FOUND_ROWS() INTO p_int;  </div><div class="line">END</div></pre></td></tr></table></figure></p>
<p>分别执行调用：<br>查询高字开头的用户信息，定义参数@p_num，用于接收返回值，然后显示返回值<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">CALL SP_SEARCH2(&apos;高%&apos;,@p_num);</div><div class="line">SELECT @p_num;</div></pre></td></tr></table></figure></p>
<h4 id="带INOUT的存储过程"><a href="#带INOUT的存储过程" class="headerlink" title="带INOUT的存储过程"></a>带INOUT的存储过程</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">CREATE PROCEDURE sp_inout(INOUT p_num INT)  </div><div class="line">BEGIN  </div><div class="line">SET p_num=p_num*10;  </div><div class="line">END</div><div class="line"></div><div class="line">-- 调用</div><div class="line">SET @p_num=2;  </div><div class="line">call sp_inout(@p_num);  </div><div class="line">SELECT @p_num;</div></pre></td></tr></table></figure>
<h3 id="存储过程体"><a href="#存储过程体" class="headerlink" title="存储过程体"></a>存储过程体</h3><p>1.局部变量<br>DECLARE var_name,…,… type [DEFAULT value]<br>Var_name:指定局部变量的名称<br>    Declare var1, var2, var3 INT;<br>    Declare cid int(10) [DEFAULT 0];<br>Type:用于声明局部变量的数据类型<br>default子句:用于为局部变量指定一个默认值。若没有指定，默认为null.</p>
<p>使用说明：<br>局部变量只能在存储过程体的begin…end语句块中声明。<br>局部变量必须在存储过程体的开头处声明。<br>局部变量的作用范围仅限于声明它的begin..end语句块，其他语句块中的语句不可以使用它。<br>局部变量不同于用户变量，两者区别：局部变量声明时，在其前面没有使用@符号，并且它只能在begin..end语句块中使用；而用户变量在声明时，会在其名称前面使用@符号，同时已声明的用户变量存在于整个会话之中。</p>
<p>2.set语句<br>使用set语句为局部变量赋值<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Set var_name=expr  </div><div class="line">Set cid=910;</div></pre></td></tr></table></figure></p>
<p>3.select … into 语句<br>Select col_name[,…] into var_name[,…] table_expr<br>Col_name:用于指定列名<br>Var_name:用于指定要赋值的变量名<br>Table_expr:表示select语句中的from字句及后面的语法部分<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT sum(f_sms_count) into today_count from tp_user_send_msg_log s where s.f_user_id = uid</div></pre></td></tr></table></figure></p>
<p>说明:存储过程体中的select…into语句返回的结果集只能有一行数据。</p>
<p>4.定义处理程序<br>是事先定义程序执行过程中可能遇到的问题。并且可以在处理程序中定义解决这些问题的办法。这种方式可以提前预测可能出现的问题，并提出解决方法。<br>DECLARE handler_type HANDLER FOR condition_value[,…] sp_statement<br>handler_type:CONTINUE | EXIT | UNDO<br>Condition_value:Sqlwarning | not found | sqlexception </p>
<p>5.流程控制语句</p>
<h4 id="条件判断语句"><a href="#条件判断语句" class="headerlink" title="条件判断语句"></a>条件判断语句</h4><pre><code>If语句:
If search_condition then statement_list  
[elseif search_condition then statement_list]…  
[else statement_list]  
End if 
</code></pre><p>Search_condition参数:条件判断语句<br>Statement_list参数:不同条件的执行语句<br>多重IF的存储过程实例<br>数据准备<br>学生表：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">DROP TABLE IF EXISTS `t_student`;</div><div class="line">CREATE TABLE `t_student` (</div><div class="line">  `STU_ID` int(11) NOT NULL AUTO_INCREMENT,</div><div class="line">  `STU_NAME` char(10) NOT NULL,</div><div class="line">  `STU_CLASS` int(11) NOT NULL,</div><div class="line">  `STU_SEX` char(2) NOT NULL,</div><div class="line">  `STU_AGE` int(11) NOT NULL,</div><div class="line">  PRIMARY KEY (`STU_ID`)</div><div class="line">) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8;</div><div class="line"></div><div class="line">-- ----------------------------</div><div class="line">-- Records of t_student</div><div class="line">-- ----------------------------</div><div class="line">INSERT INTO `t_student` VALUES (&apos;1&apos;, &apos;name1&apos;, &apos;1&apos;, &apos;1&apos;, &apos;1&apos;);</div><div class="line">INSERT INTO `t_student` VALUES (&apos;2&apos;, &apos;name2&apos;, &apos;2&apos;, &apos;2&apos;, &apos;2&apos;);</div><div class="line">INSERT INTO `t_student` VALUES (&apos;3&apos;, &apos;name3&apos;, &apos;3&apos;, &apos;3&apos;, &apos;3&apos;);</div><div class="line">INSERT INTO `t_student` VALUES (&apos;4&apos;, &apos;name4&apos;, &apos;4&apos;, &apos;4&apos;, &apos;4&apos;);</div><div class="line">INSERT INTO `t_student` VALUES (&apos;5&apos;, &apos;name5&apos;, &apos;5&apos;, &apos;5&apos;, &apos;5&apos;);</div><div class="line">INSERT INTO `t_student` VALUES (&apos;6&apos;, &apos;name6&apos;, &apos;6&apos;, &apos;6&apos;, &apos;6&apos;);</div><div class="line">INSERT INTO `t_student` VALUES (&apos;7&apos;, &apos;name7&apos;, &apos;7&apos;, &apos;7&apos;, &apos;7&apos;);</div><div class="line">INSERT INTO `t_student` VALUES (&apos;8&apos;, &apos;name8&apos;, &apos;8&apos;, &apos;8&apos;, &apos;8&apos;);</div><div class="line">INSERT INTO `t_student` VALUES (&apos;9&apos;, &apos;name9&apos;, &apos;9&apos;, &apos;9&apos;, &apos;9&apos;);</div><div class="line">INSERT INTO `t_student` VALUES (&apos;10&apos;, &apos;name10&apos;, &apos;10&apos;, &apos;10&apos;, &apos;10&apos;);</div></pre></td></tr></table></figure></p>
<p>成绩表（STU_ID是学生表是外键关系）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">DROP TABLE IF EXISTS `t_grade`;</div><div class="line">CREATE TABLE `t_grade` (</div><div class="line">  `STU_ID` int(11) NOT NULL,</div><div class="line">  `STU_SCORE` int(11) NOT NULL,</div><div class="line">  KEY `STU_ID` (`STU_ID`),</div><div class="line">  CONSTRAINT `t_grade_ibfk_1` FOREIGN KEY (`STU_ID`) REFERENCES `t_student` (`STU_ID`)</div><div class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8;</div><div class="line"></div><div class="line">-- ----------------------------</div><div class="line">-- Records of t_grade</div><div class="line">-- ----------------------------</div><div class="line">INSERT INTO `t_grade` VALUES (&apos;1&apos;, &apos;70&apos;);</div><div class="line">INSERT INTO `t_grade` VALUES (&apos;2&apos;, &apos;80&apos;);</div><div class="line">INSERT INTO `t_grade` VALUES (&apos;3&apos;, &apos;70&apos;);</div><div class="line">INSERT INTO `t_grade` VALUES (&apos;4&apos;, &apos;80&apos;);</div><div class="line">INSERT INTO `t_grade` VALUES (&apos;5&apos;, &apos;70&apos;);</div><div class="line">INSERT INTO `t_grade` VALUES (&apos;6&apos;, &apos;78&apos;);</div><div class="line">INSERT INTO `t_grade` VALUES (&apos;7&apos;, &apos;98&apos;);</div><div class="line">INSERT INTO `t_grade` VALUES (&apos;8&apos;, &apos;78&apos;);</div><div class="line">INSERT INTO `t_grade` VALUES (&apos;9&apos;, &apos;67&apos;);</div><div class="line">INSERT INTO `t_grade` VALUES (&apos;10&apos;, &apos;75&apos;);</div></pre></td></tr></table></figure></p>
<p>然后写一个存储过程：返回各个分数等级的人<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">CREATE  PROCEDURE SP_SCHOLARSHIP_LEVEL(IN p_level char(1))  </div><div class="line">BEGIN  </div><div class="line">IF p_level =&apos;A&apos;  THEN  </div><div class="line">SELECT * FROM t_grade WHERE STU_SCORE &gt;=90;  </div><div class="line">ELSEIF  p_level =&apos;B&apos;  THEN  </div><div class="line">SELECT * FROM t_grade WHERE STU_SCORE &lt;90 AND  STU_SCORE&gt;=80;  </div><div class="line">ELSEIF  p_level =&apos;C&apos;  THEN  </div><div class="line">SELECT * FROM t_grade WHERE STU_SCORE &lt;80 AND  STU_SCORE&gt;=70;  </div><div class="line">ELSEIF  p_level =&apos;D&apos;  THEN  </div><div class="line">SELECT * FROM t_grade WHERE STU_SCORE &lt;60;  </div><div class="line">ELSE  </div><div class="line">SELECT * FROM t_grade;  </div><div class="line">END IF;  </div><div class="line">END</div></pre></td></tr></table></figure></p>
<p>调用：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">CALL SP_SCHOLARSHIP_LEVEL(&apos;A&apos;);</div></pre></td></tr></table></figure></p>
<p>Case 语句<br>表达形式1<br>Case case_value<br>When when_value then statement_list<br>[When when_value then statement_list]…<br>[else statement_list]<br>End case<br>表达形式2<br>Case<br>When search_condition then statement_list<br>End case </p>
<p>使用范例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">CREATE  PROCEDURE SP_SCHOLARSHIP_LEVEL3(IN p_level char(1))  </div><div class="line">BEGIN  </div><div class="line">DECLARE p_num int DEFAULT  0;  </div><div class="line">CASE p_level  </div><div class="line">WHEN &apos;A&apos;  THEN  </div><div class="line">SET p_num=90;  </div><div class="line">WHEN &apos;B&apos;  THEN  </div><div class="line">SET p_num=80;  </div><div class="line">WHEN &apos;C&apos;  THEN  </div><div class="line">SET p_num=70;  </div><div class="line">WHEN &apos;D&apos;  THEN  </div><div class="line">SET p_num=60;  </div><div class="line">ELSE  </div><div class="line">SET p_num=0;  </div><div class="line">END CASE;  </div><div class="line">SELECT * FROM t_grade g, t_student s WHERE g.STU_ID=s.STU_ID AND g.STU_SCORE &gt;= p_num ;  </div><div class="line">END</div></pre></td></tr></table></figure></p>
<p>调用：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">CALL SP_SCHOLARSHIP_LEVEL3(&apos;d&apos;);</div></pre></td></tr></table></figure></p>
<h4 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h4><h5 id="While语句、repeat语句和loop语句。"><a href="#While语句、repeat语句和loop语句。" class="headerlink" title="While语句、repeat语句和loop语句。"></a>While语句、repeat语句和loop语句。</h5><p>While语句：<br>[begin_label:]<br>while search_condition do<br>Statement_list<br>End while<br>[end_label]</p>
<p>判断条件search_condition是否为真,若为真,则执行statement_list中的语句，然后再进行判断，如若仍然为真则继续循环，直至条件判断不为真时循环结束。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">CREATE PROCEDURE sp_cal(IN p_num INT,OUT p_result INT)  </div><div class="line">BEGIN  </div><div class="line"> SET p_result=1;  </div><div class="line"> WHILE p_num &gt; 1 DO  </div><div class="line">  SET p_result = p_num * p_result;  </div><div class="line">  SET p_num = p_num-1;  </div><div class="line"> END WHILE;  </div><div class="line">END  </div><div class="line">//调用并输出结果  </div><div class="line">CALL sp_cal(5,@result);  </div><div class="line">SELECT @result;</div></pre></td></tr></table></figure>
<h5 id="Repeat语句语法格式"><a href="#Repeat语句语法格式" class="headerlink" title="Repeat语句语法格式"></a>Repeat语句语法格式</h5><p>[begin_label:]<br>repeat<br>Statement_list<br>Until search_condition<br>End repeat<br>[end_label]</p>
<p>Repeat语句首先执行statement_list中的语句，然后判断条件search_condition是否为真，倘若为真，则结束循环，若不为真，继续循环。<br>Repeat先执行后判断，while先判断后执行。<br>使用范例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">CREATE PROCEDURE sp_cal2(IN p_num INT,OUT p_result INT)  </div><div class="line">BEGIN  </div><div class="line">  SET p_result=1;  </div><div class="line">  REPEAT  </div><div class="line">    SET p_result = p_num * p_result;  </div><div class="line">    SET p_num = p_num-1;  </div><div class="line">    UNTIL p_num&lt;=1  </div><div class="line">  END REPEAT;  </div><div class="line">END  </div><div class="line">//调用并输出结果  </div><div class="line">CALL sp_cal2(5,@result);  </div><div class="line">SELECT @result;</div></pre></td></tr></table></figure></p>
<h4 id="调用存储过程"><a href="#调用存储过程" class="headerlink" title="调用存储过程"></a>调用存储过程</h4><p>Call sp_name([parameter[,…]]);<br>Sp_name被调用存储过程的名称<br>Parameter:指定调用存储过程所要使用的参数。</p>
<h4 id="修改存储过程"><a href="#修改存储过程" class="headerlink" title="修改存储过程"></a>修改存储过程</h4><p>Alter procedure proc_name[characteristic…]<br>只能修改存储过程的特征，如果要修改存储过程的内容，可以先删除该存储过程，然后再重新创建</p>
<h3 id="删除存储过程"><a href="#删除存储过程" class="headerlink" title="删除存储过程"></a>删除存储过程</h3><p>Drop procedure if exists sp_name; </p>
<h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><p>MySQL中，创建存储函数的基本形式如下：</p>
<p>CREATE FUNCTION sp_name([func_parameter[,…]])<br>RETURNS type<br>[characteristic …] routine_body<br>Return  </p>
<p>子句用于声明存储函数返回值的数据类型。存储过程是用户定义的一系列sql语句的集合，涉及特定表或其它对象的任务，用户可以调用存储过程，而函数通常是数据库已定义的方法，它接收参数并返回某种类型的值并且不涉及特定用户表。<br>调用存储函数<br>Select sp_name([func_parameter…])<br>Select fn_search(2);<br>删除存储函数drop<br>修改存储函数alter 修改存储函数的某些相关特征。</p>
<h4 id="函数使用例子"><a href="#函数使用例子" class="headerlink" title="函数使用例子"></a>函数使用例子</h4><p>比较大小 ，返回大的数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">CREATE FUNCTION sp_cal_max(p_num1 INT,p_num2 INT)  </div><div class="line">RETURNS INT  </div><div class="line">BEGIN  </div><div class="line">IF p_num1 &gt;= p_num2 THEN  </div><div class="line">RETURN p_num1;  </div><div class="line">ELSE  </div><div class="line">RETURN p_num2;  </div><div class="line">END IF;  </div><div class="line">END</div></pre></td></tr></table></figure></p>
<p>报错：you <em>might</em> want to use the less safe log_bin_trust_function_creators variable<br>执行：SET GLOBAL log_bin_trust_function_creators = 1;解决问题</p>
<p>调用：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SET @p_num1=2;  </div><div class="line">SET @p_num2=34;  </div><div class="line">SELECT sp_cal_max(@p_num1,@p_num2);</div></pre></td></tr></table></figure></p>
<h4 id="存储过程和函数区别"><a href="#存储过程和函数区别" class="headerlink" title="存储过程和函数区别"></a>存储过程和函数区别</h4><p style="fond:red"><br>1）一般来说，存储过程实现的功能要复杂一点，而函数的实现的功能针对性比较强。存储过程，功能强大，可以执行包括修改表等一系列数据库操作；用户定义函数不能用于执行一组修改全局数据库状态的操作。<br>2）对于存储过程来说可以返回参数，如记录集，而函数只能返回值或者表对象。函数只能返回一个变量；而存储过程可以返回多个。存储过程的参数可以有IN,OUT,INOUT三种类型，而函数只能有IN类~~存储过程声明时不需要返回类型，而函数声明时必须描述返回类型，且函数体中必须包含一个有效的RETURN语句。<br>3）存储过程，可以使用非确定函数，不允许在用户定义函数主体中内置非确定函数。<br>4）存储过程一般是作为一个独立的部分来执行（ EXECUTE 语句执行），而函数可以作为查询语句的一个部分来调用（SELECT调用），由于函数可以返回一个表对象，因此它可以在查询语句中位于FROM关键字的后面。 SQL语句中不可用存储过程，而可以使用函数。<br>5）存储过程查寻结果和返回值作用域在一个会话中,建立新的会话不能使用另一个会话中存储过程中的数据。<br></p>

<h3 id="光标（游标）"><a href="#光标（游标）" class="headerlink" title="光标（游标）"></a>光标（游标）</h3><p>查询语句可能查询出多条记录，在存储过程和函数中使用光标标来逐条读取查询结果集中的记录。光标的使用包括声明光标、打开光标、使用光标和关闭光标。光标必须声明光标、打开光标、使用光标和关闭光标。光标必须声明在处理程序之前，并且声明在变量和条件之后。</p>
<h4 id="声明光标"><a href="#声明光标" class="headerlink" title="声明光标"></a>声明光标</h4><p>Declare cursor_name cursor forselect_statement;<br>Cursor_name:光标名称<br>Select_statement:select语句的内容<br>Declare cur_employee cursor forselect name,age from employee; </p>
<h4 id="打开光标"><a href="#打开光标" class="headerlink" title="打开光标"></a>打开光标</h4><p>Open cursor_name<br>Open cur_employee; </p>
<h4 id="使用光标"><a href="#使用光标" class="headerlink" title="使用光标"></a>使用光标</h4><p>Mysql中使用fetch关键字来使用光标，语法形式<br>Fetch cur_name intovar_name[,var_name…];<br>Cur_name表示光标的名称<br>Var_name表示将光标中的select语句查询出来的信息存入该参数。Var_name必须在声明光标前就定义好。<br>Fetch cur_employee intoemp_name,emp_age; </p>
<h4 id="关闭光标"><a href="#关闭光标" class="headerlink" title="关闭光标"></a>关闭光标</h4><p>[sql] view plain copy<br>Close cursor_name;<br>Close cur_employee;<br>每个光标不再需要时都应该被关闭，使用close语句将会释放光标所使用的全部资源。在一个光标被关闭后，如果没有重新被打开，则不能被使用。对于声明过的光标，则不需要再次声明，可直接使用open语句打开。</p>
<h4 id="使用范例"><a href="#使用范例" class="headerlink" title="使用范例"></a>使用范例</h4><p>（将表test_cur1数据复制到test_cur2）<br>创建表：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE `test_cur1` (    </div><div class="line">  `id` int(11) NOT NULL auto_increment,    </div><div class="line">  `type` char(11) default NULL,    </div><div class="line">  `order1` char(11) default NULL,    </div><div class="line">  PRIMARY KEY  (`id`)    </div><div class="line">)   </div><div class="line">INSERT INTO `test_cur1` VALUES (1, &apos;145&apos;, &apos;d1&apos;);    </div><div class="line">INSERT INTO `test_cur1` VALUES (2, &apos;134&apos;, &apos;1d&apos;);    </div><div class="line">INSERT INTO `test_cur1` VALUES (3, &apos;123&apos;, &apos;1ad&apos;);    </div><div class="line">INSERT  INTO `test_cur1` VALUES (4, &apos;121&apos;, &apos;1as&apos;);  </div><div class="line">   </div><div class="line">CREATE TABLE `test_cur2` (    </div><div class="line">  `id` int(11) NOT NULL auto_increment,    </div><div class="line">  `type` char(11) default NULL,    </div><div class="line">  `order1` char(11) default NULL,    </div><div class="line">  PRIMARY KEY  (`id`)    </div><div class="line">)</div></pre></td></tr></table></figure></p>
<p>然后写光标了：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">create procedure get_cur ()  </div><div class="line">BEGIN  </div><div class="line">  DECLARE done INT DEFAULT 0;  </div><div class="line">  DECLARE ID int(11);  </div><div class="line">  DECLARE type char(11);  </div><div class="line">  DECLARE order1 char(11);  </div><div class="line">  DECLARE mycur CURSOR FOR SELECT * FROM test_cur1; -- 定义光标 </div><div class="line">  DECLARE CONTINUE HANDLER FOR SQLSTATE &apos;02000&apos; SET done = 1;  -- 当游标取到最后一个数据的下一个不存在的数据时，done会被值为1，那么就要在repeat中进行done的判断，当done不为1的时候，才执行循环</div><div class="line">  OPEN mycur; -- 打开光标</div><div class="line">  REPEAT  -- 开始循环</div><div class="line">    FETCH mycur INTO ID,type,order1; -- 去除光标内容到临时变量</div><div class="line">    IF NOT done THEN  -- 当done不为0时为false not false为true进行循环</div><div class="line">      INSERT INTO test_cur2 VALUES (ID,type,order1);</div><div class="line">    END IF;    </div><div class="line">  UNTIL done END REPEAT; -- until为false时继续进行下一循环，如果true时进行下一循环后结束</div><div class="line">  CLOSE mycur;  </div><div class="line">END</div></pre></td></tr></table></figure>
<p>调用存储过程<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">call get_cur();</div></pre></td></tr></table></figure></p>
<h3 id="实用的存储过程"><a href="#实用的存储过程" class="headerlink" title="实用的存储过程"></a>实用的存储过程</h3><h3 id="分割字符串"><a href="#分割字符串" class="headerlink" title="分割字符串"></a>分割字符串</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">drop PROCEDURE if exists procedure_split;</div><div class="line">CREATE PROCEDURE `procedure_split`(</div><div class="line">    inputstring varchar(1000),</div><div class="line">    delim char(1)</div><div class="line">)</div><div class="line">begin</div><div class="line">    declare strlen int DEFAULT length(inputstring);</div><div class="line">    declare last_index int DEFAULT 0;</div><div class="line">    declare cur_index int DEFAULT 1;</div><div class="line">    declare cur_char VARCHAR(200);</div><div class="line">    declare len int;</div><div class="line">    drop temporary table if exists splittable;</div><div class="line">    create TEMPORARY table splittable(</div><div class="line">        value VARCHAR(20)</div><div class="line">    ) ;</div><div class="line">    WHILE(cur_index&lt;=strlen) DO    </div><div class="line">    begin</div><div class="line">        if substring(inputstring from cur_index for 1)=delim or cur_index=strlen then</div><div class="line">            set len=cur_index-last_index-1;</div><div class="line">            if cur_index=strlen then</div><div class="line">               set len=len+1;</div><div class="line">            end if;</div><div class="line">            insert into splittable(`value`)values(substring(inputstring from (last_index+1) for len));</div><div class="line">            set last_index=cur_index;</div><div class="line">        end if;</div><div class="line">        set cur_index=cur_index+1;</div><div class="line">    END;</div><div class="line">    end while;</div><div class="line">end ;</div><div class="line">-- 调用：</div><div class="line">call PROCEDURE_split(&apos;中国,开源,社区&apos;,&apos;,&apos;);</div><div class="line">select * from splittable;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">drop PROCEDURE if exists result_mail_no;</div><div class="line">CREATE PROCEDURE result_mail_no(IN mailno varchar(1000),IN fStationId CHAR(10))  </div><div class="line">BEGIN</div><div class="line">call PROCEDURE_split(mailno,&apos;,&apos;);</div><div class="line">select pi.f_mail_no from tp_parcel_info pi where pi.f_parcel_status not in (&apos;0&apos;, &apos;4&apos;) AND pi.f_station_id = fStationId AND </div><div class="line">EXISTS (select 1 from splittable s WHERE s.value = pi.f_mail_no);</div><div class="line">END;</div><div class="line">-- 调用：</div><div class="line">call result_mail_no(&apos;883960354731823677,3453&apos;,&apos;1618&apos;);</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MySQL分表]]></title>
      <url>https://volc1605.github.io/2017/01/18/MySQL%E5%88%86%E8%A1%A8/</url>
      <content type="html"><![CDATA[<h3 id="MySQL分表"><a href="#MySQL分表" class="headerlink" title="MySQL分表"></a>MySQL分表</h3><a id="more"></a>
<p>分表参考：<br><a href="http://www.cnblogs.com/qqloving/p/3414999.html" target="_blank" rel="external">http://www.cnblogs.com/qqloving/p/3414999.html</a><br><a href="http://www.cnblogs.com/miketwais/articles/mysql_partition.html" target="_blank" rel="external">http://www.cnblogs.com/miketwais/articles/mysql_partition.html</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MySQL优化]]></title>
      <url>https://volc1605.github.io/2017/01/18/MySQL%E4%BC%98%E5%8C%96/</url>
      <content type="html"><![CDATA[<h3 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h3><a id="more"></a>
<p>EXISTS 和 IN<br><a href="https://volc1605.github.io/2016/11/19/MySQL/">用法</a></p>
<p>参考：<a href="http://www.voidcn.com/blog/u010331428/article/p-3922833.html" target="_blank" rel="external">http://www.voidcn.com/blog/u010331428/article/p-3922833.html</a><br>MySQL实现join的原理，原来MySQL内部采用了一种叫做 nested loop join的算法。Nested Loop Join 实际上就是通过驱动表的结果集作为循环基础数据，然后一条一条的通过该结果集中的数据作为过滤条件到下一个表中查询数据，然后合并结果。如果还有第三个参与 Join，则再通过前两个表的 Join 结果集作为循环基础数据，再一次通过循环查询条件到第三个表中查询数据，如此往复，基本上MySQL采用的是最容易理解的算法来实现join。所以驱动表的选择非常重要，驱动表的数据小可以显著降低扫描的行数。<br>一般情况下参与联合查询的两张表都会一大一小，如果是join，在没有其他过滤条件的情况下MySQL会选择小表作为驱动表，但是left join一般用作大表去join小表，而left join本身的特性决定了MySQL会用大表去做驱动表，这样下来效率就差了不少。</p>
<p>1.如果where条件中含有右表的非空条件（除开右表使用is null判断），则left join语句等同于join语句，可直接改写成join语句。<br>SELECT<em> FROM A pi LEFT JOIN B si ON si.f_station_id = pi.f_station_id; – 以左表为驱动表<br>SELECT</em> FROM A pi LEFT JOIN B si ON si.f_station_id = pi.f_station_id WHERE pi.f_station_id &gt;= ‘7231’ – 以小表为驱动表等同于join</p>
<p>那么如何优化left join：<br>1、条件中尽量能够过滤一些行将驱动表变得小一点，用小数据表去驱动大数据表<br>2、右表的条件列一定要加上索引（主键、唯一索引、前缀索引等），最好能够使type达到range及以上（ref,eq_ref,const,system）<br>3、无视以上两点，一般不要用left join</p>
<p>例如：<br>为防止查询优化器犯傻，则可以根据你SQL特点和字段名何曾看(A与B，A与C是1对1的关系，或者B,C表中可能不存在，不能是1-N的关系)，先对A表进行那个过滤和分页，再进行LEFT JOIN操作，则可以大致些成：<br>SELECT *<br>FROM (SELECT A.columnname.. FROM A WHERE A…=..ORDER BY A.ap_like LIMIT 12) AS A<br>LEFT JOIN B …..<br>LEFT JOIN C……;</p>
<p>写成以小表驱动大表，这是描述的嵌套循环算法</p>
<p>=========================================</p>
<p>sql优化<br>1.<br>使用inner join 等值匹配连接查询<br>查询站点ID&gt;=7231的所有包裹信息和站点信息<br>效率低：<br>– 查询B表f_station_id大于7231的数据再根据条件匹配A表数据，匹配成功返回A表数据<br>SELECT <em> FROM A pi WHERE EXISTS ( SELECT </em> FROM B si WHERE si.f_station_id &gt;= ‘7231’ AND pi.f_station_id = si.f_station_id );<br>效率高：<br>SELECT* FROM A pi INNER JOIN B si USING(f_station_id) WHERE si.f_station_id &gt;= ‘7231’;</p>
<p>2.<br>使用JOIN时候，应该用小的结果驱动打的结果（left join 左边表结果尽量小，如果有条件应该放到左边先处理，right join同理反向）<br>Select * from A left join B ona.id=B.ref_id where B.ref_id&gt;10;</p>
<p>可以优化为：<br>select <em> from (select </em> from A wehre id &gt;10) T1 left join B onT1.id=B.ref_id;</p>
<p>3.<br>使用between and<br>效率低:<br>Select <em> from A order by id limit 10000000,10;<br>效率高：<br>Select </em> from A where id between 10000000and 10000010;</p>
<p>4.<br>尽量用union all 代替union<br>A.union和union all的差异主要是前者需要将两个（或者多个）结果集合并后再进行唯一性过滤操作，这就会涉及到排序，增加大量的cpu运算，加大资源消耗及延迟。所以当我们可以确认不可能出现重复结果集或者不在乎重复结果集的时候，尽量使用union all而不是union.</p>
<p>5.<br>不要在列上进行运算<br>select <em> fromusers where YEAR(adddate)&lt;2007;<br>这些导致索引失效进行全表扫描，因此我们可以改成：<br>Select </em> from users where adddate&lt;’2007-01-01’;</p>
<p>6.<br>尽量不要使用NOT IN和&lt;&gt;操作</p>
<p>=========================================</p>
<p>1、应尽量避免在 where 子句中使用!=或&lt;&gt;操作符，否则将引擎放弃使用索引而进行全表扫描。</p>
<p>2、对查询进行优化，应尽量避免全表扫描，首先应考虑在 where 及 order by 涉及的列上建立索引。</p>
<p>3、应尽量避免在 where 子句中对字段进行 null 值判断，否则将导致引擎放弃使用索引而进行全表扫描，如：<br>select id from t where num is null<br>可以在num上设置默认值0，确保表中num列没有null值，然后这样查询：<br>select id from t where num=0</p>
<p>4、尽量避免在 where 子句中使用 or 来连接条件，否则将导致引擎放弃使用索引而进行全表扫描，如：<br>select id from t where num=10 or num=20<br>可以这样查询：<br>select id from t where num=10<br>union all<br>select id from t where num=20</p>
<p>5、下面的查询也将导致全表扫描：(不能前置百分号)<br>select id from t where name like ‘%%’<br>若要提高效率，可以考虑全文检索。</p>
<p>6、in 和 not in也要慎用,否则会导致全表扫描，如：<br>select id from t where num in(1,2,3)<br>对于连续的数值，能用 between 就不要用 in 了：<br>select id from t where num between 1 and 3</p>
<p>7、应尽量避免在 where 子句中对字段进行表达式操作，这将导致引擎放弃使用索引而进行全表扫描。如：<br>select id from t where num/2=100<br>应改为:<br>select id from t where num=100*2</p>
<p>8、应尽量避免在where子句中对字段进行函数操作，这将导致引擎放弃使用索引而进行全表扫描。如：<br>select id from t where substring(name,1,3)=’abc’–name以abc开头的id<br>select id from t where datediff(day,createdate,’2005-11-30’)=0–’2005-11-30’生成的id<br>应改为:<br>select id from t where name like ‘abc%’<br>select id from t where createdate&gt;=’2005-11-30’ and createdate&lt;’2005-12-1’</p>
<p>9、不要在 where 子句中的”=”左边进行函数、算术运算或其他表达式运算，否则系统将可能无法正确使用索引。</p>
<p>10、在使用索引字段作为条件时，如果该索引是复合索引，那么必须使用到该索引中的第一个字段作为条件时才能保证系统使用该索引，否则该索引将不会被使 用，并且应尽可能的让字段顺序与索引顺序相一致。</p>
<p>11、并不是所有索引对查询都有效，SQL是根据表中数据来进行查询优化的，当索引列有大量数据重复时，SQL查询可能不会去利用索引，如一表中有字段 sex，male、female几乎各一半，那么即使在sex上建了索引也对查询效率起不了作用。</p>
<p>12、索引并不是越多越好，索引固然可以提高相应的 select 的效率，但同时也降低了 insert 及 update 的效率，因为 insert 或 update 时有可能会重建索引，所以怎样建索引需要慎重考虑，视具体情况而定。一个表的索引数最好不要超过6个，若太多则应考虑一些不常使用到的列上建的索引是否有 必要。</p>
<p>13、尽量使用数字型字段，若只含数值信息的字段尽量不要设计为字符型，这会降低查询和连接的性能，并会增加存储开销。这是因为引擎在处理查询和连接时会 逐个比较字符串中每一个字符，而对于数字型而言只需要比较一次就够了。</p>
<p>14、尽可能的使用 varchar/nvarchar 代替 char/nchar ，因为首先变长字段存储空间小，可以节省存储空间，其次对于查询来说，在一个相对较小的字段内搜索效率显然要高些。<br>    char 和 varchar</p>
<pre><code>CHAR(M)定义的列的长度为固定的
VARCHAR(M)定义的列的长度为可变长字符串
超限自动截取
效率来说基本是char&gt;varchar&gt;text，但是如果使用的是Innodb引擎的话，推荐使用varchar代替char


使用：
1.根据字符的长度来判断，是考虑其长度的是否相近来确定选择char还是varchar，如何字段的长度基本都是一样或者其长度总是近似的可以选用char
2.是从碎片角度进行考虑 用可变长度的字符型数据时，数据库管理员要时不时的对碎片进行整理。如执行数据库导出导入作业，来消除碎片。
3.即使使用Varchar数据类型，也不能够太过于慷慨！ 比如你只使用到90个字符，VARCHAR(100)与VARCHAR(200)真的相同吗?结果是否定的。虽然他们用来存储90个字符的数据，其存储空间相同。但是对于内存的消耗是不同的。
</code></pre><p>15、任何地方都不要使用 select <em> from t ，用具体的字段列表代替”</em>“，不要返回用不到的任何字段。</p>
<p>16、尽量使用表变量来代替临时表。如果表变量包含大量数据，请注意索引非常有限（只有主键索引）。</p>
<p>17、避免频繁创建和删除临时表，以减少系统表资源的消耗。</p>
<p>18、临时表并不是不可使用，适当地使用它们可以使某些例程更有效，例如，当需要重复引用大型表或常用表中的某个数据集时。但是，对于一次性事件，最好使 用导出表。</p>
<p>19、在新建临时表时，如果一次性插入数据量很大，那么可以使用 select into 代替 create table，避免造成大量 log ，以提高速度；如果数据量不大，为了缓和系统表的资源，应先create table，然后insert。</p>
<p>20、如果使用到了临时表，在存储过程的最后务必将所有的临时表显式删除，先 truncate table ，然后 drop table ，这样可以避免系统表的较长时间锁定。</p>
<p>21、尽量避免使用游标，因为游标的效率较差，如果游标操作的数据超过1万行，那么就应该考虑改写。</p>
<p>22、使用基于游标的方法或临时表方法之前，应先寻找基于集的解决方案来解决问题，基于集的方法通常更有效。</p>
<p>23、与临时表一样，游标并不是不可使用。对小型数据集使用 FAST_FORWARD 游标通常要优于其他逐行处理方法，尤其是在必须引用几个表才能获得所需的数据时。在结果集中包括”合计”的例程通常要比使用游标执行的速度快。如果开发时 间允许，基于游标的方法和基于集的方法都可以尝试一下，看哪一种方法的效果更好。</p>
<p>24、在所有的存储过程和触发器的开始处设置 SET NOCOUNT ON ，在结束时设置 SET NOCOUNT OFF 。无需在执行存储过程和触发器的每个语句后向客户端发送 DONE_IN_PROC 消息。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[PHP外部请求]]></title>
      <url>https://volc1605.github.io/2017/01/13/PHP%E8%AF%B7%E6%B1%82/</url>
      <content type="html"><![CDATA[<h3 id="1-php请求"><a href="#1-php请求" class="headerlink" title="1.php请求"></a>1.php请求</h3><a id="more"></a>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">UOPStorage</span><span class="params">($dataList)</span> </span>&#123;</div><div class="line">       <span class="comment">// 构造参数</span></div><div class="line">       $param = <span class="keyword">Array</span>();</div><div class="line">       <span class="comment">// receivePush</span></div><div class="line">       $receivePush = <span class="keyword">Array</span>();</div><div class="line">       $trace = <span class="keyword">Array</span>();</div><div class="line">       $parcelDat = <span class="keyword">Array</span>();</div><div class="line">       <span class="keyword">foreach</span> ($dataList <span class="keyword">as</span> $data) &#123;</div><div class="line">           $parcelId = $data[<span class="string">'f_parcel_id'</span>];</div><div class="line">           $where = <span class="keyword">array</span>(<span class="string">'f_parcel_id'</span> =&gt; $parcelId);</div><div class="line">           $parcelInfo = <span class="keyword">new</span> \Home\Model\ParcelInfoModel();</div><div class="line">           $lastTime = $parcelInfo-&gt;getParcelArriveTime($where);</div><div class="line">           $lastTime = $lastTime[<span class="string">'f_last_time'</span>];</div><div class="line">           $time = date(<span class="string">"Y年n月j日 ag:i:s"</span>, strtotime($lastTime));</div><div class="line">           $time = str_replace(<span class="string">'am'</span>, <span class="string">"上午"</span>, $time);</div><div class="line">           $time = str_replace(<span class="string">'pm'</span>, <span class="string">"下午"</span>, $time);</div><div class="line">           $parcelDat[<span class="string">'scanTime'</span>] = date(<span class="string">"Y-m-d H:i:s"</span>, time());</div><div class="line">           $parcelDat[<span class="string">'context'</span>] = <span class="string">"联系方式："</span> . $data[<span class="string">'f_tel'</span>];</div><div class="line">           <span class="keyword">if</span> ($data[<span class="string">'f_type'</span>] == <span class="number">1</span>) &#123;</div><div class="line">               $reqType = <span class="keyword">array</span>(<span class="string">'f_storage_status'</span> =&gt; <span class="string">'0'</span>);</div><div class="line">               $parcelDat[<span class="string">'scanType'</span>] = <span class="string">"0"</span>;<span class="comment">// 请求类型 在途</span></div><div class="line">           &#125; <span class="keyword">elseif</span> ($data[<span class="string">'f_type'</span>] == <span class="number">2</span>) &#123;</div><div class="line">               $reqType = <span class="keyword">array</span>(<span class="string">'f_arrive_status'</span> =&gt; <span class="string">'0'</span>);</div><div class="line">               $parcelDat[<span class="string">'scanType'</span>] = <span class="string">"15"</span>;<span class="comment">// 请求类型 签收</span></div><div class="line">               $parcelDat[<span class="string">'context'</span>] = <span class="string">"context"</span>;</div><div class="line">           &#125; <span class="keyword">else</span> &#123;</div><div class="line">               $reqType = <span class="keyword">array</span>(<span class="string">'f_rejection_status'</span> =&gt; <span class="string">'0'</span>);</div><div class="line">               $parcelDat[<span class="string">'scanType'</span>] = <span class="string">"0"</span>;<span class="comment">// 请求类型 在途</span></div><div class="line">           &#125;</div><div class="line">           $parcelDat[<span class="string">'siteName'</span>] = $data[<span class="string">'f_station_name'</span>];</div><div class="line">           $parcelDat[<span class="string">'mobile'</span>] = $data[<span class="string">'f_tel'</span>];</div><div class="line">           $trace[<span class="string">'trace'</span>] = $parcelDat;</div><div class="line">           $receivePush[<span class="string">'billCode'</span>] = $data[<span class="string">'f_mail_no'</span>];</div><div class="line">           $receivePush[<span class="string">'traces'</span>] = $trace;</div><div class="line">           $param[<span class="string">'receivePush'</span>] = $receivePush;</div><div class="line">           <span class="keyword">$this</span>-&gt;doPostUOP($data[<span class="string">'f_parcel_id'</span>], json_encode($param), $reqType);</div><div class="line">       &#125;</div><div class="line">   &#125;</div><div class="line"></div><div class="line">   <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">doPostUOP</span><span class="params">($parcelId, $param, $reqType)</span> </span>&#123;</div><div class="line">       <span class="comment">// 测试</span></div><div class="line">       <span class="comment">// $UOPeceiveUrl = "http://123.123.123.123/com.uc5.main/a/a.action";</span></div><div class="line">       $secretKey = <span class="string">"ab0d3b38bb2"</span>;</div><div class="line">       <span class="comment">//$secretKey = "6a8b866e7eb4ad";</span></div><div class="line">       $partner = <span class="string">"041"</span>;</div><div class="line">       $serviceName = <span class="string">"receive_track"</span>;</div><div class="line">       $dataType = <span class="string">"json"</span>;</div><div class="line">       <span class="comment">// 拼接加密字符串</span></div><div class="line">       $data = <span class="keyword">Array</span>();</div><div class="line">       $data[<span class="number">0</span>] = <span class="string">"dataType"</span> . <span class="string">"="</span> . $dataType;</div><div class="line">       $data[<span class="number">1</span>] = <span class="string">"param"</span> . <span class="string">"="</span> . $param;</div><div class="line">       $data[<span class="number">2</span>] = <span class="string">"partner"</span> . <span class="string">"="</span> . $partner;</div><div class="line">       $data[<span class="number">3</span>] = <span class="string">"serviceName"</span> . <span class="string">"="</span> . $serviceName;</div><div class="line">       $comma_separated = implode(<span class="string">"&amp;"</span>, $data);</div><div class="line">       <span class="comment">// 加密最后结果</span></div><div class="line">       $dataSign = md5($comma_separated . $secretKey);</div><div class="line">       $Request_Data[<span class="string">'dataSign'</span>] = $dataSign;</div><div class="line">       $Request_Data[<span class="string">'partner'</span>] = $partner;</div><div class="line">       $Request_Data[<span class="string">'serviceName'</span>] = $serviceName;</div><div class="line">       $Request_Data[<span class="string">'dataType'</span>] = $dataType;</div><div class="line">       $Request_Data[<span class="string">'param'</span>] = $param;</div><div class="line">       <span class="comment">// 请求UOP平台</span></div><div class="line">       $postdata = http_build_query($Request_Data);</div><div class="line">       $options = <span class="keyword">array</span>(</div><div class="line">           <span class="string">'http'</span> =&gt; <span class="keyword">array</span>(</div><div class="line">               <span class="string">'method'</span> =&gt; <span class="string">'POST'</span>,</div><div class="line">               <span class="string">'header'</span> =&gt; <span class="string">'Content-type:application/x-www-form-urlencoded'</span>,</div><div class="line">               <span class="string">'content'</span> =&gt; $postdata,</div><div class="line">               <span class="string">'timeout'</span> =&gt; <span class="number">5</span> * <span class="number">60</span> <span class="comment">// 超时时间（单位:s）</span></div><div class="line">           )</div><div class="line">       );</div><div class="line">       $context = stream_context_create($options);</div><div class="line">       $result = file_get_contents($UOPeceiveUrl, <span class="keyword">true</span>, $context);</div><div class="line">       $xml = simplexml_load_string(<span class="string">'&lt;?xml version="1.0" encoding="gbk"?&gt;'</span> . $result);</div><div class="line">       $re = (string)$xml-&gt;returnCode;</div><div class="line">       <span class="comment">// 请求成功更新包裹状态</span></div><div class="line">       <span class="keyword">if</span> ($re == <span class="string">"SUCCESSFUL"</span>) &#123;</div><div class="line">           <span class="comment">// 更新包裹状态</span></div><div class="line">           print_r($re);</div><div class="line">           <span class="keyword">foreach</span>($reqType <span class="keyword">as</span> $key=&gt;$val)&#123;</div><div class="line">               $reqType[$key] = <span class="number">1</span>;</div><div class="line">           &#125;</div><div class="line">       &#125; <span class="keyword">else</span> &#123;</div><div class="line">           <span class="keyword">foreach</span>($reqType <span class="keyword">as</span> $key=&gt;$val)&#123;</div><div class="line">               $reqType[$key] = <span class="number">2</span>;</div><div class="line">           &#125;</div><div class="line">       &#125;</div><div class="line">       $parcelInfo = <span class="keyword">new</span> \Home\Model\StationAbutmentLogModel();</div><div class="line">       $parcelInfo-&gt;updateExpressData($parcelId, $reqType);</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MySQL主从读写分离]]></title>
      <url>https://volc1605.github.io/2017/01/05/MySQL%E4%B8%BB%E4%BB%8E%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/</url>
      <content type="html"><![CDATA[<h3 id="1-mysql简单配置主从参考方式"><a href="#1-mysql简单配置主从参考方式" class="headerlink" title="1 mysql简单配置主从参考方式"></a>1 mysql简单配置主从参考方式</h3><a id="more"></a>
<p>注意：<br>1、    主DB server和从DB server数据库的版本一致。<br>2、    主DB server和从DB server数据库数据一致[ 这里就会可以把主的备份在从上还原，也可以直接将主的数据目录拷贝到从的相应数据目录]。<br>3、    主DB server开启二进制日志,主DB server和从DB server的server_id都必须唯一。<br>4、 mysql主从有延迟，是由于原理所致，需要根据业务场景分析是否实现主从，以免造成不可逆的代价。<br>5、 读写分离解决读数据库的压力，并不能很好的解决写数据库。<br>步骤：<br>为主从mysql添加服务<br>进入D:\mysql\3381\bin目录下执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.\mysqld.exe install MySQL-3380 --defaults-file=&quot;D:\mysql\3380\data\my.ini&quot;</div></pre></td></tr></table></figure></p>
<p>1.主库配置，开启二进制日志，用于从库调用进行同步<br>2.主库为从库授权</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># &apos;用户名称&apos;@&apos;主库IP&apos; by &apos;用户访问密码&apos;</div><div class="line">grant replication slave on *.* to &apos;slave01&apos;@&apos;127.0.0.1&apos; identified by &apos;123456&apos;;</div><div class="line">flush privileges;</div></pre></td></tr></table></figure>
<p>3.从库配置<br>主库执行获取二进制日志文件名称<br>使用navicat连接主库执行</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SHOW MASTER STATUS;</div><div class="line"># 结果：</div><div class="line">mysql-bin.000002   420	taotao</div></pre></td></tr></table></figure>
<p>mysql-bin.000002用于从库配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">CHANGE MASTER TO</div><div class="line"> master_host=&apos;127.0.0.1&apos;,</div><div class="line"> master_user=&apos;slave01&apos;,</div><div class="line"> master_password=&apos;123456&apos;,</div><div class="line"> master_port=3380,</div><div class="line"> master_log_file=&apos;mysql-bin.000002&apos;,</div><div class="line"> master_log_pos=420;</div></pre></td></tr></table></figure>
<p>4.启动从库同步，查看从库状态<br>进入从库</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">START SLAVE;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SHOW SLAVE STATUS;</div><div class="line"># 结果：</div><div class="line">	127.0.0.1	slave01	3380	60	mysql-bin.000002	420	PC-201701242302-relay-bin.000001	4	mysql-bin.000002	No	Yes							0		0	420	120	None		0	No							No	1593	Fatal error: The slave I/O thread stops because master and slave have equal MySQL server UUIDs; these UUIDs must be different for replication to work.	0			80		D:\mysql\3381\data\data\master.info	0		Slave has read all relay log; waiting for the slave I/O thread to update it	86400		170304 12:18:46						0</div></pre></td></tr></table></figure>
<p>查看结果<br>Slave_IO_Running:No<br>Slave_SQL_Running:Yes<br>两个都为Yes说明主从配置成功，需要查看从库日志排除配置失败的原因<br>D:\mysql\3381\logs\mysql.err.log</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">2017-03-04 12:18:46 7764 [ERROR] Slave I/O: Fatal error: The slave I/O thread stops because master and slave have equal MySQL server UUIDs; these UUIDs must be different for replication to work. Error_code: 1593</div></pre></td></tr></table></figure>
<p>说明主从数据库uuid相同了，需要从新设置从mysql的uuid<br>找到从数据库中D:\mysql\3381\data\data\auto.cnf配置文件，内容如下，修改一个值即可</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[auto]</div><div class="line">server-uuid=d71ec2ee-65ba-11e5-a4e3-000c29deb96f</div></pre></td></tr></table></figure>
<p>重启从数据库服务</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SHOW SLAVE STATUS;</div><div class="line"># 结果</div><div class="line">Waiting for master to send event	127.0.0.1	slave01	3380	60	mysql-bin.000002	420	PC-201701242302-relay-bin.000003	283	mysql-bin.000002	Yes	Yes							0		0	420	466	None		0	No						0	No	0		0			80	d71ec2ee-65ba-11e5-a4e3-000c29deb96e	D:\mysql\3381\data\data\master.info	0		Slave has read all relay log; waiting for the slave I/O thread to update it	86400								0</div></pre></td></tr></table></figure>
<p>Slave_IO_Running:Yes<br>Slave_SQL_Running:Yes<br>要重新启动从库同步</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">START SLAVE;</div></pre></td></tr></table></figure>
<p>不同需要步时执行以下sql停止同步</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">START SLAVE;</div></pre></td></tr></table></figure>
<p>5.测试主从<br>修改主数据数据，从数据库跟着该表，MySql主从同步成功。<br>以下是详细配置文件<br>主my.ini：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div></pre></td><td class="code"><pre><div class="line">[client]</div><div class="line">no-beep</div><div class="line"></div><div class="line"># pipe</div><div class="line">socket=0.0</div><div class="line">port=3380</div><div class="line"></div><div class="line">[mysql]</div><div class="line"></div><div class="line">default-character-set=utf8</div><div class="line"></div><div class="line"># SERVER SECTION</div><div class="line"># ----------------------------------------------------------------------</div><div class="line">#</div><div class="line"># The following options will be read by the MySQL Server. Make sure that</div><div class="line"># you have installed the server correctly (see above) so it reads this </div><div class="line"># file.</div><div class="line">#</div><div class="line"># server_type=3</div><div class="line">[mysqld]</div><div class="line"></div><div class="line">enable-named-pipe</div><div class="line"></div><div class="line">shared-memory</div><div class="line"></div><div class="line">shared-memory-base-name=MYSQL-3380</div><div class="line"></div><div class="line"># The Pipe the MySQL Server will use</div><div class="line">socket=MYSQL-3380</div><div class="line"></div><div class="line"># The TCP/IP Port the MySQL Server will listen on</div><div class="line">port=3380</div><div class="line"></div><div class="line"># Path to installation directory. All paths are usually resolved relative to this.</div><div class="line"># basedir=&quot;D:/mysql/3380/&quot;</div><div class="line"></div><div class="line"># Path to the database root</div><div class="line">datadir=D:/mysql/3380/data/Data</div><div class="line"></div><div class="line">character-set-server=utf8</div><div class="line"></div><div class="line">default-storage-engine=INNODB</div><div class="line"></div><div class="line">sql-mode=&quot;STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION&quot;</div><div class="line"></div><div class="line">log-output=FILE</div><div class="line">general-log=0</div><div class="line">general_log_file=&quot;WIN-A1JA6NUDTV4.log&quot;</div><div class="line">slow-query-log=1</div><div class="line">slow_query_log_file=&quot;D:/mysql/3380/logs/mysql-slow.log&quot;</div><div class="line">long_query_time=10</div><div class="line"></div><div class="line"># Binary Logging. 主数据库要开启二进制日志</div><div class="line">log-bin=&quot;D:/mysql/3380/logs/mysql-bin&quot;</div><div class="line"></div><div class="line"># Error Logging.</div><div class="line">log-error=&quot;D:/mysql/3380/logs/mysql.err.log&quot;</div><div class="line"></div><div class="line"># Server Id.</div><div class="line">server-id=80</div><div class="line"></div><div class="line"># 主数据库中配置需要同步的数据库为taotao</div><div class="line">binlog-do-db=taotao</div><div class="line"></div><div class="line">max_connections=151</div><div class="line"></div><div class="line">query_cache_size=0</div><div class="line"></div><div class="line">table_open_cache=2000</div><div class="line"></div><div class="line">tmp_table_size=14M</div><div class="line"></div><div class="line">thread_cache_size=10</div><div class="line"></div><div class="line">myisam_max_sort_file_size=100G</div><div class="line"></div><div class="line">myisam_sort_buffer_size=18M</div><div class="line"></div><div class="line">key_buffer_size=8M</div><div class="line"></div><div class="line">read_buffer_size=37K</div><div class="line">read_rnd_buffer_size=256K</div><div class="line"></div><div class="line">sort_buffer_size=256K</div><div class="line"></div><div class="line">innodb_additional_mem_pool_size=2M</div><div class="line"></div><div class="line">innodb_flush_log_at_trx_commit=1</div><div class="line"></div><div class="line">innodb_log_buffer_size=1M</div><div class="line"></div><div class="line">innodb_buffer_pool_size=43M</div><div class="line"></div><div class="line">innodb_log_file_size=48M</div><div class="line"></div><div class="line">innodb_thread_concurrency=8</div><div class="line"></div><div class="line">innodb_autoextend_increment=64</div><div class="line"></div><div class="line">innodb_buffer_pool_instances=8</div><div class="line"></div><div class="line">innodb_concurrency_tickets=5000</div><div class="line"></div><div class="line">innodb_old_blocks_time=1000</div><div class="line"></div><div class="line">innodb_open_files=300</div><div class="line"></div><div class="line">innodb_stats_on_metadata=0</div><div class="line"></div><div class="line">innodb_file_per_table=1</div><div class="line"></div><div class="line">innodb_checksum_algorithm=0</div><div class="line"></div><div class="line">back_log=80</div><div class="line"></div><div class="line">flush_time=0</div><div class="line"></div><div class="line">join_buffer_size=256K</div><div class="line"></div><div class="line">max_allowed_packet=4M</div><div class="line"></div><div class="line">max_connect_errors=100</div><div class="line"></div><div class="line">open_files_limit=4161</div><div class="line"></div><div class="line">query_cache_type=0</div><div class="line"></div><div class="line">sort_buffer_size=256K</div><div class="line"></div><div class="line">table_definition_cache=1400</div><div class="line"></div><div class="line">binlog_row_event_max_size=8K</div><div class="line"></div><div class="line">sync_master_info=10000</div><div class="line"></div><div class="line">sync_relay_log=10000</div><div class="line"></div><div class="line">sync_relay_log_info=10000</div></pre></td></tr></table></figure>
<p>从my.ini<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div></pre></td><td class="code"><pre><div class="line">[client]</div><div class="line">no-beep</div><div class="line"></div><div class="line"># pipe</div><div class="line">socket=0.0</div><div class="line">port=3381</div><div class="line"></div><div class="line">[mysql]</div><div class="line"></div><div class="line">default-character-set=utf8</div><div class="line"></div><div class="line"># SERVER SECTION</div><div class="line"># ----------------------------------------------------------------------</div><div class="line">#</div><div class="line"># The following options will be read by the MySQL Server. Make sure that</div><div class="line"># you have installed the server correctly (see above) so it reads this </div><div class="line"># file.</div><div class="line">#</div><div class="line"># server_type=3</div><div class="line">[mysqld]</div><div class="line"></div><div class="line"># The next three options are mutually exclusive to SERVER_PORT below.</div><div class="line"># skip-networking</div><div class="line"></div><div class="line">enable-named-pipe</div><div class="line"></div><div class="line">shared-memory</div><div class="line"></div><div class="line">shared-memory-base-name=MYSQL-3381</div><div class="line"></div><div class="line"># The Pipe the MySQL Server will use</div><div class="line">socket=MYSQL-3381</div><div class="line"></div><div class="line"># The TCP/IP Port the MySQL Server will listen on</div><div class="line">port=3381</div><div class="line"></div><div class="line"># Path to installation directory. All paths are usually resolved relative to this.</div><div class="line"># basedir=&quot;D:/mysql/3381/&quot;</div><div class="line"></div><div class="line"># Path to the database root</div><div class="line">datadir=D:/mysql/3381/data/data</div><div class="line"></div><div class="line"># The default character set that will be used when a new schema or table is</div><div class="line"># created and no character set is defined</div><div class="line">character-set-server=utf8</div><div class="line"></div><div class="line"># The default storage engine that will be used when create new tables when</div><div class="line">default-storage-engine=INNODB</div><div class="line"></div><div class="line"># Set the SQL mode to strict</div><div class="line">sql-mode=&quot;STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION&quot;</div><div class="line"></div><div class="line"># Enable Windows Authentication</div><div class="line"># plugin-load=authentication_windows.dll</div><div class="line"></div><div class="line"># General and Slow logging.</div><div class="line">log-output=FILE</div><div class="line">general-log=0</div><div class="line">general_log_file=&quot;WIN-A1JA6NUDTV4.log&quot;</div><div class="line">slow-query-log=1</div><div class="line">slow_query_log_file=&quot;D:/mysql/3381/logs/mysql-slow.log&quot;</div><div class="line">long_query_time=10</div><div class="line"></div><div class="line"># Binary Logging.</div><div class="line">log-bin=&quot;D:/mysql/3381/logs/mysql-bin&quot;</div><div class="line"></div><div class="line"># Error Logging.</div><div class="line">log-error=&quot;D:/mysql/3381/logs/mysql.err.log&quot;</div><div class="line"></div><div class="line"># Server Id.</div><div class="line">server-id=81</div><div class="line"></div><div class="line">max_connections=151</div><div class="line"></div><div class="line">query_cache_size=0</div><div class="line"></div><div class="line">table_open_cache=2000</div><div class="line"></div><div class="line">tmp_table_size=14M</div><div class="line"></div><div class="line">thread_cache_size=10</div><div class="line"></div><div class="line">myisam_max_sort_file_size=100G</div><div class="line"></div><div class="line">myisam_sort_buffer_size=18M</div><div class="line"></div><div class="line">key_buffer_size=8M</div><div class="line"></div><div class="line">read_buffer_size=37K</div><div class="line">read_rnd_buffer_size=256K</div><div class="line"></div><div class="line">sort_buffer_size=256K</div><div class="line"></div><div class="line">innodb_additional_mem_pool_size=2M</div><div class="line"></div><div class="line">innodb_flush_log_at_trx_commit=1</div><div class="line"></div><div class="line">innodb_log_buffer_size=1M</div><div class="line"></div><div class="line">innodb_buffer_pool_size=43M</div><div class="line"></div><div class="line">innodb_log_file_size=48M</div><div class="line"></div><div class="line">innodb_thread_concurrency=8</div><div class="line"></div><div class="line">innodb_autoextend_increment=64</div><div class="line"></div><div class="line">innodb_buffer_pool_instances=8</div><div class="line"></div><div class="line">innodb_concurrency_tickets=5000</div><div class="line"></div><div class="line">innodb_old_blocks_time=1000</div><div class="line"></div><div class="line">innodb_open_files=300</div><div class="line"></div><div class="line">innodb_stats_on_metadata=0</div><div class="line"></div><div class="line">innodb_file_per_table=1</div><div class="line"></div><div class="line">innodb_checksum_algorithm=0</div><div class="line"></div><div class="line">back_log=80</div><div class="line"></div><div class="line">flush_time=0</div><div class="line"></div><div class="line">join_buffer_size=256K</div><div class="line"></div><div class="line">max_allowed_packet=4M</div><div class="line"></div><div class="line">max_connect_errors=100</div><div class="line"></div><div class="line">open_files_limit=4161</div><div class="line"></div><div class="line">query_cache_type=0</div><div class="line"></div><div class="line">sort_buffer_size=256K</div><div class="line"></div><div class="line">table_definition_cache=1400</div><div class="line"></div><div class="line">binlog_row_event_max_size=8K</div><div class="line"></div><div class="line">sync_master_info=10000</div><div class="line"></div><div class="line">sync_relay_log=10000</div><div class="line"></div><div class="line">sync_relay_log_info=10000</div></pre></td></tr></table></figure></p>
<hr>
<p>之前的主从配置和使用第三方开源框架实现读写分离</p>
<p>详细实现主从如下</p>
<h3 id="2-MySQL主从"><a href="#2-MySQL主从" class="headerlink" title="2 MySQL主从"></a>2 MySQL主从</h3><p>这里介绍win环境下MySQL的主从和读写分离，同样Linux操作系统下也是这个原理  </p>
<p>master(IP:192.168.1.15)主服务器mysql<br>slave(IP:192.168.1.200)从服务器mysql<br>需要注意的地方<br>1.数据库主从和读写分离不同服务器上mysql版本尽量保持一致，以免造成不必要的麻烦。<br>2.不同服务器都要含有需要同步的指定数据库。<br>3.数据库中已存在的表在同步成功后从数据库中也不会同步，只能同步成功配置同步以后创建的表。</p>
<h4 id="开启log-bin"><a href="#开启log-bin" class="headerlink" title="开启log_bin"></a>开启log_bin</h4><p>安装服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">C:\mysql\mysql-5.5.47-win32\bin&gt;mysql -install</div></pre></td></tr></table></figure></p>
<p>参考：<a href="https://volc1605.github.io/2017/01/05/win%E9%85%8D%E7%BD%AEMySQL/">win配置mysql</a><br><!-- more --><br>查看log_bin是否开启<br><img src="https://volc1605.github.io/images/MySQL主从配置和读写分离/1.png" alt="查看log_bin是否开启"><br>如果log_bin的值OFF需要在配置文件中开启<br>找到mysql安装目录下的配置文件my.ini，在[mysqld]追加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[mysqld]</div><div class="line"># 开启log_bin</div><div class="line">log_bin</div></pre></td></tr></table></figure></p>
<h4 id="配置master-主数据库-my-ini"><a href="#配置master-主数据库-my-ini" class="headerlink" title="配置master(主数据库)my.ini"></a>配置master(主数据库)my.ini</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">追加[mysqld]配置</div><div class="line"># =============读写===========</div><div class="line"></div><div class="line">log-bin = mysql-bin</div><div class="line"></div><div class="line">log-bin-index = mysql-bin.index</div><div class="line"></div><div class="line"># 服务Id，和slave 的server-id不一样，一般取ip最后一节</div><div class="line">server-id = 15</div><div class="line"></div><div class="line">sync_binlog = 1</div><div class="line"></div><div class="line">binlog_format = mixed</div><div class="line"></div><div class="line"># 做主从同步的数据库名</div><div class="line">binlog-do-db = test</div><div class="line"></div><div class="line">binlog-ignore-db = mysql</div><div class="line"></div><div class="line">binlog-ignore-db = performance_schema</div><div class="line"></div><div class="line">binlog-ignore-db = information_schema</div><div class="line"># =============结束===========</div></pre></td></tr></table></figure>
<h4 id="关联从数据库，并给予全部权限"><a href="#关联从数据库，并给予全部权限" class="headerlink" title="关联从数据库，并给予全部权限"></a>关联从数据库，并给予全部权限</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql&gt; grant all privileges on *.* to &apos;root&apos;@&apos;192.168.1.200&apos; identified by &apos;root&apos; with grant option;</div></pre></td></tr></table></figure>
<p><img src="https://volc1605.github.io/images/MySQL主从配置和读写分离/2.png" alt="关联从数据库并给予权限"></p>
<p>‘root’                     slave从数据库账户<br>‘192.168.1.200’            slaveIP<br>‘root’                    slave登录密码</p>
<p>刷新权限<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql&gt; flush privileges;</div></pre></td></tr></table></figure></p>
<p>在从服务器上链接主服务器mysql<br><img src="https://volc1605.github.io/images/MySQL主从配置和读写分离/3.png" alt="链接master数据库"></p>
<h4 id="获取master状态信息"><a href="#获取master状态信息" class="headerlink" title="获取master状态信息"></a>获取master状态信息</h4><p><img src="https://volc1605.github.io/images/MySQL主从配置和读写分离/4.png" alt="获取master状态信息"></p>
<p>记录以下两个字段值，从服务器上mysql配置需要用到<br>File: mysql-bin.000015<br>Position: 107</p>
<h4 id="配置slave数据库"><a href="#配置slave数据库" class="headerlink" title="配置slave数据库"></a>配置slave数据库</h4><p>配置my.ini<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">[mysqld]</div><div class="line">#=========新增=====</div><div class="line"># 服务Id，和master 的server-id不一样</div><div class="line">server-id = 200</div><div class="line">log-bin = mysql-bin</div><div class="line">relay-log-index = slave-relay-bin.index</div><div class="line">relay-log = slave-relay-bin</div><div class="line">sync_master_info = 1</div><div class="line">sync_relay_log = 1</div><div class="line">sync_relay_log_info = 1</div><div class="line">#=========结束======</div></pre></td></tr></table></figure></p>
<p>重新启动从服务器上的mysql服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mysql&gt; net stop mysql</div><div class="line">mysql&gt; net start mysql</div></pre></td></tr></table></figure></p>
<p>确认在从服务器上可以链接本地的mysql后进行以下操作<br>关闭slave数据库同步，关联master数据库信息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div></pre></td><td class="code"><pre><div class="line">mysql&gt; stop slave;</div><div class="line">mysql&gt; change master to master_host=&apos;192.168.1.15&apos;,master_user=&apos;root&apos;,master_port=3306,master_password=&apos;root&apos;,master_log_file=&apos;mysql-bin.000015&apos;,master_log_pos=107;</div><div class="line">Query OK, 0 rows affected (0.21 sec)</div><div class="line"></div><div class="line">mysql&gt; show slave status\G</div><div class="line">*************************** 1. row ***************************</div><div class="line">               Slave_IO_State:</div><div class="line">                  Master_Host: 192.168.1.15</div><div class="line">                  Master_User: root</div><div class="line">                  Master_Port: 3306</div><div class="line">                Connect_Retry: 60</div><div class="line">              Master_Log_File: mysql-bin.000015</div><div class="line">          Read_Master_Log_Pos: 107</div><div class="line">               Relay_Log_File: slave-relay-bin.000001</div><div class="line">                Relay_Log_Pos: 4</div><div class="line">        Relay_Master_Log_File: mysql-bin.000015</div><div class="line">             Slave_IO_Running: No</div><div class="line">            Slave_SQL_Running: No</div><div class="line">              Replicate_Do_DB:</div><div class="line">          Replicate_Ignore_DB:</div><div class="line">           Replicate_Do_Table:</div><div class="line">       Replicate_Ignore_Table:</div><div class="line">      Replicate_Wild_Do_Table:</div><div class="line">  Replicate_Wild_Ignore_Table:</div><div class="line">                   Last_Errno: 0</div><div class="line">                   Last_Error:</div><div class="line">                 Skip_Counter: 0</div><div class="line">          Exec_Master_Log_Pos: 107</div><div class="line">              Relay_Log_Space: 107</div><div class="line">              Until_Condition: None</div><div class="line">               Until_Log_File:</div><div class="line">                Until_Log_Pos: 0</div><div class="line">           Master_SSL_Allowed: No</div><div class="line">           Master_SSL_CA_File:</div><div class="line">           Master_SSL_CA_Path:</div><div class="line">              Master_SSL_Cert:</div><div class="line">            Master_SSL_Cipher:</div><div class="line">               Master_SSL_Key:</div><div class="line">        Seconds_Behind_Master: NULL</div><div class="line">Master_SSL_Verify_Server_Cert: No</div><div class="line">                Last_IO_Errno: 0</div><div class="line">                Last_IO_Error:</div><div class="line">               Last_SQL_Errno: 0</div><div class="line">               Last_SQL_Error:</div><div class="line">  Replicate_Ignore_Server_Ids:</div><div class="line">             Master_Server_Id: 15</div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; start slave;</div><div class="line">Query OK, 0 rows affected (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; show slave status\G</div><div class="line">*************************** 1. row ***************************</div><div class="line">               Slave_IO_State: Waiting for master to send event</div><div class="line">                  Master_Host: 192.168.1.15</div><div class="line">                  Master_User: root</div><div class="line">                  Master_Port: 3306</div><div class="line">                Connect_Retry: 60</div><div class="line">              Master_Log_File: mysql-bin.000015</div><div class="line">          Read_Master_Log_Pos: 107</div><div class="line">               Relay_Log_File: slave-relay-bin.000002</div><div class="line">                Relay_Log_Pos: 253</div><div class="line">        Relay_Master_Log_File: mysql-bin.000015</div><div class="line">             Slave_IO_Running: Yes</div><div class="line">            Slave_SQL_Running: Yes</div><div class="line">              Replicate_Do_DB:</div><div class="line">          Replicate_Ignore_DB:</div><div class="line">           Replicate_Do_Table:</div><div class="line">       Replicate_Ignore_Table:</div><div class="line">      Replicate_Wild_Do_Table:</div><div class="line">  Replicate_Wild_Ignore_Table:</div><div class="line">                   Last_Errno: 0</div><div class="line">                   Last_Error:</div><div class="line">                 Skip_Counter: 0</div><div class="line">          Exec_Master_Log_Pos: 107</div><div class="line">              Relay_Log_Space: 409</div><div class="line">              Until_Condition: None</div><div class="line">               Until_Log_File:</div><div class="line">                Until_Log_Pos: 0</div><div class="line">           Master_SSL_Allowed: No</div><div class="line">           Master_SSL_CA_File:</div><div class="line">           Master_SSL_CA_Path:</div><div class="line">              Master_SSL_Cert:</div><div class="line">            Master_SSL_Cipher:</div><div class="line">               Master_SSL_Key:</div><div class="line">        Seconds_Behind_Master: 0</div><div class="line">Master_SSL_Verify_Server_Cert: No</div><div class="line">                Last_IO_Errno: 0</div><div class="line">                Last_IO_Error:</div><div class="line">               Last_SQL_Errno: 0</div><div class="line">               Last_SQL_Error:</div><div class="line">  Replicate_Ignore_Server_Ids:</div><div class="line">             Master_Server_Id: 15</div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt;</div></pre></td></tr></table></figure></p>
<p>注意<br>Slave_IO_Running: Yes<br>Slave_SQL_Running: Yes<br>说明主从配置成功</p>
<h4 id="测试主从"><a href="#测试主从" class="headerlink" title="测试主从"></a>测试主从</h4><p>master中test数据库和slave中test数据库进行同步测试。<br>在master中test数据库新建test表，刷新slave中test数据库会发现同步成功。<br>而master不会同步slave中创建的表，想让master同步slave中创建的表可参考以下方案。</p>
<h4 id="master与slave数据恢复"><a href="#master与slave数据恢复" class="headerlink" title="master与slave数据恢复"></a>master与slave数据恢复</h4><h4 id="应用切换到slave"><a href="#应用切换到slave" class="headerlink" title="应用切换到slave"></a>应用切换到slave</h4><p>如果master mysql坏掉了，需要将应用转移到slave段。首先在slave端执行：show master status;<br>把输出保存下来，然后再把应用切换过去。保存输出的File和Position值将可以用于以后从slave恢复master。<br> 具体从slave恢复master的办法：<br> 在master端执行：<br>CHANGE MASTER to MASTER_HOST=’192.168.0.203’, MASTER_PORT=3306, MASTER_USER=’repl’, MASTER_PASSWORD=’repl’,<br>MASTER_LOG_FILE=’mysql-bin.000006’, MASTER_LOG_POS=98 ;<br>其中 MASTER_HOST 为slave的ip, MASTER_LOG_FILE, MASTER_LOG_POS为切换到slave时记录下的File和Position值。<br>在master执行：start slave;<br>待master内容基本恢复以后（在master执行：show slave status \G; Slave_IO_State显示为Waiting for master to send event）<br>将应用切换回master。<br>待系统稳定后master执行：stop slave停止slave。如果要避免master重启以后自动开启slave，可以将master<br>mysql的data文件夹的master.info文件删掉。<br>参考：<a href="http://blog.sina.com.cn/s/blog_620adf7f0100kj5e.html" target="_blank" rel="external">http://blog.sina.com.cn/s/blog_620adf7f0100kj5e.html</a>  </p>
<h3 id="使用Amoeba-阿米巴-开源框架实现mysql读写分离-负载均衡"><a href="#使用Amoeba-阿米巴-开源框架实现mysql读写分离-负载均衡" class="headerlink" title="使用Amoeba(阿米巴)开源框架实现mysql读写分离(负载均衡)"></a>使用Amoeba(阿米巴)开源框架实现mysql读写分离(负载均衡)</h3><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>环境:<br>    windows 64<br>    amoeba-for-mysql-2.2.0.zip<br>    java version “1.8.0_31”<br>    mysql-5.5.47-win32<br>win需要安装jdk运行环境支持amoeba的运行<br>mastermysqlIP:192.168.1.15<br>slavemysqlIP:192.168.1.200<br>amoeba-for-mysql-2安装在IP:192.168.1.15<br>master和slave已实现了主从，配置主从可参考上面<br>下面介绍一下amoeba的使用</p>
<h3 id="配置amoeba"><a href="#配置amoeba" class="headerlink" title="配置amoeba"></a>配置amoeba</h3><p>将下载好的amoeba-for-mysql-2.2.0.zip文件解压到C:\mysql\amoeba-for-mysql-2.2.0<br><img src="https://volc1605.github.io/images/MySQL主从配置和读写分离/9.png" alt="目录结构"></p>
<p>conf目录下有dbServers.xml和amoeba.xml两个文件需要修改<br>dbServers.xml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;gbk&quot;?&gt;</div><div class="line"></div><div class="line">&lt;!DOCTYPE amoeba:dbServers SYSTEM &quot;dbserver.dtd&quot;&gt;</div><div class="line">&lt;amoeba:dbServers xmlns:amoeba=&quot;http://amoeba.meidusa.com/&quot;&gt;</div><div class="line"></div><div class="line">		&lt;!-- </div><div class="line">			Each dbServer needs to be configured into a Pool,</div><div class="line">			If you need to configure multiple dbServer with load balancing that can be simplified by the following configuration:</div><div class="line">			 add attribute with name virtual = &quot;true&quot; in dbServer, but the configuration does not allow the element with name factoryConfig</div><div class="line">			 such as &apos;multiPool&apos; dbServer   </div><div class="line">		--&gt;</div><div class="line">		</div><div class="line">	&lt;dbServer name=&quot;abstractServer&quot; abstractive=&quot;true&quot;&gt;</div><div class="line">		&lt;factoryConfig class=&quot;com.meidusa.amoeba.mysql.net.MysqlServerConnectionFactory&quot;&gt;</div><div class="line">			&lt;property name=&quot;manager&quot;&gt;$&#123;defaultManager&#125;&lt;/property&gt;</div><div class="line">			&lt;property name=&quot;sendBufferSize&quot;&gt;64&lt;/property&gt;</div><div class="line">			&lt;property name=&quot;receiveBufferSize&quot;&gt;128&lt;/property&gt;</div><div class="line">			</div><div class="line">			&lt;!-- amoeba账户信息，主从服务器上的mysql需要为amoeba账号授权 --&gt;</div><div class="line">			&lt;!-- mysql port master数据库端口号--&gt;</div><div class="line">			&lt;property name=&quot;port&quot;&gt;3306&lt;/property&gt;</div><div class="line">			</div><div class="line">			&lt;!-- mysql schema master读写分离的数据库名称--&gt;</div><div class="line">			&lt;property name=&quot;schema&quot;&gt;newchange&lt;/property&gt;</div><div class="line">			</div><div class="line">			&lt;!-- mysql user amoeba账号名称--&gt;</div><div class="line">			&lt;property name=&quot;user&quot;&gt;amoeba&lt;/property&gt;</div><div class="line">			</div><div class="line">			&lt;!-- amoeba账号密码 --&gt;</div><div class="line">			&lt;property name=&quot;password&quot;&gt;123456&lt;/property&gt;</div><div class="line">			</div><div class="line">		&lt;/factoryConfig&gt;</div><div class="line"></div><div class="line">		&lt;poolConfig class=&quot;com.meidusa.amoeba.net.poolable.PoolableObjectPool&quot;&gt;</div><div class="line">			&lt;property name=&quot;maxActive&quot;&gt;500&lt;/property&gt;</div><div class="line">			&lt;property name=&quot;maxIdle&quot;&gt;500&lt;/property&gt;</div><div class="line">			&lt;property name=&quot;minIdle&quot;&gt;10&lt;/property&gt;</div><div class="line">			&lt;property name=&quot;minEvictableIdleTimeMillis&quot;&gt;600000&lt;/property&gt;</div><div class="line">			&lt;property name=&quot;timeBetweenEvictionRunsMillis&quot;&gt;600000&lt;/property&gt;</div><div class="line">			&lt;property name=&quot;testOnBorrow&quot;&gt;true&lt;/property&gt;</div><div class="line">			&lt;property name=&quot;testOnReturn&quot;&gt;true&lt;/property&gt;</div><div class="line">			&lt;property name=&quot;testWhileIdle&quot;&gt;true&lt;/property&gt;</div><div class="line">		&lt;/poolConfig&gt;</div><div class="line">	&lt;/dbServer&gt;</div><div class="line">	&lt;!-- mastermysql --&gt;</div><div class="line">	&lt;dbServer name=&quot;master&quot;  parent=&quot;abstractServer&quot;&gt;</div><div class="line">		&lt;factoryConfig&gt;</div><div class="line">			&lt;!-- mysql ip --&gt;</div><div class="line">			&lt;property name=&quot;ipAddress&quot;&gt;192.168.1.15&lt;/property&gt;</div><div class="line">		&lt;/factoryConfig&gt;</div><div class="line">	&lt;/dbServer&gt;</div><div class="line">	&lt;!-- slavemysql --&gt;</div><div class="line">	&lt;dbServer name=&quot;slave&quot;  parent=&quot;abstractServer&quot;&gt;</div><div class="line">		&lt;factoryConfig&gt;</div><div class="line">			&lt;!-- mysql ip --&gt;</div><div class="line">			&lt;property name=&quot;ipAddress&quot;&gt;192.168.1.200&lt;/property&gt;</div><div class="line">		&lt;/factoryConfig&gt;</div><div class="line">	&lt;/dbServer&gt;</div><div class="line">	</div><div class="line">	&lt;dbServer name=&quot;multiPool&quot; virtual=&quot;true&quot;&gt;</div><div class="line">		&lt;poolConfig class=&quot;com.meidusa.amoeba.server.MultipleServerPool&quot;&gt;</div><div class="line">			&lt;!-- Load balancing strategy: 1=ROUNDROBIN , 2=WEIGHTBASED , 3=HA--&gt;</div><div class="line">			&lt;!-- 1为轮询，2为并 --&gt;</div><div class="line">			&lt;property name=&quot;loadbalance&quot;&gt;1&lt;/property&gt;</div><div class="line">			&lt;!-- Separated by commas,such as: server1,server2,server1 --&gt;</div><div class="line">			&lt;property name=&quot;poolNames&quot;&gt;master,slave&lt;/property&gt;</div><div class="line">		&lt;/poolConfig&gt;</div><div class="line">	&lt;/dbServer&gt;</div><div class="line">		</div><div class="line">&lt;/amoeba:dbServers&gt;</div></pre></td></tr></table></figure></p>
<p>amoeba.xml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;gbk&quot;?&gt;</div><div class="line"></div><div class="line">&lt;!DOCTYPE amoeba:configuration SYSTEM &quot;amoeba.dtd&quot;&gt;</div><div class="line">&lt;amoeba:configuration xmlns:amoeba=&quot;http://amoeba.meidusa.com/&quot;&gt;</div><div class="line"></div><div class="line">	&lt;proxy&gt;</div><div class="line">	</div><div class="line">		&lt;!-- service class must implements com.meidusa.amoeba.service.Service --&gt;</div><div class="line">		&lt;service name=&quot;Amoeba for Mysql&quot; class=&quot;com.meidusa.amoeba.net.ServerableConnectionManager&quot;&gt;</div><div class="line">			&lt;!-- port amoeba账号访问端口 --&gt;</div><div class="line">			&lt;property name=&quot;port&quot;&gt;8066&lt;/property&gt;</div><div class="line">			</div><div class="line">			&lt;!-- bind ipAddress --&gt;</div><div class="line">			</div><div class="line">			&lt;property name=&quot;ipAddress&quot;&gt;127.0.0.1&lt;/property&gt;</div><div class="line">			</div><div class="line">			</div><div class="line">			&lt;property name=&quot;manager&quot;&gt;$&#123;clientConnectioneManager&#125;&lt;/property&gt;</div><div class="line">			</div><div class="line">			&lt;property name=&quot;connectionFactory&quot;&gt;</div><div class="line">				&lt;bean class=&quot;com.meidusa.amoeba.mysql.net.MysqlClientConnectionFactory&quot;&gt;</div><div class="line">					&lt;property name=&quot;sendBufferSize&quot;&gt;128&lt;/property&gt;</div><div class="line">					&lt;property name=&quot;receiveBufferSize&quot;&gt;64&lt;/property&gt;</div><div class="line">				&lt;/bean&gt;</div><div class="line">			&lt;/property&gt;</div><div class="line">			</div><div class="line">			&lt;property name=&quot;authenticator&quot;&gt;</div><div class="line">				&lt;bean class=&quot;com.meidusa.amoeba.mysql.server.MysqlClientAuthenticator&quot;&gt;</div><div class="line">					</div><div class="line">					&lt;!-- mysql客户端访问amoeba账号配置 --&gt;</div><div class="line">					&lt;property name=&quot;user&quot;&gt;amoebaroot&lt;/property&gt;</div><div class="line">					&lt;property name=&quot;password&quot;&gt;123456&lt;/property&gt;</div><div class="line">					&lt;property name=&quot;filter&quot;&gt;</div><div class="line">						&lt;bean class=&quot;com.meidusa.amoeba.server.IPAccessController&quot;&gt;</div><div class="line">							&lt;property name=&quot;ipFile&quot;&gt;$&#123;amoeba.home&#125;/conf/access_list.conf&lt;/property&gt;</div><div class="line">						&lt;/bean&gt;</div><div class="line">					&lt;/property&gt;</div><div class="line">				&lt;/bean&gt;</div><div class="line">			&lt;/property&gt;</div><div class="line">			</div><div class="line">		&lt;/service&gt;</div><div class="line">		</div><div class="line">		&lt;!-- server class must implements com.meidusa.amoeba.service.Service --&gt;</div><div class="line">		&lt;service name=&quot;Amoeba Monitor Server&quot; class=&quot;com.meidusa.amoeba.monitor.MonitorServer&quot;&gt;</div><div class="line">			&lt;!-- port --&gt;</div><div class="line">			&lt;!--  default value: random number</div><div class="line">			&lt;property name=&quot;port&quot;&gt;9066&lt;/property&gt;</div><div class="line">			--&gt;</div><div class="line">			&lt;!-- bind ipAddress --&gt;</div><div class="line">			&lt;property name=&quot;ipAddress&quot;&gt;127.0.0.1&lt;/property&gt;</div><div class="line">			&lt;property name=&quot;daemon&quot;&gt;true&lt;/property&gt;</div><div class="line">			&lt;property name=&quot;manager&quot;&gt;$&#123;clientConnectioneManager&#125;&lt;/property&gt;</div><div class="line">			&lt;property name=&quot;connectionFactory&quot;&gt;</div><div class="line">				&lt;bean class=&quot;com.meidusa.amoeba.monitor.net.MonitorClientConnectionFactory&quot;&gt;&lt;/bean&gt;</div><div class="line">			&lt;/property&gt;</div><div class="line">			</div><div class="line">		&lt;/service&gt;</div><div class="line">		</div><div class="line">		&lt;runtime class=&quot;com.meidusa.amoeba.mysql.context.MysqlRuntimeContext&quot;&gt;</div><div class="line">			&lt;!-- proxy server net IO Read thread size --&gt;</div><div class="line">			&lt;property name=&quot;readThreadPoolSize&quot;&gt;20&lt;/property&gt;</div><div class="line">			</div><div class="line">			&lt;!-- proxy server client process thread size --&gt;</div><div class="line">			&lt;property name=&quot;clientSideThreadPoolSize&quot;&gt;30&lt;/property&gt;</div><div class="line">			</div><div class="line">			&lt;!-- mysql server data packet process thread size --&gt;</div><div class="line">			&lt;property name=&quot;serverSideThreadPoolSize&quot;&gt;30&lt;/property&gt;</div><div class="line">			</div><div class="line">			&lt;!-- per connection cache prepared statement size  --&gt;</div><div class="line">			&lt;property name=&quot;statementCacheSize&quot;&gt;500&lt;/property&gt;</div><div class="line">			</div><div class="line">			&lt;!-- query timeout( default: 60 second , TimeUnit:second) --&gt;</div><div class="line">			&lt;property name=&quot;queryTimeout&quot;&gt;60&lt;/property&gt;</div><div class="line">		&lt;/runtime&gt;</div><div class="line">		</div><div class="line">	&lt;/proxy&gt;</div><div class="line">	</div><div class="line">	&lt;!-- </div><div class="line">		Each ConnectionManager will start as thread</div><div class="line">		manager responsible for the Connection IO read , Death Detection</div><div class="line">	--&gt;</div><div class="line">	&lt;connectionManagerList&gt;</div><div class="line">		&lt;connectionManager name=&quot;clientConnectioneManager&quot; class=&quot;com.meidusa.amoeba.net.MultiConnectionManagerWrapper&quot;&gt;</div><div class="line">			&lt;property name=&quot;subManagerClassName&quot;&gt;com.meidusa.amoeba.net.ConnectionManager&lt;/property&gt;</div><div class="line">			&lt;!-- </div><div class="line">			  default value is avaliable Processors </div><div class="line">			&lt;property name=&quot;processors&quot;&gt;5&lt;/property&gt;</div><div class="line">			 --&gt;</div><div class="line">		&lt;/connectionManager&gt;</div><div class="line">		&lt;connectionManager name=&quot;defaultManager&quot; class=&quot;com.meidusa.amoeba.net.MultiConnectionManagerWrapper&quot;&gt;</div><div class="line">			&lt;property name=&quot;subManagerClassName&quot;&gt;com.meidusa.amoeba.net.AuthingableConnectionManager&lt;/property&gt;</div><div class="line">			</div><div class="line">			&lt;!-- </div><div class="line">			  default value is avaliable Processors </div><div class="line">			&lt;property name=&quot;processors&quot;&gt;5&lt;/property&gt;</div><div class="line">			 --&gt;</div><div class="line">		&lt;/connectionManager&gt;</div><div class="line">	&lt;/connectionManagerList&gt;</div><div class="line">	</div><div class="line">		&lt;!-- default using file loader --&gt;</div><div class="line">	&lt;dbServerLoader class=&quot;com.meidusa.amoeba.context.DBServerConfigFileLoader&quot;&gt;</div><div class="line">		&lt;property name=&quot;configFile&quot;&gt;$&#123;amoeba.home&#125;/conf/dbServers.xml&lt;/property&gt;</div><div class="line">	&lt;/dbServerLoader&gt;</div><div class="line">	</div><div class="line">	&lt;queryRouter class=&quot;com.meidusa.amoeba.mysql.parser.MysqlQueryRouter&quot;&gt;</div><div class="line">		&lt;property name=&quot;ruleLoader&quot;&gt;</div><div class="line">			&lt;bean class=&quot;com.meidusa.amoeba.route.TableRuleFileLoader&quot;&gt;</div><div class="line">				&lt;property name=&quot;ruleFile&quot;&gt;$&#123;amoeba.home&#125;/conf/rule.xml&lt;/property&gt;</div><div class="line">				&lt;property name=&quot;functionFile&quot;&gt;$&#123;amoeba.home&#125;/conf/ruleFunctionMap.xml&lt;/property&gt;</div><div class="line">			&lt;/bean&gt;</div><div class="line">		&lt;/property&gt;</div><div class="line">		&lt;property name=&quot;sqlFunctionFile&quot;&gt;$&#123;amoeba.home&#125;/conf/functionMap.xml&lt;/property&gt;</div><div class="line">		&lt;property name=&quot;LRUMapSize&quot;&gt;1500&lt;/property&gt;</div><div class="line">		&lt;property name=&quot;defaultPool&quot;&gt;master&lt;/property&gt;</div><div class="line">		&lt;!-- 可写数据库 --&gt;</div><div class="line">		&lt;property name=&quot;writePool&quot;&gt;master&lt;/property&gt;</div><div class="line">		&lt;!-- 可读的数据库 --&gt;</div><div class="line">		&lt;property name=&quot;readPool&quot;&gt;multiPool&lt;/property&gt;	</div><div class="line">		&lt;property name=&quot;needParse&quot;&gt;true&lt;/property&gt;</div><div class="line">	&lt;/queryRouter&gt;</div><div class="line">&lt;/amoeba:configuration&gt;</div></pre></td></tr></table></figure></p>
<p>配置文件配置完成，主从mysql为amoeba授权</p>
<p>分别登录主从mysql执行命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mysql&gt; grant all on newchange.* to amoeba@&apos;192.168.1.%&apos; identified by &apos;123456&apos;;</div><div class="line">flush privileges;</div></pre></td></tr></table></figure></p>
<p>启动amoeba<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">C:\mysql\amoeba-for-mysql-2.2.0\bin&gt;amoeba</div><div class="line">amoeba start|stop</div><div class="line">请按任意键继续. . .</div><div class="line"></div><div class="line">C:\mysql\amoeba-for-mysql-2.2.0\bin&gt;amoeba start</div><div class="line">log4j:WARN log4j config load completed from file:C:\mysql\amoeba-for-mysql-2.2.0</div><div class="line">\bin\..\conf\log4j.xml</div><div class="line">2017-01-06 14:46:42,470 INFO  context.MysqlRuntimeContext - Amoeba for Mysql cur</div><div class="line">rent versoin=5.1.45-mysql-amoeba-proxy-2.2.0</div><div class="line">log4j:WARN ip access config load completed from file:C:\mysql\amoeba-for-mysql-2</div><div class="line">.2.0\bin\../conf/access_list.conf</div><div class="line">2017-01-06 14:46:42,645 INFO  net.ServerableConnectionManager - Amoeba for Mysql</div><div class="line"> listening on /127.0.0.1:8066.</div><div class="line">2017-01-06 14:46:42,648 INFO  net.ServerableConnectionManager - Amoeba Monitor S</div><div class="line">erver listening on /127.0.0.1:49986.</div></pre></td></tr></table></figure></p>
<h4 id="测试读写分离及负载均衡"><a href="#测试读写分离及负载均衡" class="headerlink" title="测试读写分离及负载均衡"></a>测试读写分离及负载均衡</h4><p>在登录master主库上newchange数据库中创建liu表<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mysql&gt; create table liu (id int(10), text varchar(20));</div><div class="line">mysql&gt; insert into liu values(&apos;1&apos;, &apos;this_is_master&apos;);</div></pre></td></tr></table></figure></p>
<p>登录slave从库停掉从库复制进程<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mysql&gt; stop slave;</div><div class="line">mysql&gt; insert into liu values(&apos;2&apos;,,&apos;this_is_slave&apos;);</div></pre></td></tr></table></figure></p>
<p>192.168.1.15(master服务器)连接amoeba客户端<br><img src="https://volc1605.github.io/images/MySQL主从配置和读写分离/10.png" alt="链接amoeba"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">C:\mysql\mysql-5.5.47-win32\bin&gt;mysql -u amoebaroot -p -h 127.0.0.1 -P 8066</div><div class="line">Enter password: ******</div><div class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</div><div class="line">Your MySQL connection id is 1164729376</div><div class="line">Server version: 5.1.45-mysql-amoeba-proxy-2.2.0 MySQL Community Server (GPL)</div><div class="line"></div><div class="line">Copyright (c) 2000, 2015, Oracle and/or its affiliates. All rights reserved.</div><div class="line"></div><div class="line">Oracle is a registered trademark of Oracle Corporation and/or its</div><div class="line">affiliates. Other names may be trademarks of their respective</div><div class="line">owners.</div><div class="line"></div><div class="line">Type &apos;help;&apos; or &apos;\h&apos; for help. Type &apos;\c&apos; to clear the current input statement.</div><div class="line"></div><div class="line">mysql&gt; use newchange;</div><div class="line">Database changed</div></pre></td></tr></table></figure>
<p>因为默认连的数据库是主库，第一次查询查的是主库的数据<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select * from liu;</div><div class="line">+------+----------------+</div><div class="line">| id   | text           |</div><div class="line">+------+----------------+</div><div class="line">|  1   | this_is_master |</div><div class="line">+------+----------------+</div><div class="line">1 rows in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<p>因为开启了负载均衡并采用轮询模式该查询查的是从库的数据<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select * from liu;</div><div class="line">+------+---------------+</div><div class="line">| id   | text          |</div><div class="line">+------+---------------+</div><div class="line">|  1   | this_is_master|</div><div class="line">|  2   | this_is_slave |</div><div class="line">+------+---------------+</div><div class="line">2 row in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<p>插入两条数据，观察数据插入到哪个库中</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">mysql&gt; insert into liu values(&apos;3&apos;,&apos;this_is_master&apos;);</div><div class="line">Query OK, 1 row affected (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; insert into liu values(&apos;3&apos;,&apos;this_is_master&apos;);</div><div class="line">Query OK, 1 row affected (0.01 sec)</div></pre></td></tr></table></figure>
<p>在主库查询<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select * from liu;</div><div class="line">+------+----------------+</div><div class="line">| id   | text           |</div><div class="line">+------+----------------+</div><div class="line">|  1   | this_is_master |</div><div class="line">|  3   | this_is_master |</div><div class="line">|  4   | this_is_master |</div><div class="line">+------+----------------+</div><div class="line">3 rows in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<p>在从库查询<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select * from liu;</div><div class="line">+------+---------------+</div><div class="line">| id   |   text        |</div><div class="line">+------+---------------+</div><div class="line">|  2   | this_is_slave |</div><div class="line">+------+---------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<p>可见数据插入到了主库上，因为配置了主库可读写、从库为只读，且主从同步中从库的同步进程已被停用。</p>
<p>配置参考：<a href="http://docs.hexnova.com/amoeba/single-dbserver.html#example.dbServer.abstractServer.port" target="_blank" rel="external">http://docs.hexnova.com/amoeba/single-dbserver.html#example.dbServer.abstractServer.port</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[win配置MySQL]]></title>
      <url>https://volc1605.github.io/2017/01/05/win%E9%85%8D%E7%BD%AEMySQL/</url>
      <content type="html"><![CDATA[<h3 id="1-遇到的错误"><a href="#1-遇到的错误" class="headerlink" title="1 遇到的错误"></a>1 遇到的错误</h3><a id="more"></a>
<h4 id="1-1-mysql服务启动不了"><a href="#1-1-mysql服务启动不了" class="headerlink" title="1.1 mysql服务启动不了"></a>1.1 mysql服务启动不了</h4><p>查看D:\mysql\3381\logs\mysql.err.log错误日志文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">2016-02-03 10:19:54 6448 [ERROR] InnoDB: Attempted to open a previously opened tablespace. Previous tablespace mysql/innodb_table_stats uses space ID: 1 at filepath: .\mysql\innodb_table_stats.ibd. Cannot open tablespace scrapers/openpasts_records which uses space ID: 1 at filepath: .\scrapers\openpasts_records.ibd</div></pre></td></tr></table></figure>
<p>问题出现原因是，由于移动其他盘的空间扩充到系统盘，系统盘扩充不会受到影响，而其他盘的文件索引改变了导致问题出现。</p>
<p>解决方法：<br>1 停止mysql服务<br>2 备份数据库，删掉出问题的数据库<br>3 删掉D:\mysql\3381\data\data文件夹下ibdata1及log文件,删掉D:\mysql\3381\logs中的日志文件<br>4 重启mysqls服务，导入新库</p>
<p>测试主从。<br>主从参考：<a href="http://volcfamily.cn/2017/01/05/MySQL%E4%B8%BB%E4%BB%8E%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/" target="_blank" rel="external">点一下</a></p>
<h4 id="1-2-执行更新语句报错"><a href="#1-2-执行更新语句报错" class="headerlink" title="1.2 执行更新语句报错"></a>1.2 执行更新语句报错</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[Err] 1055 - Expression #1 of ORDER BY clause is not in GROUP BY clause and contains nonaggregated column &apos;information_schema.PROFILING.SEQ&apos; which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by</div></pre></td></tr></table></figure>
<p>原因：<br>查询SQL_MODE信息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">select @@global.sql_mode;</div><div class="line">ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION</div></pre></td></tr></table></figure></p>
<p>对于GROUP by聚合操作，如果在select中的列没有在GROUP BY中出现，那么sql语句是不合法的，因为a列不在group by从句中。<br>select id,sum(date) from tt group by date; // 不合法的sql语句<br>解决方法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SET GLOBAL sql_mode=(SELECT REPLACE(@@sql_mode,&apos;ONLY_FULL_GROUP_BY&apos;,&apos;&apos;));</div></pre></td></tr></table></figure></p>
<hr>
<h3 id="类型长度"><a href="#类型长度" class="headerlink" title="类型长度"></a>类型长度</h3><p>下载：<a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="external">https://dev.mysql.com/downloads/mysql/</a></p>
<p>int和bigint超限会改变值<br>char和varchar超限会截取值<br><!-- more --></p>
<h3 id="win配置mysql"><a href="#win配置mysql" class="headerlink" title="win配置mysql"></a>win配置mysql</h3><h4 id="解压mysql-5-7-17-winx64-zip配置环境变量"><a href="#解压mysql-5-7-17-winx64-zip配置环境变量" class="headerlink" title="解压mysql-5.7.17-winx64.zip配置环境变量"></a>解压mysql-5.7.17-winx64.zip配置环境变量</h4><p>新增编辑用户变量：<br>    MYSQL_HOME<br>    C:\mysql\mysql-5.7.17-winx64<br>在编辑系统变量中path变量新增%MYSQL_HOME%\bin;</p>
<h4 id="初始化和配置"><a href="#初始化和配置" class="headerlink" title="初始化和配置"></a>初始化和配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">C:\mysql\mysql-5.7.17-winx64\bin&gt;mysqld  --initialize</div></pre></td></tr></table></figure>
<p>增加服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">C:\mysql\mysql-5.7.17-winx64\bin&gt;mysqld -install</div></pre></td></tr></table></figure></p>
<p>启动停止服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">C:\Users\Administrator&gt;net stop mysql</div><div class="line">MySQL 服务正在停止.</div><div class="line">MySQL 服务已成功停止。</div><div class="line"></div><div class="line">C:\Users\Administrator&gt;net start mysql</div><div class="line">MySQL 服务正在启动 .</div><div class="line">MySQL 服务已经启动成功。</div></pre></td></tr></table></figure></p>
<h4 id="查看版本号"><a href="#查看版本号" class="headerlink" title="查看版本号"></a>查看版本号</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">C:\Users\Administrator&gt;mysql -V</div><div class="line">mysql  Ver 14.14 Distrib 5.7.17, for Win64 (x86)</div></pre></td></tr></table></figure>
<p>配置my.ini文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"># For advice on how to change settings please see</div><div class="line"># http://dev.mysql.com/doc/refman/5.6/en/server-configuration-defaults.html</div><div class="line"># *** DO NOT EDIT THIS FILE. It&apos;s a template which will be copied to the</div><div class="line"># *** default location during install, and will be replaced if you</div><div class="line"># *** upgrade to a newer version of MySQL.</div><div class="line"></div><div class="line">[mysqld]</div><div class="line">#绑定IPv4和3306端口</div><div class="line">bind-address = 127.0.0.1</div><div class="line">port = 3306</div><div class="line">log_bin</div><div class="line"># 允许最大连接数</div><div class="line">max_connections = 200</div><div class="line">basedir = C:\mysql\mysql-5.7.17-winx64</div><div class="line">datadir = C:\mysql\mysql-5.7.17-winx64\data</div><div class="line">port = 3306</div><div class="line">server_id = 15</div><div class="line">#设置字符集为utf8  </div><div class="line">loose-default-character-set = utf8</div><div class="line"># join_buffer_size = 128M</div><div class="line"># sort_buffer_size = 2M</div><div class="line"># read_rnd_buffer_size = 2M </div><div class="line">[client]  </div><div class="line">#设置客户端字符集  </div><div class="line">loose-default-character-set = utf8</div><div class="line"></div><div class="line"># 不区分表的大小写</div><div class="line">lower_case_table_names = 1</div><div class="line">  </div><div class="line">[WinMySQLadmin]</div><div class="line">Server = C:\mysql\mysql-5.7.17-winx64\bin\mysqld.exe</div></pre></td></tr></table></figure></p>
<h4 id="net-start-mysql报错"><a href="#net-start-mysql报错" class="headerlink" title="net start mysql报错"></a>net start mysql报错</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">C:\Users\Administrator&gt;net start mysql</div><div class="line">MySQL 服务正在启动 .</div><div class="line">MySQL 服务无法启动。</div><div class="line"></div><div class="line">服务没有报告任何错误。</div><div class="line"></div><div class="line">请键入 NET HELPMSG 3534 以获得更多的帮助。</div></pre></td></tr></table></figure>
<p>或者遇到1067进程意外终止错误</p>
<p>解决方法：<br>1、打开任务管理器终止mysqld进程；<br>2、# 设置默认引擎(可分表)<br>    default-storage-engine=MRG_MyISAM8<br>3、打开mysql安装目录的data文件夹，删除以下2个文件：<br>ib_logfile0和ib_logfile1<br>4、找到在配置MySQL服务器时指定的InfoDB目录删除掉ibdata1<br>    根据my.ini文件中：</p>
<pre><code>#*** INNODB Specific options ***
innodb_data_home_dir=&quot;D:/&quot;。
</code></pre><p>5、重新启动MySQL的Service  </p>
<h4 id="win下忘记mysql登录密码"><a href="#win下忘记mysql登录密码" class="headerlink" title="win下忘记mysql登录密码"></a>win下忘记mysql登录密码</h4><h5 id="1-停止服务再执行跳过权限登录命令"><a href="#1-停止服务再执行跳过权限登录命令" class="headerlink" title="1.停止服务再执行跳过权限登录命令"></a>1.停止服务再执行跳过权限登录命令</h5><p>跳过权限命令<br>mysqld –defaults-file=”C:\mysql\mysql-5.7.17-winx64\my.ini” –console –skip-grant-tables<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line">C:\mysql\mysql-5.7.17-winx64\bin&gt;net stop mysql</div><div class="line">mysql 服务正在停止.</div><div class="line">mysql 服务已成功停止。</div><div class="line"></div><div class="line">C:\mysql\mysql-5.7.17-winx64\bin&gt;mysqld --defaults-file=&quot;C:\mysql\mysql-5.7.17-winx64\my.ini&quot; --console --skip-grant-tables</div><div class="line"></div><div class="line">2017-01-04T08:01:40.506477Z 0 [Warning] TIMESTAMP with implicit DEFAULT value is</div><div class="line"> deprecated. Please use --explicit_defaults_for_timestamp server option (see doc</div><div class="line">umentation for more details).</div><div class="line">2017-01-04T08:01:40.506477Z 0 [Note] --secure-file-priv is set to NULL. Operatio</div><div class="line">ns related to importing and exporting data are disabled</div><div class="line">2017-01-04T08:01:40.507477Z 0 [Note] mysqld (mysqld 5.7.17-log) starting as proc</div><div class="line">ess 9168 ...</div><div class="line">2017-01-04T08:01:40.513478Z 0 [Warning] No argument was provided to --log-bin, a</div><div class="line">nd --log-bin-index was not used; so replication may break when this MySQL server</div><div class="line"> acts as a master and has his hostname changed!! Please use &apos;--log-bin=PC-201606</div><div class="line">29TTDK-bin&apos; to avoid this problem.</div><div class="line">2017-01-04T08:01:40.527478Z 0 [Note] InnoDB: Mutexes and rw_locks use Windows in</div><div class="line">terlocked functions</div><div class="line">2017-01-04T08:01:40.528479Z 0 [Note] InnoDB: Uses event mutexes</div><div class="line">2017-01-04T08:01:40.529479Z 0 [Note] InnoDB: _mm_lfence() and _mm_sfence() are u</div><div class="line">sed for memory barrier</div><div class="line">2017-01-04T08:01:40.530479Z 0 [Note] InnoDB: Compressed tables use zlib 1.2.3</div><div class="line">2017-01-04T08:01:40.531479Z 0 [Note] InnoDB: Number of pools: 1</div><div class="line">2017-01-04T08:01:40.531479Z 0 [Note] InnoDB: Not using CPU crc32 instructions</div><div class="line">2017-01-04T08:01:40.534479Z 0 [Note] InnoDB: Initializing buffer pool, total siz</div><div class="line">e = 128M, instances = 1, chunk size = 128M</div><div class="line">2017-01-04T08:01:40.542479Z 0 [Note] InnoDB: Completed initialization of buffer</div><div class="line">pool</div><div class="line">2017-01-04T08:01:40.609483Z 0 [Note] InnoDB: Highest supported file format is Ba</div><div class="line">rracuda.</div><div class="line">2017-01-04T08:01:40.708489Z 0 [Note] InnoDB: Creating shared tablespace for temp</div><div class="line">orary tables</div><div class="line">2017-01-04T08:01:40.710489Z 0 [Note] InnoDB: Setting file &apos;.\ibtmp1&apos; size to 12</div><div class="line">MB. Physically writing the file full; Please wait ...</div><div class="line">2017-01-04T08:01:40.893499Z 0 [Note] InnoDB: File &apos;.\ibtmp1&apos; size is now 12 MB.</div><div class="line">2017-01-04T08:01:40.897500Z 0 [Note] InnoDB: 96 redo rollback segment(s) found.</div><div class="line">96 redo rollback segment(s) are active.</div><div class="line">2017-01-04T08:01:40.899500Z 0 [Note] InnoDB: 32 non-redo rollback segment(s) are</div><div class="line"> active.</div><div class="line">2017-01-04T08:01:40.905500Z 0 [Note] InnoDB: 5.7.17 started; log sequence number</div><div class="line"> 2535781</div><div class="line">2017-01-04T08:01:40.908500Z 0 [Note] InnoDB: Loading buffer pool(s) from C:\mysq</div><div class="line">l\mysql-5.7.17-winx64\data\ib_buffer_pool</div><div class="line">2017-01-04T08:01:40.908500Z 0 [Note] Plugin &apos;FEDERATED&apos; is disabled.</div><div class="line">2017-01-04T08:01:40.912500Z 0 [Warning] unknown variable &apos;loose-default-characte</div><div class="line">r-set=utf8&apos;</div><div class="line">2017-01-04T08:01:41.122513Z 0 [Warning] Failed to set up SSL because of the foll</div><div class="line">owing SSL library error: SSL context is not usable without certificate and priva</div><div class="line">te key</div><div class="line">2017-01-04T08:01:41.126513Z 0 [Note] Server hostname (bind-address): &apos;127.0.0.1&apos;</div><div class="line">; port: 3306</div><div class="line">2017-01-04T08:01:41.129513Z 0 [Note]   - &apos;127.0.0.1&apos; resolves to &apos;127.0.0.1&apos;;</div><div class="line">2017-01-04T08:01:41.131513Z 0 [Note] Server socket created on IP: &apos;127.0.0.1&apos;.</div><div class="line">2017-01-04T08:01:41.169515Z 0 [Note] InnoDB: Buffer pool(s) load completed at 17</div><div class="line">0104 16:01:41</div><div class="line">2017-01-04T08:01:41.209517Z 0 [Note] Executing &apos;SELECT * FROM INFORMATION_SCHEMA</div><div class="line">.TABLES;&apos; to get a list of tables using the deprecated partition engine. You may</div><div class="line"> use the startup option &apos;--disable-partition-engine-check&apos; to skip this check.</div><div class="line">2017-01-04T08:01:41.211518Z 0 [Note] Beginning of list of non-natively partition</div><div class="line">ed tables</div><div class="line">2017-01-04T08:01:41.242519Z 0 [Note] End of list of non-natively partitioned tab</div><div class="line">les</div><div class="line">2017-01-04T08:01:41.243519Z 0 [Note] mysqld: ready for connections.</div><div class="line">Version: &apos;5.7.17-log&apos;  socket: &apos;&apos;  port: 3306  MySQL Community Server (GPL)</div></pre></td></tr></table></figure></p>
<p>出现以上效果说明已经跳过了权限，如果遇到10065错误，就先停止mysqld.exe进程</p>
<h5 id="2-在新的CMD中执行命令"><a href="#2-在新的CMD中执行命令" class="headerlink" title="2.在新的CMD中执行命令"></a>2.在新的CMD中执行命令</h5><p>提示输入密码，直接按回车就好了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line">C:\mysql\mysql-5.7.17-winx64\bin&gt;mysql -u root -p</div><div class="line">Enter password:</div><div class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</div><div class="line">Your MySQL connection id is 3</div><div class="line">Server version: 5.7.17-log MySQL Community Server (GPL)</div><div class="line"></div><div class="line">Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.</div><div class="line"></div><div class="line">Oracle is a registered trademark of Oracle Corporation and/or its</div><div class="line">affiliates. Other names may be trademarks of their respective</div><div class="line">owners.</div><div class="line"></div><div class="line">Type &apos;help;&apos; or &apos;\h&apos; for help. Type &apos;\c&apos; to clear the current input statement.</div><div class="line"></div><div class="line">mysql&gt; use mysql;</div><div class="line">Database changed</div><div class="line">mysql&gt; select count(1) from user where user = &apos;root&apos;;</div><div class="line">+----------+</div><div class="line">| count(1) |</div><div class="line">+----------+</div><div class="line">|        1 |</div><div class="line">+----------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; UPDATE user SET password = PASSWORD(&apos;root&apos;) WHERE user = &apos;root&apos;;</div><div class="line">ERROR 1054 (42S22): Unknown column &apos;password&apos; in &apos;field list&apos;</div><div class="line">mysql&gt; update user u set u.authentication_string = PASSWORD(&apos;root&apos;) WHERE u.user</div><div class="line"> = &apos;root&apos;;</div><div class="line">Query OK, 0 rows affected, 1 warning (0.00 sec)</div><div class="line">Rows matched: 1  Changed: 0  Warnings: 1</div><div class="line"></div><div class="line">mysql&gt; quit;</div><div class="line">Bye</div><div class="line"></div><div class="line">C:\mysql\mysql-5.7.17-winx64\bin&gt;net start mysql</div><div class="line">mysql 服务正在启动 .</div><div class="line">mysql 服务已经启动成功。</div><div class="line"></div><div class="line">C:\mysql\mysql-5.7.17-winx64\bin&gt;mysql -u root -p</div><div class="line">Enter password: ****</div><div class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</div><div class="line">Your MySQL connection id is 3</div><div class="line">Server version: 5.7.17-log</div><div class="line"></div><div class="line">Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.</div><div class="line"></div><div class="line">Oracle is a registered trademark of Oracle Corporation and/or its</div><div class="line">affiliates. Other names may be trademarks of their respective</div><div class="line">owners.</div><div class="line"></div><div class="line">Type &apos;help;&apos; or &apos;\h&apos; for help. Type &apos;\c&apos; to clear the current input statement.</div><div class="line"></div><div class="line">mysql&gt;</div></pre></td></tr></table></figure></p>
<p>sql：update user u set u.authentication_string = PASSWORD(‘root’) WHERE u.user = ‘root’;<br>不同版本的mysql密码字段不一样，越过权限需要查看user表中字段信息</p>
<h3 id="分表"><a href="#分表" class="headerlink" title="分表"></a>分表</h3><p>参考地址：<br><a href="http://www.cnblogs.com/miketwais/articles/mysql_partition.html" target="_blank" rel="external">http://www.cnblogs.com/miketwais/articles/mysql_partition.html</a><br><a href="http://blog.csdn.net/shandalue/article/details/52035040" target="_blank" rel="external">http://blog.csdn.net/shandalue/article/details/52035040</a></p>
<p>哪些引擎可以分表？</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[java操作Excel]]></title>
      <url>https://volc1605.github.io/2016/12/24/java%E8%A7%A3%E6%9E%90Excel%E5%AF%BC%E5%85%A5%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      <content type="html"><![CDATA[<h3 id="java解析-xlsx或者xls格式数据"><a href="#java解析-xlsx或者xls格式数据" class="headerlink" title="java解析.xlsx或者xls格式数据"></a>java解析.xlsx或者xls格式数据</h3><a id="more"></a>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.io.File;</div><div class="line"><span class="keyword">import</span> java.io.FileInputStream;</div><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</div><div class="line"><span class="keyword">import</span> java.lang.reflect.Method;</div><div class="line"><span class="keyword">import</span> java.text.DecimalFormat;</div><div class="line"><span class="keyword">import</span> java.util.ArrayList;</div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.Cell;</div><div class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.Row;</div><div class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.Sheet;</div><div class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.Workbook;</div><div class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.WorkbookFactory;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * <span class="doctag">@param</span> &lt;E&gt;</div><div class="line"> * <span class="doctag">@ClassName</span> ReadExcelToList</div><div class="line"> * <span class="doctag">@Description</span> 读取xlsx数据返回list集合</div><div class="line"> * <span class="doctag">@Author</span> youtanzhi</div><div class="line"> * <span class="doctag">@Date</span> 2016年12月23日 下午4:09:30 需要注意的是导入的 poi相关jar包版本号要一致</div><div class="line"> * 需要两个jar包:poi和poi-ooxml</div><div class="line"> *       &lt;dependency&gt; &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;</div><div class="line"> *       &lt;artifactId&gt;poi&lt;/artifactId&gt;</div><div class="line"> *       &lt;version&gt;3.10-FINAL&lt;/version&gt; &lt;/dependency&gt; &lt;!--</div><div class="line"> *       https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml --&gt;</div><div class="line"> *       &lt;dependency&gt; &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;</div><div class="line"> *       &lt;artifactId&gt;poi-ooxml&lt;/artifactId&gt;</div><div class="line"> *       &lt;version&gt;3.10-FINAL&lt;/version&gt; &lt;/dependency&gt;</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ReadExcelToList</span>&lt;<span class="title">E</span>&gt; </span>&#123;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> List&lt;E&gt; <span class="title">getList</span><span class="params">(String file_dir, Class&lt;? extends Object&gt; classObj)</span> <span class="keyword">throws</span> IOException,</span></div><div class="line">	    InstantiationException, IllegalAccessException, IllegalArgumentException, InvocationTargetException &#123;</div><div class="line">	List&lt;E&gt; dataList = <span class="keyword">new</span> ArrayList&lt;E&gt;();</div><div class="line">	Method[] methods = classObj.getMethods();</div><div class="line">	Method m = <span class="keyword">null</span>;</div><div class="line">	List&lt;Method&gt; beanMehtodList = <span class="keyword">new</span> ArrayList&lt;Method&gt;();</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; methods.length; x++) &#123;</div><div class="line">	    m = methods[x];</div><div class="line">	    beanMehtodList.add(m);</div><div class="line">	&#125;</div><div class="line">	Workbook book = <span class="keyword">null</span>;</div><div class="line">	book = getExcelWorkbook(file_dir);</div><div class="line">	Sheet sheet = getSheetByNum(book, <span class="number">0</span>);</div><div class="line">	<span class="keyword">int</span> lastRowNum = sheet.getLastRowNum(); <span class="comment">// 每一行含有内容的列的数量，如果lastCellNum大于含有内容列数的个数会报错。</span></div><div class="line">	System.out.println(<span class="string">"last number is "</span> + lastRowNum);</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= lastRowNum; i++) &#123;</div><div class="line">	    Row row = <span class="keyword">null</span>;</div><div class="line">	    row = sheet.getRow(i);</div><div class="line">	    <span class="keyword">if</span> (row != <span class="keyword">null</span>) &#123;</div><div class="line">		System.out.println(<span class="string">"reading line is "</span> + i);</div><div class="line">		<span class="keyword">int</span> lastCellNum = row.getLastCellNum();</div><div class="line">		System.out.println(<span class="string">"lastCellNum is "</span> + lastCellNum);</div><div class="line">		Cell cell = <span class="keyword">null</span>;</div><div class="line">		<span class="comment">// 创建泛型对象</span></div><div class="line">		Object newInstance = classObj.newInstance();</div><div class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; lastCellNum; j++) &#123;</div><div class="line">		    cell = row.getCell(j);</div><div class="line">		    String value = getValue(cell);</div><div class="line">		    <span class="keyword">if</span> (j == <span class="number">0</span>) &#123;</div><div class="line">			Method method = beanMehtodList.get(<span class="number">4</span>);</div><div class="line">			method.invoke(newInstance, value);</div><div class="line">		    &#125;</div><div class="line">		&#125;</div><div class="line">		dataList.add((E) newInstance);</div><div class="line">	    &#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> dataList;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Sheet <span class="title">getSheetByNum</span><span class="params">(Workbook book, <span class="keyword">int</span> number)</span> </span>&#123;</div><div class="line">	Sheet sheet = <span class="keyword">null</span>;</div><div class="line">	<span class="keyword">try</span> &#123;</div><div class="line">	    sheet = book.getSheetAt(number);</div><div class="line">	    <span class="comment">// if(sheet == null)&#123;</span></div><div class="line">	    <span class="comment">// sheet = book.createSheet("Sheet"+number);</span></div><div class="line">	    <span class="comment">// &#125;</span></div><div class="line">	&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">	    <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e.getMessage());</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> sheet;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Workbook <span class="title">getExcelWorkbook</span><span class="params">(String filePath)</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line">	Workbook book = <span class="keyword">null</span>;</div><div class="line">	File file = <span class="keyword">null</span>;</div><div class="line">	FileInputStream fis = <span class="keyword">null</span>;</div><div class="line"></div><div class="line">	<span class="keyword">try</span> &#123;</div><div class="line">	    file = <span class="keyword">new</span> File(filePath); <span class="comment">// filePath:E:/f/t.xls</span></div><div class="line">	    <span class="keyword">if</span> (!file.exists()) &#123;</div><div class="line">		<span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"文件不存在"</span>);</div><div class="line">	    &#125; <span class="keyword">else</span> &#123;</div><div class="line">		fis = <span class="keyword">new</span> FileInputStream(file);</div><div class="line">		book = WorkbookFactory.create(fis);</div><div class="line">	    &#125;</div><div class="line">	&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">	    <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e.getMessage());</div><div class="line">	&#125; <span class="keyword">finally</span> &#123;</div><div class="line">	    <span class="keyword">if</span> (fis != <span class="keyword">null</span>) &#123;</div><div class="line">		fis.close();</div><div class="line">	    &#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> book;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getValue</span><span class="params">(Cell hssfCell)</span> </span>&#123;</div><div class="line">	<span class="keyword">if</span> (hssfCell.getCellType() == hssfCell.CELL_TYPE_BOOLEAN) &#123;</div><div class="line">	    <span class="comment">// 返回布尔类型的值</span></div><div class="line">	    <span class="keyword">return</span> String.valueOf(hssfCell.getBooleanCellValue());</div><div class="line">	&#125; <span class="keyword">else</span> <span class="keyword">if</span> (hssfCell.getCellType() == hssfCell.CELL_TYPE_NUMERIC) &#123;</div><div class="line">	    <span class="comment">// 返回数值类型的值</span></div><div class="line">	    Object inputValue = <span class="keyword">null</span>;<span class="comment">// 单元格值</span></div><div class="line">	    Long longVal = Math.round(hssfCell.getNumericCellValue());</div><div class="line">	    Double doubleVal = hssfCell.getNumericCellValue();</div><div class="line">	    <span class="keyword">if</span> (Double.parseDouble(longVal + <span class="string">".0"</span>) == doubleVal) &#123; <span class="comment">// 判断是否含有小数位.0</span></div><div class="line">		inputValue = longVal;</div><div class="line">	    &#125; <span class="keyword">else</span> &#123;</div><div class="line">		inputValue = doubleVal;</div><div class="line">	    &#125;</div><div class="line">	    DecimalFormat df = <span class="keyword">new</span> DecimalFormat(<span class="string">"#.####"</span>); <span class="comment">// 格式化为四位小数，按自己需求选择；</span></div><div class="line">	    <span class="keyword">return</span> String.valueOf(df.format(inputValue)); <span class="comment">// 返回String类型</span></div><div class="line">	&#125; <span class="keyword">else</span> &#123;</div><div class="line">	    <span class="comment">// 返回字符串类型的值</span></div><div class="line">	    <span class="keyword">return</span> String.valueOf(hssfCell.getStringCellValue());</div><div class="line">	&#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">imporDataFromExcel</span><span class="params">(Map&lt;String, Object&gt; param)</span> </span>&#123;</div><div class="line">	String file = <span class="string">"E:/f/t.xls"</span>;</div><div class="line">	StationRegister stationRegister = <span class="keyword">new</span> StationRegister();</div><div class="line">	ReadExcelToList&lt;StationRegister&gt; readExcelToList = <span class="keyword">new</span> ReadExcelToList&lt;StationRegister&gt;();</div><div class="line">	List&lt;StationRegister&gt; list = <span class="keyword">null</span>;</div><div class="line">	<span class="keyword">try</span> &#123;</div><div class="line">	    <span class="keyword">try</span> &#123;</div><div class="line">			list = readExcelToList.getList(file, stationRegister.getClass());</div><div class="line">	    &#125; <span class="keyword">catch</span> (IllegalArgumentException e) &#123;</div><div class="line">			e.printStackTrace();</div><div class="line">	    &#125; <span class="keyword">catch</span> (InstantiationException e) &#123;</div><div class="line">			e.printStackTrace();</div><div class="line">	    &#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</div><div class="line">			e.printStackTrace();</div><div class="line">	    &#125; <span class="keyword">catch</span> (InvocationTargetException e) &#123;</div><div class="line">			e.printStackTrace();</div><div class="line">	    &#125;</div><div class="line">	&#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">	    e.printStackTrace();</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="java导出为-xlsx或者xls"><a href="#java导出为-xlsx或者xls" class="headerlink" title="java导出为.xlsx或者xls"></a>java导出为.xlsx或者xls</h3><p>导出.xlsx<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.io.File;</div><div class="line"><span class="keyword">import</span> java.io.FileOutputStream;</div><div class="line"><span class="keyword">import</span> org.apache.poi.hssf.util.HSSFColor;</div><div class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.Cell;</div><div class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.CellStyle;</div><div class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.Font;</div><div class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.Row;</div><div class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.Sheet;</div><div class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.Workbook;</div><div class="line"><span class="keyword">import</span> org.apache.poi.ss.util.CellRangeAddress;</div><div class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFWorkbook;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * <span class="doctag">@ClassName</span> ReadDataToXlsx2</div><div class="line"> * <span class="doctag">@Description</span> 导出excel.xlsx格式</div><div class="line"> * <span class="doctag">@Author</span> youtanzhi</div><div class="line"> * <span class="doctag">@Date</span> 2016年12月27日 上午10:48:56</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ReadDataToXlsx2</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">// 存储路径</span></div><div class="line">    <span class="keyword">private</span> String excelPath = <span class="string">"D:/data.xlsx"</span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">	ReadDataToXlsx2 excel = <span class="keyword">new</span> ReadDataToXlsx2();</div><div class="line">	<span class="keyword">if</span> (excel.createExcelFile()) &#123;</div><div class="line">	    System.out.println(<span class="string">"data.xlsx is created successfully."</span>);</div><div class="line">	&#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">createExcelFile</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">boolean</span> isCreateSuccess = <span class="keyword">false</span>;</div><div class="line">	Workbook workbook = <span class="keyword">null</span>;</div><div class="line">	<span class="keyword">try</span> &#123;</div><div class="line">	    workbook = <span class="keyword">new</span> XSSFWorkbook();</div><div class="line">	&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">	    System.out.println(<span class="string">"It cause Error on CREATING excel workbook: "</span>);</div><div class="line">	    e.printStackTrace();</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span> (workbook != <span class="keyword">null</span>) &#123;</div><div class="line">	    Sheet sheet = workbook.createSheet(Constants.SHEETNAME);</div><div class="line">	    <span class="comment">// 合并单元格(表格标题)</span></div><div class="line">	    CellRangeAddress cra = <span class="keyword">new</span> CellRangeAddress(<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">10</span>); <span class="comment">// 合并单元格的首行、最后一行、首列、最后一列</span></div><div class="line">	    sheet.addMergedRegion(cra);</div><div class="line">	    Row row_t = sheet.createRow(<span class="number">0</span>);</div><div class="line">	    Cell cell_t = row_t.createCell(<span class="number">0</span>);</div><div class="line">	    cell_t.setCellValue(<span class="string">"When you're right , no one remembers, when you're wrong ,no one forgets ."</span>);</div><div class="line">	    <span class="comment">// 字段标题</span></div><div class="line">	    Row row0 = sheet.createRow(Constants.TITELHIGHT);</div><div class="line">	    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">11</span>; i++) &#123;</div><div class="line">		Cell cell_1 = row0.createCell(i, Cell.CELL_TYPE_STRING);</div><div class="line">		CellStyle style = getStyle(workbook);</div><div class="line">		cell_1.setCellStyle(style);</div><div class="line">		cell_1.setCellValue(<span class="string">"HELLO"</span> + i + <span class="string">"Column"</span>);</div><div class="line">		sheet.autoSizeColumn(i);</div><div class="line">	    &#125;</div><div class="line">	    <span class="comment">// 表格内容</span></div><div class="line">	    <span class="keyword">for</span> (<span class="keyword">int</span> rowNum = Constants.TITELHIGHT + <span class="number">1</span>; rowNum &lt; <span class="number">200</span>; rowNum++) &#123;</div><div class="line">		Row row = sheet.createRow(rowNum);</div><div class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">11</span>; i++) &#123;</div><div class="line">		    Cell cell = row.createCell(i, Cell.CELL_TYPE_STRING);</div><div class="line">		    cell.setCellValue(<span class="string">"cell"</span> + String.valueOf(rowNum + <span class="number">1</span>) + String.valueOf(i + <span class="number">1</span>));</div><div class="line">		&#125;</div><div class="line">	    &#125;</div><div class="line">	    <span class="keyword">try</span> &#123;</div><div class="line">		FileOutputStream outputStream = <span class="keyword">new</span> FileOutputStream(excelPath);</div><div class="line">		workbook.write(outputStream);</div><div class="line">		outputStream.flush();</div><div class="line">		outputStream.close();</div><div class="line">		isCreateSuccess = <span class="keyword">true</span>;</div><div class="line">	    &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">		System.out.println(<span class="string">"It cause Error on WRITTING excel workbook: "</span>);</div><div class="line">		e.printStackTrace();</div><div class="line">	    &#125;</div><div class="line">	&#125;</div><div class="line">	File sss = <span class="keyword">new</span> File(excelPath);</div><div class="line">	System.out.println(sss.getAbsolutePath());</div><div class="line">	<span class="keyword">return</span> isCreateSuccess;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> CellStyle <span class="title">getStyle</span><span class="params">(Workbook workbook)</span> </span>&#123;</div><div class="line">	CellStyle style = workbook.createCellStyle();</div><div class="line">	style.setAlignment(CellStyle.ALIGN_CENTER);</div><div class="line">	style.setVerticalAlignment(CellStyle.VERTICAL_CENTER);</div><div class="line">	<span class="comment">// 设置单元格字体</span></div><div class="line">	Font headerFont = workbook.createFont(); <span class="comment">// 字体</span></div><div class="line">	headerFont.setFontHeightInPoints((<span class="keyword">short</span>) <span class="number">14</span>);</div><div class="line">	headerFont.setColor(HSSFColor.RED.index);</div><div class="line">	headerFont.setFontName(<span class="string">"宋体"</span>);</div><div class="line">	style.setFont(headerFont);</div><div class="line">	style.setWrapText(<span class="keyword">true</span>);</div><div class="line"></div><div class="line">	<span class="comment">// 设置单元格边框及颜色</span></div><div class="line">	style.setBorderBottom((<span class="keyword">short</span>) <span class="number">1</span>);</div><div class="line">	style.setBorderLeft((<span class="keyword">short</span>) <span class="number">1</span>);</div><div class="line">	style.setBorderRight((<span class="keyword">short</span>) <span class="number">1</span>);</div><div class="line">	style.setBorderTop((<span class="keyword">short</span>) <span class="number">1</span>);</div><div class="line">	style.setWrapText(<span class="keyword">true</span>);</div><div class="line">	<span class="keyword">return</span> style;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getExcelPath</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">return</span> <span class="keyword">this</span>.excelPath;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setExcelPath</span><span class="params">(String excelPath)</span> </span>&#123;</div><div class="line">	<span class="keyword">this</span>.excelPath = excelPath;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@ClassName</span> Constants</div><div class="line">     * <span class="doctag">@Description</span> 表格属性常量</div><div class="line">     * <span class="doctag">@Author</span> youtanzhi</div><div class="line">     * <span class="doctag">@Date</span> 2016年12月27日 上午10:59:06</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Constants</span> </span>&#123;</div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String SHEETNAME = <span class="string">"标题1"</span>; <span class="comment">// 表格1标题</span></div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TITELHIGHT = <span class="number">2</span>; <span class="comment">// 标题高度</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>导出.xls</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> java.io.OutputStream;</div><div class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</div><div class="line"><span class="keyword">import</span> java.util.Date;</div><div class="line"><span class="keyword">import</span> java.util.LinkedHashMap;</div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"><span class="keyword">import</span> java.util.Set;</div><div class="line"><span class="keyword">import</span> java.util.Map.Entry;</div><div class="line"><span class="keyword">import</span> org.apache.poi.hssf.usermodel.HSSFCell;</div><div class="line"><span class="keyword">import</span> org.apache.poi.hssf.usermodel.HSSFRow;</div><div class="line"><span class="keyword">import</span> org.apache.poi.hssf.usermodel.HSSFSheet;</div><div class="line"><span class="keyword">import</span> org.apache.poi.hssf.usermodel.HSSFWorkbook;</div><div class="line"><span class="keyword">import</span> org.apache.poi.hssf.util.CellRangeAddress;</div><div class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.CellStyle;</div><div class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.Font;</div><div class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.IndexedColors;</div><div class="line"></div><div class="line"><span class="meta">@SuppressWarnings</span>(<span class="string">"deprecation"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExcelUtil</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> HSSFWorkbook wb;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> CellStyle titleStyle; <span class="comment">// 标题行样式</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Font titleFont; <span class="comment">// 标题行字体</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> CellStyle dateStyle; <span class="comment">// 日期行样式</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Font dateFont; <span class="comment">// 日期行字体</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> CellStyle headStyle; <span class="comment">// 表头行样式</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Font headFont; <span class="comment">// 表头行字体</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> CellStyle contentStyle; <span class="comment">// 内容行样式</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Font contentFont; <span class="comment">// 内容行字体</span></div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@throws</span> IllegalAccessException</div><div class="line">     * <span class="doctag">@throws</span> IllegalArgumentException</div><div class="line">     * <span class="doctag">@Description</span>: 将Map里的集合对象数据输出Excel数据流</div><div class="line">	 * ExportSetInfo实体类包含表格名称、字段、表格数据</div><div class="line">     */</div><div class="line">    <span class="meta">@SuppressWarnings</span>(&#123; <span class="string">"unchecked"</span> &#125;)</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">export2Excel</span><span class="params">(ExportSetInfo setInfo)</span> </span></div><div class="line">	    <span class="keyword">throws</span> IOException, IllegalArgumentException, IllegalAccessException &#123;</div><div class="line">	init();</div><div class="line">	Set&lt;Entry&lt;String, List&gt;&gt; set = setInfo.getObjsMap().entrySet();</div><div class="line">	String[] sheetNames = <span class="keyword">new</span> String[setInfo.getObjsMap().size()];</div><div class="line">	<span class="keyword">int</span> sheetNameNum = <span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span> (Entry&lt;String, List&gt; entry : set) &#123;</div><div class="line">	    sheetNames[sheetNameNum] = entry.getKey();</div><div class="line">	    sheetNameNum++;</div><div class="line">	&#125;</div><div class="line">	HSSFSheet[] sheets = getSheets(setInfo.getObjsMap().size(), sheetNames);</div><div class="line">	<span class="keyword">int</span> sheetNum = <span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span> (Entry&lt;String, List&gt; entry : set) &#123;</div><div class="line">	    <span class="comment">// Sheet</span></div><div class="line">	    List objs = entry.getValue();</div><div class="line">	    <span class="comment">// 标题行</span></div><div class="line">	    createTableTitleRow(setInfo, sheets, sheetNum);</div><div class="line">	    <span class="comment">// 日期行</span></div><div class="line">	    createTableDateRow(setInfo, sheets, sheetNum);</div><div class="line">	    <span class="comment">// 表头</span></div><div class="line">	    creatTableHeadRow(setInfo, sheets, sheetNum);</div><div class="line">	    <span class="comment">// 表体</span></div><div class="line">	    String[] fieldNames = setInfo.getFieldNames().get(sheetNum);</div><div class="line">	    <span class="keyword">int</span> rowNum = <span class="number">3</span>;</div><div class="line">	    <span class="keyword">for</span> (Object obj : objs) &#123;</div><div class="line">		HSSFRow contentRow = sheets[sheetNum].createRow(rowNum);</div><div class="line">		contentRow.setHeight((<span class="keyword">short</span>) <span class="number">300</span>);</div><div class="line">		HSSFCell[] cells = getCells(contentRow, setInfo.getFieldNames().get(sheetNum).length);</div><div class="line">		<span class="keyword">int</span> cellNum = <span class="number">1</span>; <span class="comment">// 去掉一列序号，因此从1开始</span></div><div class="line">		<span class="keyword">if</span> (fieldNames != <span class="keyword">null</span>) &#123;</div><div class="line">		    <span class="keyword">for</span> (<span class="keyword">int</span> num = <span class="number">0</span>; num &lt; fieldNames.length; num++) &#123;</div><div class="line">			Object value = ReflectionUtils.invokeGetterMethod(obj, fieldNames[num]);</div><div class="line">			cells[cellNum].setCellValue(value == <span class="keyword">null</span> ? <span class="string">""</span> : value.toString());</div><div class="line">			cellNum++;</div><div class="line">		    &#125;</div><div class="line">		&#125;</div><div class="line">		rowNum++;</div><div class="line">	    &#125;</div><div class="line">	    adjustColumnSize(sheets, sheetNum, fieldNames); <span class="comment">// 自动调整列宽</span></div><div class="line">	    sheetNum++;</div><div class="line">	&#125;</div><div class="line">	wb.write(setInfo.getOut());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@Description</span>: 初始化</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</div><div class="line">	wb = <span class="keyword">new</span> HSSFWorkbook();</div><div class="line"></div><div class="line">	titleFont = wb.createFont();</div><div class="line">	titleStyle = wb.createCellStyle();</div><div class="line">	dateStyle = wb.createCellStyle();</div><div class="line">	dateFont = wb.createFont();</div><div class="line">	headStyle = wb.createCellStyle();</div><div class="line">	headFont = wb.createFont();</div><div class="line">	contentStyle = wb.createCellStyle();</div><div class="line">	contentFont = wb.createFont();</div><div class="line"></div><div class="line">	initTitleCellStyle();</div><div class="line">	initTitleFont();</div><div class="line">	initDateCellStyle();</div><div class="line">	initDateFont();</div><div class="line">	initHeadCellStyle();</div><div class="line">	initHeadFont();</div><div class="line">	initContentCellStyle();</div><div class="line">	initContentFont();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@Description</span>: 自动调整列宽</div><div class="line">     */</div><div class="line">    <span class="meta">@SuppressWarnings</span>(<span class="string">"unused"</span>)</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">adjustColumnSize</span><span class="params">(HSSFSheet[] sheets, <span class="keyword">int</span> sheetNum, String[] fieldNames)</span> </span>&#123;</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; fieldNames.length + <span class="number">1</span>; i++) &#123;</div><div class="line">	    sheets[sheetNum].autoSizeColumn(i, <span class="keyword">true</span>);</div><div class="line">	&#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@Description</span>: 创建标题行(需合并单元格)</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">createTableTitleRow</span><span class="params">(ExportSetInfo setInfo, HSSFSheet[] sheets, <span class="keyword">int</span> sheetNum)</span> </span>&#123;</div><div class="line">	CellRangeAddress titleRange = <span class="keyword">new</span> CellRangeAddress(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, setInfo.getFieldNames().get(sheetNum).length);</div><div class="line">	sheets[sheetNum].addMergedRegion(titleRange);</div><div class="line">	HSSFRow titleRow = sheets[sheetNum].createRow(<span class="number">0</span>);</div><div class="line">	titleRow.setHeight((<span class="keyword">short</span>) <span class="number">800</span>);</div><div class="line">	HSSFCell titleCell = titleRow.createCell(<span class="number">0</span>);</div><div class="line">	titleCell.setCellStyle(titleStyle);</div><div class="line">	titleCell.setCellValue(setInfo.getTitles()[sheetNum]);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@Description</span>: 创建日期行(需合并单元格)</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">createTableDateRow</span><span class="params">(ExportSetInfo setInfo, HSSFSheet[] sheets, <span class="keyword">int</span> sheetNum)</span> </span>&#123;</div><div class="line">	CellRangeAddress dateRange = <span class="keyword">new</span> CellRangeAddress(<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, setInfo.getFieldNames().get(sheetNum).length);</div><div class="line">	sheets[sheetNum].addMergedRegion(dateRange);</div><div class="line">	HSSFRow dateRow = sheets[sheetNum].createRow(<span class="number">1</span>);</div><div class="line">	dateRow.setHeight((<span class="keyword">short</span>) <span class="number">350</span>);</div><div class="line">	HSSFCell dateCell = dateRow.createCell(<span class="number">0</span>);</div><div class="line">	dateCell.setCellStyle(dateStyle);</div><div class="line">	dateCell.setCellValue(<span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd"</span>).format(<span class="keyword">new</span> Date()));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@Description</span>: 创建表头行(需合并单元格)</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">creatTableHeadRow</span><span class="params">(ExportSetInfo setInfo, HSSFSheet[] sheets, <span class="keyword">int</span> sheetNum)</span> </span>&#123;</div><div class="line">	<span class="comment">// 表头</span></div><div class="line">	HSSFRow headRow = sheets[sheetNum].createRow(<span class="number">2</span>);</div><div class="line">	headRow.setHeight((<span class="keyword">short</span>) <span class="number">350</span>);</div><div class="line">	<span class="comment">// 序号列</span></div><div class="line">	HSSFCell snCell = headRow.createCell(<span class="number">0</span>);</div><div class="line">	snCell.setCellStyle(headStyle);</div><div class="line">	snCell.setCellValue(<span class="string">"序号"</span>);</div><div class="line">	<span class="comment">// 列头名称</span></div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> num = <span class="number">1</span>, len = setInfo.getHeadNames().get(sheetNum).length; num &lt;= len; num++) &#123;</div><div class="line">	    HSSFCell headCell = headRow.createCell(num);</div><div class="line">	    headCell.setCellStyle(headStyle);</div><div class="line">	    headCell.setCellValue(setInfo.getHeadNames().get(sheetNum)[num - <span class="number">1</span>]);</div><div class="line">	&#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@Description</span>: 创建所有的Sheet</div><div class="line">     */</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> HSSFSheet[] getSheets(<span class="keyword">int</span> num, String[] names) &#123;</div><div class="line">	HSSFSheet[] sheets = <span class="keyword">new</span> HSSFSheet[num];</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; i++) &#123;</div><div class="line">	    sheets[i] = wb.createSheet(names[i]);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> sheets;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@Description</span>: 创建内容行的每一列(附加一列序号)</div><div class="line">     */</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> HSSFCell[] getCells(HSSFRow contentRow, <span class="keyword">int</span> num) &#123;</div><div class="line">	HSSFCell[] cells = <span class="keyword">new</span> HSSFCell[num + <span class="number">1</span>];</div><div class="line"></div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, len = cells.length; i &lt; len; i++) &#123;</div><div class="line">	    cells[i] = contentRow.createCell(i);</div><div class="line">	    cells[i].setCellStyle(contentStyle);</div><div class="line">	&#125;</div><div class="line">	<span class="comment">// 设置序号列值，因为出去标题行和日期行，所有-2</span></div><div class="line">	cells[<span class="number">0</span>].setCellValue(contentRow.getRowNum() - <span class="number">2</span>);</div><div class="line"></div><div class="line">	<span class="keyword">return</span> cells;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@Description</span>: 初始化标题行样式</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">initTitleCellStyle</span><span class="params">()</span> </span>&#123;</div><div class="line">	titleStyle.setAlignment(CellStyle.ALIGN_CENTER);</div><div class="line">	titleStyle.setVerticalAlignment(CellStyle.VERTICAL_CENTER);</div><div class="line">	titleStyle.setFont(titleFont);</div><div class="line">	titleStyle.setFillBackgroundColor(IndexedColors.SKY_BLUE.index);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@Description</span>: 初始化日期行样式</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">initDateCellStyle</span><span class="params">()</span> </span>&#123;</div><div class="line">	dateStyle.setAlignment(CellStyle.ALIGN_CENTER_SELECTION);</div><div class="line">	dateStyle.setVerticalAlignment(CellStyle.VERTICAL_CENTER);</div><div class="line">	dateStyle.setFont(dateFont);</div><div class="line">	dateStyle.setFillBackgroundColor(IndexedColors.SKY_BLUE.index);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@Description</span>: 初始化表头行样式</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">initHeadCellStyle</span><span class="params">()</span> </span>&#123;</div><div class="line">	headStyle.setAlignment(CellStyle.ALIGN_CENTER);</div><div class="line">	headStyle.setVerticalAlignment(CellStyle.VERTICAL_CENTER);</div><div class="line">	headStyle.setFont(headFont);</div><div class="line">	headStyle.setFillBackgroundColor(IndexedColors.YELLOW.index);</div><div class="line">	headStyle.setBorderTop(CellStyle.BORDER_MEDIUM);</div><div class="line">	headStyle.setBorderBottom(CellStyle.BORDER_THIN);</div><div class="line">	headStyle.setBorderLeft(CellStyle.BORDER_THIN);</div><div class="line">	headStyle.setBorderRight(CellStyle.BORDER_THIN);</div><div class="line">	headStyle.setTopBorderColor(IndexedColors.BLUE.index);</div><div class="line">	headStyle.setBottomBorderColor(IndexedColors.BLUE.index);</div><div class="line">	headStyle.setLeftBorderColor(IndexedColors.BLUE.index);</div><div class="line">	headStyle.setRightBorderColor(IndexedColors.BLUE.index);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@Description</span>: 初始化内容行样式</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">initContentCellStyle</span><span class="params">()</span> </span>&#123;</div><div class="line">	contentStyle.setAlignment(CellStyle.ALIGN_CENTER);</div><div class="line">	contentStyle.setVerticalAlignment(CellStyle.VERTICAL_CENTER);</div><div class="line">	contentStyle.setFont(contentFont);</div><div class="line">	contentStyle.setBorderTop(CellStyle.BORDER_THIN);</div><div class="line">	contentStyle.setBorderBottom(CellStyle.BORDER_THIN);</div><div class="line">	contentStyle.setBorderLeft(CellStyle.BORDER_THIN);</div><div class="line">	contentStyle.setBorderRight(CellStyle.BORDER_THIN);</div><div class="line">	contentStyle.setTopBorderColor(IndexedColors.BLUE.index);</div><div class="line">	contentStyle.setBottomBorderColor(IndexedColors.BLUE.index);</div><div class="line">	contentStyle.setLeftBorderColor(IndexedColors.BLUE.index);</div><div class="line">	contentStyle.setRightBorderColor(IndexedColors.BLUE.index);</div><div class="line">	contentStyle.setWrapText(<span class="keyword">true</span>); <span class="comment">// 字段换行</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@Description</span>: 初始化标题行字体</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">initTitleFont</span><span class="params">()</span> </span>&#123;</div><div class="line">	titleFont.setFontName(<span class="string">"华文楷体"</span>);</div><div class="line">	titleFont.setFontHeightInPoints((<span class="keyword">short</span>) <span class="number">20</span>);</div><div class="line">	titleFont.setBoldweight(Font.BOLDWEIGHT_BOLD);</div><div class="line">	titleFont.setCharSet(Font.DEFAULT_CHARSET);</div><div class="line">	titleFont.setColor(IndexedColors.BLUE_GREY.index);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@Description</span>: 初始化日期行字体</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">initDateFont</span><span class="params">()</span> </span>&#123;</div><div class="line">	dateFont.setFontName(<span class="string">"隶书"</span>);</div><div class="line">	dateFont.setFontHeightInPoints((<span class="keyword">short</span>) <span class="number">10</span>);</div><div class="line">	dateFont.setBoldweight(Font.BOLDWEIGHT_BOLD);</div><div class="line">	dateFont.setCharSet(Font.DEFAULT_CHARSET);</div><div class="line">	dateFont.setColor(IndexedColors.BLUE_GREY.index);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@Description</span>: 初始化表头行字体</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">initHeadFont</span><span class="params">()</span> </span>&#123;</div><div class="line">	headFont.setFontName(<span class="string">"宋体"</span>);</div><div class="line">	headFont.setFontHeightInPoints((<span class="keyword">short</span>) <span class="number">10</span>);</div><div class="line">	headFont.setBoldweight(Font.BOLDWEIGHT_BOLD);</div><div class="line">	headFont.setCharSet(Font.DEFAULT_CHARSET);</div><div class="line">	headFont.setColor(IndexedColors.BLUE_GREY.index);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@Description</span>: 初始化内容行字体</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">initContentFont</span><span class="params">()</span> </span>&#123;</div><div class="line">	contentFont.setFontName(<span class="string">"宋体"</span>);</div><div class="line">	contentFont.setFontHeightInPoints((<span class="keyword">short</span>) <span class="number">10</span>);</div><div class="line">	contentFont.setBoldweight(Font.BOLDWEIGHT_NORMAL);</div><div class="line">	contentFont.setCharSet(Font.DEFAULT_CHARSET);</div><div class="line">	contentFont.setColor(IndexedColors.BLUE_GREY.index);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@Description</span>: 封装Excel导出的设置信息</div><div class="line">     * <span class="doctag">@author</span>: 谭又中</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ExportSetInfo</span> </span>&#123;</div><div class="line">	<span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</div><div class="line">	<span class="keyword">private</span> LinkedHashMap&lt;String, List&gt; objsMap;</div><div class="line"></div><div class="line">	<span class="keyword">private</span> String[] titles;</div><div class="line"></div><div class="line">	<span class="keyword">private</span> List&lt;String[]&gt; headNames;</div><div class="line"></div><div class="line">	<span class="keyword">private</span> List&lt;String[]&gt; fieldNames;</div><div class="line"></div><div class="line">	<span class="keyword">private</span> OutputStream out;</div><div class="line"></div><div class="line">	<span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</div><div class="line">	<span class="function"><span class="keyword">public</span> LinkedHashMap&lt;String, List&gt; <span class="title">getObjsMap</span><span class="params">()</span> </span>&#123;</div><div class="line">	    <span class="keyword">return</span> objsMap;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * <span class="doctag">@param</span> objMap</div><div class="line">	 *            导出数据</div><div class="line">	 * </div><div class="line">	 *            泛型 String : 代表sheet名称 List : 代表单个sheet里的所有行数据</div><div class="line">	 */</div><div class="line">	<span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setObjsMap</span><span class="params">(LinkedHashMap&lt;String, List&gt; objsMap)</span> </span>&#123;</div><div class="line">	    <span class="keyword">this</span>.objsMap = objsMap;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">public</span> List&lt;String[]&gt; getFieldNames() &#123;</div><div class="line">	    <span class="keyword">return</span> fieldNames;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * <span class="doctag">@param</span> clazz</div><div class="line">	 *            对应每个sheet里的每行数据的对象的属性名称</div><div class="line">	 */</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFieldNames</span><span class="params">(List&lt;String[]&gt; fieldNames)</span> </span>&#123;</div><div class="line">	    <span class="keyword">this</span>.fieldNames = fieldNames;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">public</span> String[] getTitles() &#123;</div><div class="line">	    <span class="keyword">return</span> titles;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * <span class="doctag">@param</span> titles</div><div class="line">	 *            对应每个sheet里的标题，即顶部大字</div><div class="line">	 */</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTitles</span><span class="params">(String[] titles)</span> </span>&#123;</div><div class="line">	    <span class="keyword">this</span>.titles = titles;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">public</span> List&lt;String[]&gt; getHeadNames() &#123;</div><div class="line">	    <span class="keyword">return</span> headNames;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * <span class="doctag">@param</span> headNames</div><div class="line">	 *            对应每个页签的表头的每一列的名称</div><div class="line">	 */</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHeadNames</span><span class="params">(List&lt;String[]&gt; headNames)</span> </span>&#123;</div><div class="line">	    <span class="keyword">this</span>.headNames = headNames;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> OutputStream <span class="title">getOut</span><span class="params">()</span> </span>&#123;</div><div class="line">	    <span class="keyword">return</span> out;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * <span class="doctag">@param</span> out</div><div class="line">	 *            Excel数据将输出到该输出流</div><div class="line">	 */</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOut</span><span class="params">(OutputStream out)</span> </span>&#123;</div><div class="line">	    <span class="keyword">this</span>.out = out;</div><div class="line">	&#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[关于mysql关键字between and，>=<，in，or性能及优化]]></title>
      <url>https://volc1605.github.io/2016/12/22/%E5%85%B3%E4%BA%8Emysql%E5%85%B3%E9%94%AE%E5%AD%97between-and%EF%BC%8C-%EF%BC%8Cin%EF%BC%8Cor%E6%80%A7%E8%83%BD%E5%8F%8A%E4%BC%98%E5%8C%96/</url>
      <content type="html"><![CDATA[<h3 id="关于IN关键字的效率问题"><a href="#关于IN关键字的效率问题" class="headerlink" title="关于IN关键字的效率问题"></a>关于IN关键字的效率问题</h3><a id="more"></a>
<p>查询表<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select count(1) from tk_plan_wait;</div><div class="line">+----------+</div><div class="line">| count(1) |</div><div class="line">+----------+</div><div class="line">|    20312 |</div><div class="line">+----------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<p>这个表的总记录数为20312行</p>
<p>查询表索引<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">mysql&gt; show index from tk_plan_wait;</div><div class="line">+--------------+------------+-----------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</div><div class="line">| Table        | Non_unique | Key_name        | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment |</div><div class="line">+--------------+------------+-----------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</div><div class="line">| tk_plan_wait |          0 | PRIMARY         |            1 | idx         | A         |       20703 |     NULL | NULL   |      | BTREE      |         |               |</div><div class="line">| tk_plan_wait |          0 | tk_plan_wait_pk |            1 | PLAN_NUM    | A         |       20703 |     NULL | NULL   |      | BTREE      |         |               |</div><div class="line">+--------------+------------+-----------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</div><div class="line">2 rows in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<p>由于索引PLAN_NUM字段是unique唯一类型，可以看到其散列程度（Cardinality）是非常高的，因此该索引是很有效的。<br>其中字段rows为1，只扫描了一行，含有索引其执行效率很高。  </p>
<blockquote>
<p>使用in关键字根据有索引字段查询  </p>
</blockquote>
<p>使用优化器EXPLAIN执行含有索引的sql请看执行情况<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; EXPLAIN SELECT * FROM `tk_plan_wait` WHERE PLAN_NUM in('367b069a-4f2c-4d6e-899a-9c9690760d19');</div><div class="line">+----+-------------+--------------+------------+-------+-----------------+-----------------+---------+-------+------+----------+-------+</div><div class="line">| id | select_type | table        | partitions | type  | possible_keys   | key             | key_len | ref   | rows | filtered | Extra |</div><div class="line">+----+-------------+--------------+------------+-------+-----------------+-----------------+---------+-------+------+----------+-------+</div><div class="line">|  1 | SIMPLE      | tk_plan_wait | NULL       | const | tk_plan_wait_pk | tk_plan_wait_pk | 152     | const |    1 |   100.00 | NULL  |</div><div class="line">+----+-------------+--------------+------------+-------+-----------------+-----------------+---------+-------+------+----------+-------+</div><div class="line">1 row in set, 1 warning (0.00 sec)</div></pre></td></tr></table></figure></p>
<p style="color:red"><br>其中字段rows为1，只扫描了一行，含有索引其执行效率很高。<br></p>

<blockquote>
<p>使用in关键字根据没有添加索引字段查询  </p>
</blockquote>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; EXPLAIN SELECT * FROM `tk_plan_wait` WHERE TASK_ARG1 in('t');</div><div class="line">+----+-------------+--------------+------------+------+---------------+------+---------+------+-------+----------+-------------+</div><div class="line">| id | select_type | table        | partitions | type | possible_keys | key  | key_len | ref  | rows  | filtered | Extra       |</div><div class="line">+----+-------------+--------------+------------+------+---------------+------+---------+------+-------+----------+-------------+</div><div class="line">|  1 | SIMPLE      | tk_plan_wait | NULL       | ALL  | NULL          | NULL | NULL    | NULL | 20703 |    10.00 | Using where |</div><div class="line">+----+-------------+--------------+------------+------+---------------+------+---------+------+-------+----------+-------------+</div><div class="line">1 row in set, 1 warning (0.00 sec)</div></pre></td></tr></table></figure>
<p></p><p style="color:red"><br>其中字段rows为20703，in在不使用含有索引字段查询的情况下是进行了全表扫描的。<br></p><br>待续…<br>参考：<a href="http://amao12580.github.io/post/2016/07/MySQL-in-operator-must-lead-to-full-scan/" target="_blank" rel="external">http://amao12580.github.io/post/2016/07/MySQL-in-operator-must-lead-to-full-scan/</a><p></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[memcache]]></title>
      <url>https://volc1605.github.io/2016/12/12/memcache/</url>
      <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>1.由于memcached是基于libevent的，因此需要安装libevent，libevent-devel<br><a id="more"></a><br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">yum</span> install  libevent libevent-devel -y</div></pre></td></tr></table></figure></p>
<p>下载：<br><a href="http://www.monkey.org/~provos/libevent-2.0.10-stable.tar.gz" target="_blank" rel="external">http://www.monkey.org/~provos/libevent-2.0.10-stable.tar.gz</a><br>2.解压<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">tar</span> zxvf libevent-2.0.10-stable.tar.gz</div></pre></td></tr></table></figure></p>
<p>3.进入目录<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">cd</span> libevent-2.0.10-stable</div></pre></td></tr></table></figure></p>
<p>4.切换到root<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">su</span></div></pre></td></tr></table></figure></p>
<p>5.安装gcc<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">yum</span> install gcc</div></pre></td></tr></table></figure></p>
<p>6.设置安装路径<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./configure -prefix=/usr</div></pre></td></tr></table></figure></p>
<p>7.编译<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">make</span></div></pre></td></tr></table></figure></p>
<p>8.安装<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">make</span> install</div></pre></td></tr></table></figure></p>
<p>9.测试libevent是否安装成功  </p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">ls -al /usr/lib | grep libevent</div><div class="line">lrwxrwxrwx 1 root root 21 11?? 12 17:38 libevent-1.2.so.1 -&gt; libevent-1.2.so.1.0.3</div><div class="line">-rwxr-xr-x 1 root root 263546 11?? 12 17:38 libevent-1.2.so.1.0.3</div><div class="line">-rw-r–r– 1 root root 454156 11?? 12 17:38 libevent.a</div><div class="line">-rwxr-xr-x 1 root root 811 11?? 12 17:38 libevent.la</div><div class="line">lrwxrwxrwx 1 root root 21 11?? 12 17:38 libevent.so -&gt; libevent-1.2.so.1.0.3</div></pre></td></tr></table></figure>
<p>还不错，都安装上了。<br>安装libevent参考：<br>    <a href="http://blog.csdn.net/zhangm168/article/details/6272801" target="_blank" rel="external">http://blog.csdn.net/zhangm168/article/details/6272801</a></p>
<p>10.安装gcc<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">yum</span> install gcc* make*</div></pre></td></tr></table></figure></p>
<p>11.下载memcache<br>    地址:<a href="http://www.danga.com/memcached/dist/memcached-1.2.0.tar.gz" target="_blank" rel="external">http://www.danga.com/memcached/dist/memcached-1.2.0.tar.gz</a><br>12.在/tmp解压memcache  </p>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">tar</span> zxvf memcached-1.4.33.tar.gz</div></pre></td></tr></table></figure>
<p>安装memcached，同时需要安装中指定libevent的安装位置：<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">cd /tmp</div><div class="line">tar zxvf memcached-1.4.33.tar.gz</div><div class="line">cd memcached-1.4.33.tar.gz</div><div class="line">./configure –with-libevent=/usr</div><div class="line">make</div><div class="line">make install</div></pre></td></tr></table></figure></p>
<p>如果中间出现报错，请仔细检查错误信息，按照错误信息来配置或者增加相应的库或者路径。<br>安装完成后会把memcached放到 /usr/local/bin/memcached ，<br>测试是否成功安装memcached：  </p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ls -al /usr/local/bin/mem*</div><div class="line">-rwxr-xr-x 1 root root 137986 11?? 12 17:39 /usr/local/bin/memcached</div><div class="line">-rwxr-xr-x 1 root root 140179 11?? 12 17:39 /usr/local/bin/memcached-debug</div></pre></td></tr></table></figure>
<p>13.启动memcache<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/local/bin/memcached -d -m 10 -u root -l 116.62.29.229 -p 12000 -c 256 -P /tmp/memcached.pid</div></pre></td></tr></table></figure></p>
<p>结束memcache<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">kill</span> cat /tmp/memcached.pid</div></pre></td></tr></table></figure></p>
<p>测试：<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">[root@localhost /]# telnet 192.168.141.64 12000</div><div class="line">Trying 192.168.141.64...</div><div class="line">Connected to 192.168.141.64 (192.168.141.64).</div><div class="line">Escape character is '^]'.</div><div class="line">set key1 0 60 4</div><div class="line">zhou</div><div class="line">STORED</div><div class="line">get key1</div><div class="line">VALUE key1 0 4</div><div class="line">zhou</div><div class="line">END</div></pre></td></tr></table></figure></p>
<p>退出：quit或者ctrl + ] 然后在按q就行了。</p>
<p>把Memcached服务加载到Linux的启动项中.万一机器断电系统重启.那么Memcached就会自动启动了.<br>假如启动Memcache的服务器端的命令为：  </p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/local/bin/memcached -d -m 10 -u root -l 192.168.141.64 -p 12000 -c 256 -P</div></pre></td></tr></table></figure>
<p>想开机自动启动的话，只需在/etc/rc.d/rc.local中加入一行，下面命令  </p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/local/memcached/bin/memcached -d -m 10 -p 12000 -u apache -c 256</div></pre></td></tr></table></figure>
<p>上面有些东西可以参考一下：即，ip不指定时，默认是本机，用户:最好选择是：apache 或 deamon<br>这样，也就是属于哪个用户的服务，由哪个用户启动。  </p>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">kill</span> -9 <span class="string">"进程号"</span></div></pre></td></tr></table></figure>
<p>参考<br>配置参考：<a href="http://blog.csdn.net/u013615806/article/details/51461759" target="_blank" rel="external">http://blog.csdn.net/u013615806/article/details/51461759</a><br>配置参考:<a href="http://www.itgo.me/a/x2750105529827921816/memcached" target="_blank" rel="external">http://www.itgo.me/a/x2750105529827921816/memcached</a>  </p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[linux安装JDK]]></title>
      <url>https://volc1605.github.io/2016/12/12/linux%E5%AE%89%E8%A3%85JDK/</url>
      <content type="html"><![CDATA[<h3 id="1-jdk安装"><a href="#1-jdk安装" class="headerlink" title="1 jdk安装"></a>1 jdk安装</h3><a id="more"></a>
<p>下载地址:<br>    <a href="http://www.oracle.com/technetwork/cn/java/javase/downloads/jdk8-downloads-2133151-zhs.html" target="_blank" rel="external">http://www.oracle.com/technetwork/cn/java/javase/downloads/jdk8-downloads-2133151-zhs.html</a><br>修改jdk中bin目录中的访问权限<br><!-- more --></p>
<p>chmod [who] [opt] [mode] 文件/目录名  </p>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">chmod</span> a+rwx java</div></pre></td></tr></table></figure>
<p>1.修改etc/profile文件，追加一下jdk配置并保存<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">export</span> JAVA_HOME=/usr/java/jdk1.6.0_45  </div><div class="line"><span class="attribute">export</span> JAVA_BIN=/usr/java/jdk1.6.0_45/bin  </div><div class="line"><span class="attribute">export</span> PATH=$PATH:$JAVA_HOME/bin  </div><div class="line"><span class="attribute">export</span> CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar  </div><div class="line"><span class="attribute">export</span> JAVA_HOME JAVA_BIN PATH CLASSPATH</div></pre></td></tr></table></figure></p>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">source</span> /etc/profile</div></pre></td></tr></table></figure>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">source</span> /etc/profile  # 刷新系统配置文件</div></pre></td></tr></table></figure>
<p>2.在这个目录下/usr/local/java/jdk1.7.0_71/bin/修改java文件权限<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">chmod</span>  777 java </div><div class="line"><span class="attribute">java</span> -version</div></pre></td></tr></table></figure></p>
<p>问题  </p>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">Error</span> occurred during initialization of VM  </div><div class="line"><span class="attribute">Could</span> not reserve enough space for object heap</div></pre></td></tr></table></figure>
<p>解决方法<br>    在tomcat的bin目录下，catalina.sh文件的tomcat内存参数配置过大，超过机器可用内存总数造成，修改到适当的值即可，修改的参数   为：JAVA_OPTS=”-Xms50m -Xmx60m”</p>
<h1 id="查看tomcat是否启动"><a href="#查看tomcat是否启动" class="headerlink" title="查看tomcat是否启动"></a>查看tomcat是否启动</h1><p>命令：ps -ef|grep java 或者 ps -aux | grep tomcat<br>如果出现一下情况说明tomcat已启用</p>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">root</span> 7010 1 0 Apr19 ? 00:30:13 /usr/local/java/bin/java -Djava.util.logging.config.file=/usr/local/tomcat/conf/logging.properties -Djava.awt.headless=true -Dfile.encoding=UTF-8 -server -Xms1024m -Xmx1024m -XX:NewSize=256m -XX:MaxNewSize=256m -XX:PermSize=256m -XX:MaxPermSize=256m -XX:+DisableExplicitGC -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Djava.endorsed.dirs=/usr/local/tomcat/endorsed -classpath /usr/local/tomcat/bin/bootstrap.jar -Dcatalina.base=/usr/local/tomcat -Dcatalina.home=/usr/local/tomcat -Djava.io.tmpdir=/usr/local/tomcat/temp org.apache.catalina.startup.Bootstrap start</div></pre></td></tr></table></figure>
<p>如果出现一下情况说明tomcat已停用<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">root</span> 7010 1 0 Apr19 ? 00:30:30<span class="meta"> [java]</span></div></pre></td></tr></table></figure></p>
<p>安装JDK和Tomcat参考<br>配置参考：<a href="http://blog.csdn.net/zhuying_linux/article/details/6583096/" target="_blank" rel="external">http://blog.csdn.net/zhuying_linux/article/details/6583096/</a><br>配置参考：<a href="http://www.jb51.net/article/85478.htm" target="_blank" rel="external">http://www.jb51.net/article/85478.htm</a>  </p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Dubbo+zookeeper]]></title>
      <url>https://volc1605.github.io/2016/12/12/DUBBO+ZOOKEEPER/</url>
      <content type="html"><![CDATA[<h1 id="安装zookeeper"><a href="#安装zookeeper" class="headerlink" title="安装zookeeper"></a>安装zookeeper</h1><p>1.下载安装包<br>下载地址：<a href="http://mirrors.hust.edu.cn/apache/zookeeper/zookeeper-3.4.6/" target="_blank" rel="external">http://mirrors.hust.edu.cn/apache/zookeeper/zookeeper-3.4.6/</a><br><a id="more"></a><br>在/webapp下解压安装文件<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">tar</span> -xzvf zookeeper-3.4.5.tar.gz</div></pre></td></tr></table></figure></p>
<p>/webapp/zookeeper-3.4.5下创建logs文件夹<br>2.zookeeper的环境变量的配置  </p>
<p>在/etc/profile文件中加入如下的内容：  </p>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#set zookeeper environment</span></div><div class="line"><span class="attribute">export</span> ZOOKEEPER_HOME=/home/haduser/zookeeper/zookeeper-3.4.5</div><div class="line"><span class="attribute">export</span> PATH=$PATH:$ZOOKEEPER_HOME/bin:$ZOOKEEPER_HOME/conf</div></pre></td></tr></table></figure>
<p>3.集群部署<br>    在Zookeeper集群环境下只要一半以上的机器正常启动了，那么Zookeeper服务将是可用的。因此，集群上部署Zookeeper最好使用奇数台机器，这样如果有5台机器，只要3台正常工作则服务将正常使用。<br>下面我们将对Zookeeper的配置文件的参数进行设置：</p>
<p>进入zookeeper-3.4.5/conf</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$:cp zoo_sample.cfg zoo.cfg</div><div class="line">$:vim zoo.cfg</div></pre></td></tr></table></figure>
<p><img src="https://volc1605.github.io/images/DUBBO+ZOOKEEPER/1.png" alt="1">   </p>
<p>注意上图的配置中master，slave1分别为主机名，具体的对应的主机可参见之前的Hadoop的安装与配置的博文<br>在上面的配置文件中”server.id=host:port:port”中的第一个port是从机器（follower）连接到主机器（leader）的端口号，第二个port是进行leadership选举的端口号。  </p>
<p>接下来在dataDir所指定的目录下创建一个文件名为myid的文件，文件中的内容只有一行，为本主机对应的id值，也就是上图中server.id中的id。例如：在服务器1中的myid的内容应该写入1。</p>
<p>4.远程复制分发安装文件  </p>
<p>接下来将上面的安装文件拷贝到集群中的其他机器上对应的目录下：<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">haduser</span>@master:~/zookeeper$ scp -r zookeeper-3.4.5/ slave1:/home/haduser/zookeeper/zookeeper-3.4.5  </div><div class="line"><span class="attribute">haduser</span>@master:~/zookeeper$ scp -r zookeeper-3.4.5/ slave2:/home/haduser/zookeeper/zookeeper-3.4.5</div></pre></td></tr></table></figure></p>
<p>拷贝完成后修改对应的机器上的myid。例如修改slave1中的myid如下：<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">haduser</span>@slave1:~/zookeeper/zookeeper-3.4.5$ echo <span class="string">"2"</span> &gt; data/myid  </div><div class="line"><span class="attribute">haduser</span>@slave1:~/zookeeper/zookeeper-3.4.5$ cat data/myid</div></pre></td></tr></table></figure></p>
<p>内容为：2    </p>
<p>5.启动ZooKeeper集群<br>    在ZooKeeper集群的每个结点上，执行启动ZooKeeper服务的脚本，如下所示：<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">haduser</span>@master:~/zookeeper/zookeeper-3.4.5$ bin/zkServer.sh start</div><div class="line"><span class="attribute">haduser</span>@slave1:~/zookeeper/zookeeper-3.4.5$ bin/zkServer.sh start</div><div class="line"><span class="attribute">haduser</span>@slave2:~/zookeeper/zookeeper-3.4.5$ bin/zkServer.sh start</div></pre></td></tr></table></figure></p>
<p><img src="https://volc1605.github.io/images/DUBBO+ZOOKEEPER/2.png" alt="2"><br>其中，QuorumPeerMain是zookeeper进程，启动正常。<br>如上依次启动了所有机器上的Zookeeper之后可以通过ZooKeeper的脚本来查看启动状态，包括集群中各个结点的角色（或是Leader，或是Follower），如下所示，是在ZooKeeper集群中的每个结点上查询的结果：</p>
<p><img src="https://volc1605.github.io/images/DUBBO+ZOOKEEPER/3.png" alt="3"><br>通过上面状态查询结果可见，slave1是集群的Leader，其余的两个结点是Follower。  </p>
<p>另外，可以通过客户端脚本，连接到ZooKeeper集群上。对于客户端来说，ZooKeeper是一个整体（ensemble），连接到ZooKeeper集群实际上感觉在独享整个集群的服务，所以，你可以在任何一个结点上建立到服务集群的连接，例如：<br>查看是否安装启动成功<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">bin</span>/zkCli.sh -server 116.62.2.289:2181</div></pre></td></tr></table></figure></p>
<p><img src="https://volc1605.github.io/images/DUBBO+ZOOKEEPER/4.png" alt="4"> </p>
<p>脚本启动<br>脚本内容：<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">aaa</span>=` ps aux| grep <span class="string">"/webapp/zookeeper"</span> | grep -v grep|awk '&#123;print <span class="number">$2</span>&#125;'`</div><div class="line"></div><div class="line"><span class="attribute">if</span><span class="meta"> [ "$aaa" = "" ];</span></div><div class="line">then</div><div class="line">  (/webapp/zookeeper-3.4.5/bin/zkServer.sh start) &amp;&amp; (echo "Start zookeeper  Service  Successful!") || (echo "Start zookeeper Service Fault")</div><div class="line">else</div><div class="line">   echo ""</div><div class="line">   echo "zookeeper is runging"</div><div class="line">   echo ""</div><div class="line"></div><div class="line">fi</div></pre></td></tr></table></figure></p>
<p>启动脚本<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">sh</span> zkServer.sh</div></pre></td></tr></table></figure></p>
<p>启动结果：<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[root@iZbp199af3f3y8j7fr8kolZ bin]# sh stop_zookeeper.sh </div><div class="line"> zookeeper is not runging </div><div class="line">[root@iZbp199af3f3y8j7fr8kolZ bin]# sh start_zookeeper.sh </div><div class="line">JMX enabled by default</div><div class="line">Using config: /webapp/zookeeper-3.4.5/bin/../conf/zoo.cfg</div><div class="line">Starting zookeeper ... STARTED</div><div class="line">Start zookeeper  Service  Successful!</div></pre></td></tr></table></figure></p>
<p>配置参考：<a href="http://www.cnblogs.com/yuyijq/p/3438829.html" target="_blank" rel="external">http://www.cnblogs.com/yuyijq/p/3438829.html</a><br>配置参考：<a href="http://343614597.blog.51cto.com/7056394/1874745" target="_blank" rel="external">http://343614597.blog.51cto.com/7056394/1874745</a><br>启动zookeeper<br>    在zookper-3.3.6/bin目录下执行<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./zkServer.sh start 启动zookeeper</div></pre></td></tr></table></figure></p>
<p>验证zookeeper是否启动<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">netstat</span> -lpn | grep 2181</div></pre></td></tr></table></figure></p>
<h1 id="安装DUBBO"><a href="#安装DUBBO" class="headerlink" title="安装DUBBO"></a>安装DUBBO</h1><p>1.下载dubbo安装包  </p>
<p>2.在根目录创建相应文件夹webapp/deploy/<br>并解压安装文件到deploy文件夹中  </p>
<p>3.配置<br>    /webapp/deploy/dubbo-admin/WEB-INF<br>    中的dubbo.properties文件<br>    内容如下：<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">dubbo</span>.registry.address=zookeeper://127.0.0.1:2181  </div><div class="line"><span class="attribute">dubbo</span>.admin.root.password=root  </div><div class="line"><span class="attribute">dubbo</span>.admin.guest.password=guest</div></pre></td></tr></table></figure></p>
<p>4.然后启动tomcat服务，显示登陆页面，说明dubbo-admin部署成功<br>    访问路径：<a href="http://服务器IP:8080/" target="_blank" rel="external">http://服务器IP:8080/</a><br>    账号：root<br>    密码：root  </p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[linux安装Nginx]]></title>
      <url>https://volc1605.github.io/2016/12/12/Nginx/</url>
      <content type="html"><![CDATA[<h3 id="1-linux下安装Nginx参考"><a href="#1-linux下安装Nginx参考" class="headerlink" title="1 linux下安装Nginx参考"></a>1 linux下安装Nginx参考</h3><a id="more"></a>
<p>1.创建ucenter用户</p>
<p>一般生产环境是不会使用root用户来发布tomcat等应用的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"># 创建linux服务器的普通用户，用户名为ucenter，默认权限目录为home下的ucenter目录</div><div class="line">useradd ucenter</div><div class="line"># 进入根目录的home目录中</div><div class="line">cd home</div><div class="line"># 查看当前用户所处的目录</div><div class="line">pwd</div><div class="line"># ll会列出该文件下的所有文件信息，包括隐藏的文件，而ls -l只列出显式文件</div><div class="line">ll</div><div class="line"># 切换用户到ucenter</div><div class="line">su - ucenter</div><div class="line"># 查看当前用户所处的目录</div><div class="line">pwd</div><div class="line">/home/ucenter</div><div class="line"># 创建用户，用户名为ucenter访问权限为根目录下ucenter目录</div><div class="line">useradd ucenter -d /ucenter</div><div class="line"># 设置ucenter用户的密码为:ucenter</div><div class="line">passwd ucenter</div><div class="line"># 为ucenter用户创建ucenter目录</div><div class="line">mkdir /ucenter</div><div class="line"># 把ucenter目录及其下所有的目录的授权给ucenter用户和其所在的组</div><div class="line">chown ucenter:ucenter /ucenter/ -R</div></pre></td></tr></table></figure></p>
<p>2.更新163 yum源<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">cd /etc/yum.repos.d/</div><div class="line">mv CentOS-Base.repo CentOS-Base.repo.backup</div><div class="line">wget http://mirrors.163.com/.help/CentOS6-Base-163.repo</div><div class="line">[root@localhost ~]# yum clean all</div><div class="line">[root@localhost ~]# yum makecache</div><div class="line">[root@localhost ~]# yum update</div></pre></td></tr></table></figure></p>
<p>或者是：<a href="http://centos.ustc.edu.cn/" target="_blank" rel="external">http://centos.ustc.edu.cn/</a></p>
<p>3.安装rzsz<br>yum -y install lrzsz</p>
<p>4.安装nginx命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div></pre></td><td class="code"><pre><div class="line">yum -y install gcc-c++  </div><div class="line">yum -y install pcre pcre-devel  </div><div class="line">yum -y install zlib zlib-devel  </div><div class="line">yum -y install openssl openssl—devel</div><div class="line">mkdir /usr/local/src/nginx</div><div class="line">cd /usr/local/src/nginx</div><div class="line"># 线上获取ngin安装包</div><div class="line">wget http://nginx.org/download/nginx-1.7.7.tar.gz</div><div class="line"># 线下获取ngin安装包，使用rz命令会弹出上传选项框，选择下载好的ngin安装包进行上传到当前目录下</div><div class="line">rz</div><div class="line"># 解压.tar.gz安装包</div><div class="line">tar -xvf nginx-1.7.7.tar.gz</div><div class="line"># 删除当前目录下资源</div><div class="line">rm -rf nginx-1.7.7.tar.gz</div><div class="line"># 进入解压的nginx中</div><div class="line">cd nginx-1.7.7</div><div class="line"># 安装到/ucenter/soft/nginx目录下</div><div class="line">mkdir -p /ucenter/soft/nginx</div><div class="line">cd /usr/local/src/nginx/nginx-1.7.7</div><div class="line"># 指定安装路径为/ucenter/soft/nginx用户：ucenter，组：ucenter</div><div class="line">./configure --prefix=/ucenter/soft/nginx --user=ucenter --group=ucenter</div><div class="line"># 源码需要编译,make进行编译</div><div class="line">make</div><div class="line"># 最后安装</div><div class="line">make install</div><div class="line"># 查看是否安装成功</div><div class="line">cd /ucenter/soft/nginx</div><div class="line">ll</div><div class="line"># sbin目录一般都为可执行的文件</div><div class="line">cd sbin</div><div class="line"># ./执行shell脚本文件，启动nginx</div><div class="line">./nginx</div><div class="line"># 停止nginx</div><div class="line">./nginx -s stop</div><div class="line"># 重新加载配置文件，需要重启nginx</div><div class="line">./nginx -s reload</div><div class="line"># 查看nginx是否启动成功， | 为管道命令，管道命令的含义，前面一个命令的输出作为后面一个命令的输入</div><div class="line"># ps -ef查看进程，其输出结果作为grep的输入内容，grep在ps -ef结果中进行查找含有nginx字符的信息再作为输出。</div><div class="line">ps -ef | grep nginx</div><div class="line"># 结果含有两个nginx进程</div><div class="line"># 开放80端口</div><div class="line">/sbin/iptables -I INPUT -p tcp --dport 80 -j ACCEPT</div><div class="line"># 浏览器输入服务器IP,回车访问成功</div><div class="line"># 服务器重启后80端口就会关闭，需要将防火墙的规则保存到/etc/rc.d/init.d/iptables，即端口状态保存，服务器重启不关闭防火墙状态下仍然对外开放</div><div class="line">/etc/rc.d/init.d/iptables save</div><div class="line">cd /ucenter</div><div class="line"># 修改普通用户ucenter对nginx的权限,ucenter:ucenter，用户名:所属组名。</div><div class="line"># 修改soft目录的所属，-R为递归操作，将soft及其下面的目录所属修改为ucenter组下面的ucenter用户</div><div class="line">chown ucenter:ucenter ./soft/ -R</div><div class="line"># 切换到普通用户ucenter</div><div class="line">su - ucenter</div><div class="line">cd soft/nginx/sbin</div><div class="line"># 通过普通用户启动nginx</div><div class="line">./ nginx</div><div class="line"># 发现启动失败，原因是linux系统对普通进行了占用80端口的限制</div><div class="line"># 需要类似在window系统中使用以管理员身份运行的操作，普通可以使用root权限来执行脚本</div><div class="line"># 退出当前用户，切换到root用户</div><div class="line">exit</div><div class="line">cd ucenter/soft/nginx/sbin</div><div class="line"># 先将nginx所属改回到root</div><div class="line">chown root nginx</div><div class="line"># 设置nginx可以以root身份执行该文件</div><div class="line">chmod u+s nginx</div><div class="line">su - ucenter</div><div class="line">cd soft/nginx/sbin</div><div class="line">./nginx</div><div class="line"># 发现80端口已经被占用，需要停止nginx</div><div class="line">./nginx -s stop</div><div class="line"># 重新启动nginx</div><div class="line">./nginx</div><div class="line"># 普通户用启动nginx成功</div></pre></td></tr></table></figure></p>
<hr>
<p>之前安装linux的操作详细</p>
<h3 id="2-安装"><a href="#2-安装" class="headerlink" title="2 安装"></a>2 安装</h3><p>1.首先要安装 PCRE<br>    源文件：<a href="http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz" target="_blank" rel="external">http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz</a><br>    参考地址：<a href="http://www.runoob.com/linux/nginx-install-setup.html" target="_blank" rel="external">http://www.runoob.com/linux/nginx-install-setup.html</a><br><!-- more --><br>2.安装nginx<br>    nginx安装路径/webapp/nginx</p>
<p>启动项目报错<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">SEVERE</span>: StandardServer.await: create[8005]: </div><div class="line"><span class="attribute">java</span>.net.BindException: Address already in use</div><div class="line"><span class="attribute">at</span> java.net.PlainSocketImpl.socketBind(Native Method)</div><div class="line"><span class="attribute">at</span> java.net.PlainSocketImpl.bind(PlainSocketImpl.java:383)</div><div class="line"><span class="attribute">at</span> java.net.ServerSocket.bind(ServerSocket.java:328)</div><div class="line"><span class="attribute">at</span> java.net.ServerSocket.&lt;init&gt;(ServerSocket.java:194)</div><div class="line"><span class="attribute">at</span> org.apache.catalina.core.StandardServer.await(StandardServer.java:404)</div><div class="line"><span class="attribute">at</span> org.apache.catalina.startup.Catalina.await(Catalina.java:676)</div><div class="line"><span class="attribute">at</span> org.apache.catalina.startup.Catalina.start(Catalina.java:628)</div><div class="line"><span class="attribute">at</span> sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</div><div class="line"><span class="attribute">at</span> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</div><div class="line"><span class="attribute">at</span> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</div><div class="line"><span class="attribute">at</span> java.lang.reflect.Method.invoke(Method.java:597)</div><div class="line"><span class="attribute">at</span> org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:289)</div><div class="line"><span class="attribute">at</span> org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:414)</div><div class="line"><span class="attribute">Dec</span> 10, 2016 10:14:38 AM org.apache.coyote.http11.Http11Protocol pause</div></pre></td></tr></table></figure></p>
<p>解决修改：<br>    8005端口被占用了<br>    /webapp/tomcat_bg/conf<br>    修改server.xml文件中的8005端口<br>    <server port="8007" shutdown="SHUTDOWN"></server></p>
<p>常用命令：<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">/usr/local/webserver/nginx/sbin/nginx -s reload            # 重新载入配置文件</div><div class="line">/usr/local/webserver/nginx/sbin/nginx -s reopen            # 重启 Nginx</div><div class="line">/usr/local/webserver/nginx/sbin/nginx -s stop              # 停止 Nginx</div></pre></td></tr></table></figure></p>
<h1 id="验证nginx是否安装成功"><a href="#验证nginx是否安装成功" class="headerlink" title="验证nginx是否安装成功"></a>验证nginx是否安装成功</h1><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd  /usr/local/nginx/sbin  </div><div class="line">./nginx -t</div></pre></td></tr></table></figure>
<p>3.nginx.conf配置<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">#user  nobody;</div><div class="line">worker_processes  1;</div><div class="line"></div><div class="line">#error_log  logs/error.log;</div><div class="line">#error_log  logs/error.log  notice;</div><div class="line">#error_log  logs/error.log  info;</div><div class="line"></div><div class="line">#pid        logs/nginx.pid;</div><div class="line"></div><div class="line"></div><div class="line">events &#123;</div><div class="line">    worker_connections  1024;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">http &#123;</div><div class="line">    include       mime.types;</div><div class="line">    default_type  application/octet-stream;</div><div class="line"></div><div class="line">    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '</div><div class="line">    #                  '$status $body_bytes_sent "$http_referer" '</div><div class="line">    #                  '"$http_user_agent" "$http_x_forwarded_for"';</div><div class="line"></div><div class="line">    #access_log  logs/access.log  main;</div><div class="line"></div><div class="line">    sendfile        on;</div><div class="line">    #tcp_nopush     on;</div><div class="line"></div><div class="line">    #keepalive_timeout  0;</div><div class="line">    keepalive_timeout  65;</div><div class="line"></div><div class="line">    #gzip  on;</div><div class="line"></div><div class="line">    server &#123;</div><div class="line">        listen       80;</div><div class="line">        server_name  localhost;</div><div class="line"></div><div class="line">        #charset koi8-r;</div><div class="line"></div><div class="line">        #access_log  logs/host.access.log  main;</div><div class="line"></div><div class="line">        location / &#123;</div><div class="line">            root   /webapp/webdir/share;</div><div class="line">            index  index.html index.htm;</div><div class="line">        &#125;</div><div class="line">	location /xx/ &#123;</div><div class="line">	     proxy_pass   http://127.0.0.1:1111/xx/;</div><div class="line">        &#125;</div><div class="line">	location /xx/ &#123;</div><div class="line">	     proxy_pass   http://127.0.0.1:1111/;</div><div class="line">	&#125;</div><div class="line">	location /xx/ &#123;</div><div class="line">	     proxy_pass   http://127.0.0.1:1111/;</div><div class="line">	&#125; </div><div class="line">        #error_page  404              /404.html;</div><div class="line"></div><div class="line">        # redirect server error pages to the static page /50x.html</div><div class="line">        #</div><div class="line">        error_page   500 502 503 504  /50x.html;</div><div class="line">        location = /50x.html &#123;</div><div class="line">            root   html;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        # proxy the PHP scripts to Apache listening on 127.0.0.1:80</div><div class="line">        #</div><div class="line">        #location ~ \.php$ &#123;</div><div class="line">        #    proxy_pass   http://127.0.0.1;</div><div class="line">        #&#125;</div><div class="line"></div><div class="line">        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</div><div class="line">        #</div><div class="line">        #location ~ \.php$ &#123;</div><div class="line">        #    root           html;</div><div class="line">        #    fastcgi_pass   127.0.0.1:9000;</div><div class="line">        #    fastcgi_index  index.php;</div><div class="line">        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</div><div class="line">        #    include        fastcgi_params;</div><div class="line">        #&#125;</div><div class="line"></div><div class="line">        # deny access to .htaccess files, if Apache's document root</div><div class="line">        # concurs with nginx's one</div><div class="line">        #</div><div class="line">        #location ~ /\.ht &#123;</div><div class="line">        #    deny  all;</div><div class="line">        #&#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    # another virtual host using mix of IP-, name-, and port-based configuration</div><div class="line">    #</div><div class="line">    #server &#123;</div><div class="line">    #    listen       8000;</div><div class="line">    #    listen       somename:8080;</div><div class="line">    #    server_name  somename  alias  another.alias;</div><div class="line"></div><div class="line">    #    location / &#123;</div><div class="line">    #        root   html;</div><div class="line">    #        index  index.html index.htm;</div><div class="line">    #    &#125;</div><div class="line">    #&#125;</div><div class="line"></div><div class="line"></div><div class="line">    # HTTPS server</div><div class="line">    #</div><div class="line">    #server &#123;</div><div class="line">    #    listen       443 ssl;</div><div class="line">    #    server_name  localhost;</div><div class="line"></div><div class="line">    #    ssl_certificate      cert.pem;</div><div class="line">    #    ssl_certificate_key  cert.key;</div><div class="line"></div><div class="line">    #    ssl_session_cache    shared:SSL:1m;</div><div class="line">    #    ssl_session_timeout  5m;</div><div class="line"></div><div class="line">    #    ssl_ciphers  HIGH:!aNULL:!MD5;</div><div class="line">    #    ssl_prefer_server_ciphers  on;</div><div class="line"></div><div class="line">    #    location / &#123;</div><div class="line">    #        root   html;</div><div class="line">    #        index  index.html index.htm;</div><div class="line">    #    &#125;</div><div class="line">    #&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[linux下安装和操作mysql]]></title>
      <url>https://volc1605.github.io/2016/12/12/linux%E6%93%8D%E4%BD%9Cmysql/</url>
      <content type="html"><![CDATA[<h3 id="1-linux下安装mysql衍生版-性能高于原版"><a href="#1-linux下安装mysql衍生版-性能高于原版" class="headerlink" title="1 linux下安装mysql衍生版(性能高于原版)"></a>1 linux下安装mysql衍生版(性能高于原版)</h3><a id="more"></a>
<p>补充：<br>发现navicat连不上服务器上的mysql<br>解决：<br>执行命令<br>grant all privileges on <em>.</em> to ‘root’@’%’ identified by ‘123456’;<br>报错：<br>ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.<br>首先修改当前登录用户的密码:<br>ALTER USER USER() IDENTIFIED BY ‘1234567’;<br>再执行<br>grant all privileges on <em>.</em> to ‘root’@’%’ identified by ‘1234567’;<br>刷新权限：<br>flush  privileges ;</p>
<p>导入sql文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql -uroot databasefoo &lt; foo.sql</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql&gt; source d:wcnc_db.sql</div></pre></td></tr></table></figure>
<p>导出整个数据库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysqldump -uroot -pmysql sva_rec  &gt; e:\sva_rec.sql</div></pre></td></tr></table></figure></p>
<hr>
<p>1、首先安装cmake<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install cmake</div></pre></td></tr></table></figure></p>
<p>2、安装mysql<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">cd /usr/local/src/</div><div class="line">mkdir mysql-percona</div><div class="line">cd mysql-percona/</div><div class="line"># 上传Percona-Server-5.6.21-70.0-r688-el6-x86_64-bundle.tar安装包</div><div class="line">rz</div><div class="line"># 解压</div><div class="line">tar -xvf Percona-Server-5.6.21-70.0-r688-el6-x86_64-bundle.tar</div><div class="line"># linux安装软件有三种，编译安装，yum安装，rpm安装。</div><div class="line"># 安装解压后的shared，这个文件相当于window平台下.exe文件直接安装即可</div><div class="line">rpm -ivh Percona-Server-shared-56-5.6.21-rel70.0.el6.x86_64.rpm</div><div class="line"># 安装client</div><div class="line">rpm -ivh Percona-Server-client-56-5.6.21-rel70.0.el6.x86_64.rpm</div><div class="line"># 安装server</div><div class="line">rpm -ivh Percona-Server-server-56-5.6.21-rel70.0.el6.x86_64.rpm</div><div class="line"># 查看安装后的mysql服务状态</div><div class="line">service mysql status</div><div class="line"># 启动MySQL服务</div><div class="line">service mysql start</div><div class="line"># 登录</div><div class="line">mysql -uroot</div><div class="line"># 登录成功，说明安装成功后root用户是没有密码的</div><div class="line"># 设置root用户密码</div><div class="line">mysqladmin -u root password &quot;root&quot;</div><div class="line"># 再次登录</div><div class="line">mysql -uroot -proot</div><div class="line"># 退出mysql</div><div class="line">exit;</div><div class="line"># 设置mysql端口号3306对外开放</div><div class="line">/sbin/iptables -I INPUT -p tcp --dport 3306 -j ACCEPT</div><div class="line">/etc/rc.d/init.d/iptables save</div><div class="line"># 查看/etc/init.d/iptables状态信息</div><div class="line">/etc/init.d/iptables status</div><div class="line"># 设置远程访问（使用root密码）：</div><div class="line">grant all privileges on *.* to &apos;root&apos; @&apos;%&apos; identified by &apos;root&apos;; </div><div class="line">flush privileges;</div><div class="line"># navicat登录成功</div></pre></td></tr></table></figure></p>
<h3 id="2-解决客户端访问linux系统中mysql慢的问题"><a href="#2-解决客户端访问linux系统中mysql慢的问题" class="headerlink" title="2 解决客户端访问linux系统中mysql慢的问题"></a>2 解决客户端访问linux系统中mysql慢的问题</h3><p>原因是：mysql客户端每次访问时会试图解析访问机器的hostname，并缓存到hostname cache,如果解析不了，会等待一段时间后，才能把数据取出来。<br>解决<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># 编辑修改my.cnf，mysql配置文件</div><div class="line">vim /etc/my.cnf</div></pre></td></tr></table></figure></p>
<p>在[mysqld]下面添加：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># 让MySQL跳过解析机器hostname</div><div class="line">skip-name-resolve</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># 重启mysql服务</div><div class="line">service mysql restart</div></pre></td></tr></table></figure>
<h3 id="3-linux下运行sql执行文件"><a href="#3-linux下运行sql执行文件" class="headerlink" title="3.linux下运行sql执行文件"></a>3.linux下运行sql执行文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">cd /tmp/</div><div class="line"># 上传sql文件到tmp临时目录</div><div class="line">rz</div><div class="line"># 执行taotao.sql文件,登录mysql使用taotao数据库执行cat输出的数据</div><div class="line">cat taotao.sql | mysql -uroot -proot -Dtaotao</div></pre></td></tr></table></figure>
<hr>
<p>之前安装和操作mysql</p>
<h3 id="linux安装mysql"><a href="#linux安装mysql" class="headerlink" title="linux安装mysql"></a>linux安装mysql</h3><p>1.查看服务器中是否已经安装了mysql  </p>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">ps</span> -aux | grep <span class="string">"mysql"</span>   # 查看有关mysql进程</div><div class="line"><span class="attribute">rpm</span> -qa | grep mysql     # 用于查看linux服务器是否安装了默认的mysql</div><div class="line"><span class="attribute">rpm</span> -e mysql　　         # 普通删除模式</div><div class="line"><span class="attribute">rpm</span> -e --nodeps mysql　　# 强力删除模式，如果使用上面命令删除时，提示有依赖的其它文件，则用该命令可以对其进行强力删除  </div><div class="line"><span class="attribute">rpm</span> -e mysql-5.7.13-linux-glibc2.5-x86_64 --nodeps  # 卸载已经安装的mysql-5.7.13-linux-glibc2.5-x86_64数据库</div></pre></td></tr></table></figure>
<p>2.解压mysql源码文件  </p>
<p>下载mysql：网址:<a href="http://downloads.mysql.com/archives/community/" target="_blank" rel="external">http://downloads.mysql.com/archives/community/</a><br>    这里下载mysql-5.7.12-linux-glibc2.5-x86_64.tar版本<br>    把下载好的mysql安装文件放到/home/mysql中，如果没有mysql文件夹先创建，再放到里面<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">cd</span> /home/mysql  # 进入mysql目录准备解压mysql源文件</div><div class="line"><span class="attribute">tar</span> -zxf mysql-5.7.12-linux-glibc2.5-x86_64.tar.gz -C /home/mysql   # 解压到/home/mysql文件夹下</div></pre></td></tr></table></figure></p>
<p>3.创建mysql的用户组/用户, data目录及其用户目录<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">userdel</span> mysql                                           # 删除用户</div><div class="line"><span class="attribute">groupdel</span> mysql                                          # 删除用户组名</div><div class="line"><span class="attribute">mkdir</span> /home/mysql                                       # 在home文件夹下创建文件夹mysql</div><div class="line"><span class="attribute">mkdir</span> /home/mysql/data                                  # 在mysql文件夹下创建文件夹data  </div><div class="line"><span class="attribute">groupadd</span> mysql                                          # 创建一个名为mysql的用户组       </div><div class="line"><span class="attribute">useradd</span> -g mysql -d /home/mysql mysql                   # 在用户组下创建用户</div></pre></td></tr></table></figure></p>
<p>4.初始化mysql数据库<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd /home/mysql                                         # 进入安装目录</div><div class="line">./bin/mysql_install_db  --user=mysql --basedir=/home/mysql --datadir=/home/mysql/data</div></pre></td></tr></table></figure></p>
<p>mysql5.7新特性：由上面可以看出， mysql_install_db 已经不再推荐使用了，建议改成 mysqld –initialize 完成实例初始化。  </p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">./bin/mysqld --user=mysql --basedir=/home/mysql --datadir=/home/mysql/data --initialize</div><div class="line">./mysqld --user=mysql --basedir=/home/mysql --datadir=/home/mysql/data --initialize</div><div class="line">[Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details).</div><div class="line">[ERROR] --initialize specified but the data directory has files in it. Aborting. 2016-04-08T01:46:53.155879Z 0</div><div class="line">[ERROR] Aborting</div></pre></td></tr></table></figure>
<p>出现上面的错误是因为我们没有清空mysql的data目录， 执行清空命令如下：  </p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">cd /home/mysql/data                        # 进入安装目录下的data目录</div><div class="line">rm -fr *                                   # 清空数据</div><div class="line">cd /home/mysql      </div><div class="line">./bin/mysqld --user=mysql --basedir=/home/mysql --datadir=/home/mysql/data --initialize</div><div class="line">[Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details). 2016-04-08T01:47:59.945537Z 0</div><div class="line">[Warning] InnoDB: New log files created, LSN=45790 2016-04-08T01:48:00.333528Z 0 [Warning] InnoDB: Creating foreign key constraint system tables. 2016-04-08T01:48:00.434908Z 0</div><div class="line">[Warning] No existing UUID has been found, so we assume that this is the first time that this server has been started. Generating a new UUID: ece26421-fd2b-11e5-a1e3-00163e001e5c. 2016-04-08T01:48:00.440125Z 0</div><div class="line">[Warning] Gtid table is not ready to be used. Table 'mysql.gtid_executed' cannot be opened. 2016-04-08T01:48:00.440904Z 1</div><div class="line">[Note] A temporary password is generated for root@localhost: 2EC+qfcossJ=</div></pre></td></tr></table></figure>
<p>牢记上面的随机密码， 如上**mjT,#x_5sW, 下面我们修改密码时需要用到。  </p>
<p>5.检测下是否能启动mysql服务<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cd /home/mysql</div><div class="line">./support-files/mysql.server start</div><div class="line">Starting MySQL.. OK!</div></pre></td></tr></table></figure></p>
<p>正常<br>如果出现以下问题，需要修改/support-files/mysql.server<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">./support-files/mysql.server start</div><div class="line">./support-files/mysql.server: line 276: cd: /usr/local/mysql: No such file or directory</div><div class="line">Starting MySQL ERROR! Couldn't find MySQL server (/usr/local/mysql/bin/mysqld_safe)</div></pre></td></tr></table></figure></p>
<p>修改/home/mysql/support-files/mysql.server文件中的basedir和datadir路径<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">vim support-files/mysql.server</div><div class="line">--------------------------</div><div class="line">...</div><div class="line">basedir=/home/mysql</div><div class="line">datadir=/home/mysql/data</div><div class="line">...</div><div class="line">--------------------------</div><div class="line">./support-files/mysql.server</div><div class="line">start Starting MySQL.. OK!</div></pre></td></tr></table></figure></p>
<p>6.创建软链接<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">ln</span> -s /home/mysql/bin/mysql /usr/bin/mysql</div></pre></td></tr></table></figure></p>
<p>7.创建配置文件<br>    1、将默认生成的my.cnf备份<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">mv</span> /etc/my.cnf /etc/my.cnf.bak</div></pre></td></tr></table></figure></p>
<p>如果这一步报错，没有关系，正常情况下是由于/ect文件夹下没有my.cnf锁引起的，创建一下就可以了，或者你不会创建 ， 直接使用 vim<br>/ect/my.cnf 命令编辑 ，然后直接退出编辑就可以，在执行这个命令就不会出错了，退出编辑命令  esc键  -&gt; (shift键+ ：(冒号键) -&gt; wq! ),然后在执行上面的命令就不会报错了。  </p>
<p>2、进入mysql的安装目录支持文件目录  </p>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">cd</span> /home/mysql/support-files</div></pre></td></tr></table></figure>
<p>3、拷贝配置文件模板为新的mysql配置文件</p>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">cp</span> my-default.cnf /etc/my.cnf</div></pre></td></tr></table></figure>
<p>4、设置编码，可按需修改新的配置文件选项， 不修改配置选项， mysql则按默认配置参数运行<br>如下是我修改配置文件/etc/my.cnf， 设置编码为utf8以防乱码  </p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">vim /etc/my.cnf</div><div class="line"> </div><div class="line">[mysqld]</div><div class="line"> </div><div class="line">basedir = /home/mysql</div><div class="line">datadir = /home/mysql/data</div><div class="line"> </div><div class="line">character_set_server=utf8</div><div class="line">init_connect='SET NAMES utf8'</div><div class="line"> </div><div class="line"> </div><div class="line">[client]</div><div class="line">default-character-set=utf8</div></pre></td></tr></table></figure>
<p>有的时候使用这个命令后，前3步有问题的这里可能my.cnf文件是空的，这个不要紧，既然没有生成，那么你就自己编辑喽！具体编辑怎么实现就参照步骤6  </p>
<p>8.配置mysql服务开机自动启动<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">cp</span> /home/mysql/support-files/mysql.server /etc/init.d/mysqld      # 拷贝启动文件到/etc/init.d/下并重命令为mysqld</div><div class="line"><span class="attribute">chmod</span> 755 /etc/init.d/mysqld                                      # 增加执行权限</div><div class="line"><span class="attribute">chkconfig</span> --list mysqld                                           # 检查自启动项列表中没有mysqld这个，</div><div class="line"><span class="attribute">chkconfig</span> --add mysqld                                            # 如果没有就添加mysqld：</div><div class="line"><span class="attribute">chkconfig</span> mysqld <span class="literal">on</span>                                               # 用这个命令设置开机启动：</div></pre></td></tr></table></figure></p>
<p>如果在执行第一步就报错，则说明刚刚在第8步中配置出问题了，那你就重新设置一下  </p>
<p><img src="https://volc1605.github.io/images/linux操作mysql/1.png" alt="1"><br>如果后面的操作中出现以下的问题<br><img src="https://volc1605.github.io/images/linux操作mysql/2.png" alt="2"></p>
<p>这样就是电脑环境的问题了，你就直接把<br><img src="https://volc1605.github.io/images/linux操作mysql/3.png" alt="3"></p>
<p>9.mysql服务的启动/重启/停止<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">service</span> mysqld start                                               # 启动服务</div><div class="line"><span class="attribute">service</span> mysqld restart                                             # 重启服务</div><div class="line"><span class="attribute">service</span> mysqld stop                                                # 停止服务</div></pre></td></tr></table></figure></p>
<p>10.修改mysql登录密码<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">mysql</span>&gt; SET PASSWORD = PASSWORD('123456'); # PASSWORD()里面的123456是我设置的新密码，你也可以设置成你的密码</div><div class="line"><span class="attribute">Query</span> OK, 0 rows affected, 1 warning (0.00 sec)</div><div class="line"><span class="attribute">Rows</span> matched: 2 Changed: 0 Warnings: 1</div><div class="line"><span class="attribute">mysql</span>&gt; ALTER USER 'root'@'localhost' PASSWORD EXPIRE NEVER;</div><div class="line"><span class="attribute">Query</span> OK, 0 rows affected, 1 warning (0.00 sec)</div><div class="line"><span class="attribute">Rows</span> matched: 2 Changed: 0 Warnings: 1</div><div class="line"><span class="attribute">mysql</span>&gt; flush privileges;</div><div class="line"><span class="attribute">Query</span> OK, 0 rows affected, 1 warning (0.00 sec)</div><div class="line"><span class="attribute">Rows</span> matched: 2 Changed: 0 Warnings: 1</div></pre></td></tr></table></figure></p>
<p>11.mysql远程授权<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">[root@testfornss ~]# mysql -u root -p  </div><div class="line">Enter password:</div><div class="line">Welcome to the MySQL monitor. Commands end with ; or \g.</div><div class="line">Your MySQL connection id is 4</div><div class="line">Server version: 5.7.13 MySQL Community Server (GPL)</div><div class="line"> </div><div class="line">Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.</div><div class="line"> </div><div class="line">Oracle is a registered trademark of Oracle Corporation and/or its</div><div class="line">affiliates. Other names may be trademarks of their respective</div><div class="line">owners.</div><div class="line"> </div><div class="line">Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.</div><div class="line"> </div><div class="line">mysql&gt; grant all privileges on *.* to 'root'@'%' identified by '123456';</div><div class="line">Query OK, 0 rows affected, 1 warning (0.00 sec)</div><div class="line"> </div><div class="line">mysql&gt;</div></pre></td></tr></table></figure></p>
<p>12.设置访问mysql数据库不区分大小写<br>    修改目录下/etc的my.cnf<br>    在[mysqld]配置下追加<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">lower_case_table_names</span>=1</div></pre></td></tr></table></figure></p>
<p>0代表区别大小写  </p>
<p>问题：<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">mysql</span> -u bg -p # 回车输入密码连不上</div><div class="line"><span class="attribute">mysql</span> -r bg -p # 回车输入密码可以连上</div></pre></td></tr></table></figure></p>
<p>解决方法：<br>properties配置数据库properties配置数据库：<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">master</span>.name=csp</div><div class="line"><span class="attribute">master</span>.url=jdbc:mysql://116.62.29.200:3306/bg?characterEncoding=utf-8&amp;allowMultiQueries=true</div><div class="line"><span class="attribute">master</span>.driverClassName=com.mysql.jdbc.Driver</div><div class="line"></div><div class="line"><span class="comment"># \u5f00\u53d1\u73af\u5883</span></div><div class="line"><span class="attribute">master</span>.username=root           # 名称是root，不是bg</div><div class="line"><span class="attribute">master</span>.password=bmx84185858</div></pre></td></tr></table></figure></p>
<p>参考资源：<a href="http://www.cnblogs.com/gaojupeng/p/5727069.html" target="_blank" rel="external">http://www.cnblogs.com/gaojupeng/p/5727069.html</a></p>
<h3 id="登录mysql"><a href="#登录mysql" class="headerlink" title="登录mysql"></a>登录mysql</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">mysql</span> -u root -p  	# 登录</div><div class="line"><span class="attribute">quit</span>;  				# 退出</div></pre></td></tr></table></figure>
<h3 id="开启查询日志"><a href="#开启查询日志" class="headerlink" title="开启查询日志"></a>开启查询日志</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">show variables like &apos;%quer%&apos;;</div></pre></td></tr></table></figure>
<p>结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">+----------------------------------------+--------------------------------------------------------+</div><div class="line">| Variable_name                          | Value                                                  |</div><div class="line">+----------------------------------------+--------------------------------------------------------+</div><div class="line">| binlog_rows_query_log_events           | OFF                                                    |</div><div class="line">| ft_query_expansion_limit               | 20                                                     |</div><div class="line">| have_query_cache                       | YES                                                    |</div><div class="line">| log_queries_not_using_indexes          | OFF                                                    |</div><div class="line">| log_throttle_queries_not_using_indexes | 0                                                      |</div><div class="line">| long_query_time                        | 10.000000                                              |</div><div class="line">| query_alloc_block_size                 | 8192                                                   |</div><div class="line">| query_cache_limit                      | 1048576                                                |</div><div class="line">| query_cache_min_res_unit               | 4096                                                   |</div><div class="line">| query_cache_size                       | 1048576                                                |</div><div class="line">| query_cache_type                       | OFF                                                    |</div><div class="line">| query_cache_wlock_invalidate           | OFF                                                    |</div><div class="line">| query_prealloc_size                    | 8192                                                   |</div><div class="line">| slow_query_log                         | OFF                                                    |</div><div class="line">| slow_query_log_file                    | /usr/local/mysql/data/iZbp199af3f3y8j7fr8kolZ-slow.log |</div><div class="line">+----------------------------------------+--------------------------------------------------------+</div><div class="line">15 rows in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<p>Linux下找到mysql的配置文件my.cnf, 在mysqld下方加入慢查询的配置语句(注意:一定要在[mysqld]下的下方加入)</p>
<h3 id="重启mysql服务的报错"><a href="#重启mysql服务的报错" class="headerlink" title="重启mysql服务的报错"></a>重启mysql服务的报错</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@iZbp199af3f3y8j7fr8kolZ /]# service mysqld start</div><div class="line">Starting MySQL...The server quit without updating PID file [FAILED]cal/mysql/data/iZbp199af3f3y8j7fr8kolZ.pid).</div></pre></td></tr></table></figure>
<p>解决方法:<br>配置my.cnf文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"># 设置不区分大小写</div><div class="line"> lower_case_table_names=1</div><div class="line"> </div><div class="line"># 开启慢查询</div><div class="line">  slow_query_log=on</div><div class="line"></div><div class="line"># 设置多少时长为慢查询</div><div class="line"> long_query_time=0.00001</div><div class="line"> </div><div class="line"># 错误日志</div><div class="line"> log-error=/usr/local/mysql/logs/error.log</div><div class="line"># 慢查寻信息日志</div><div class="line"> slow_query_log_file=/usr/local/mysql/logs/slowquery.log</div><div class="line"> </div><div class="line"># log=/usr/local/mysql/logs/mysql.log</div><div class="line"># log_slow_queries=/usr/local/mysql/logs/slowquery.log</div><div class="line"># mysql5.6版本以上，取消了参数log_slow_queries，更改为slow_query_log_file</div><div class="line"># log_slow_queries=/home/db/madb/log/slow_query.log</div></pre></td></tr></table></figure></p>
<p>mysql获取随机数更新百万数据  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT FLOOR( MAX(NOW()) * RAND()) as r;</div></pre></td></tr></table></figure>
<p>重启mysql服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo /usr/local/mysql/support-files/mysql.server restart</div></pre></td></tr></table></figure></p>
<p>查询多长时间为慢查询</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">show variables like &apos;long_query_time&apos;;</div></pre></td></tr></table></figure>
<p>查询输出记录次数最多的10条SQL语句<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/local/mysql/bin/mysqldumpslow -s c -t 10 /usr/local/mysql/logs/slowquery.log</div></pre></td></tr></table></figure></p>
<p>/usr/local/mysql/bin/mysqldumpslow -s t -t 2 -a /usr/local/mysql/logs/slowquery.log</p>
<p>如果正在运行的是线上库，不方便重启   </p>
<p>MySQL从5.1及以后版本支持了 开启slow query in runtime。只需要执行：  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SET GLOBAL slow_query_log = &apos;ON&apos;;</div></pre></td></tr></table></figure>
<p>如果不生效，试一下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql&gt; FLUSH LOGS;</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Maven]]></title>
      <url>https://volc1605.github.io/2016/11/26/Maven/</url>
      <content type="html"><![CDATA[<h1 id="Maven项目不显示-Maven-Dependencies"><a href="#Maven项目不显示-Maven-Dependencies" class="headerlink" title="Maven项目不显示 Maven Dependencies"></a>Maven项目不显示 Maven Dependencies</h1><p>从别目录结构正确的项目中复制.classpath文件，覆盖不显示Maven Dependencies的项目目录中的.classpath</p>
<h1 id="去掉dynamic-web-module勾选后，每次更新maven项目都会出现以下结构"><a href="#去掉dynamic-web-module勾选后，每次更新maven项目都会出现以下结构" class="headerlink" title="去掉dynamic web module勾选后，每次更新maven项目都会出现以下结构"></a>去掉dynamic web module勾选后，每次更新maven项目都会出现以下结构</h1><p><img src="https://volc1605.github.io/images/Maven/mavenConstruction2.png" alt="maven"></p>
<p>解决方法：<br>项目properties中maven-&gt;javaee integration去掉勾选<br>去除maven项目中javascript resources引用jar包<br>properties中project facets只选择java，去掉javascript<br>去除maven项目结构目录中含有web app 2.3<br>properties中project facets只选择java 去掉dynamic web module</p>
<h1 id="解决maven项目名称出现个红叉报错"><a href="#解决maven项目名称出现个红叉报错" class="headerlink" title="解决maven项目名称出现个红叉报错"></a>解决maven项目名称出现个红叉报错</h1><p>properties中project facets的java版本号选择不当</p>
<h1 id="目录下的创建普通文件夹"><a href="#目录下的创建普通文件夹" class="headerlink" title="目录下的创建普通文件夹"></a>目录下的创建普通文件夹</h1><p>properties中的javabuild path resource-&gt;excluded **</p>
<h1 id="pom文件war报错"><a href="#pom文件war报错" class="headerlink" title="pom文件war报错"></a>pom文件war报错</h1><p>1.加上webapp中的web.xml文件<br>2.properties中maven deployment assembly(用来配置添加根目录文件夹)不显示<br>    需要在project facets中修改</p>
<h1 id="项目启动报错"><a href="#项目启动报错" class="headerlink" title="项目启动报错"></a>项目启动报错</h1><p>原因jar包冲突<br>D:\java-tools\apache-maven-3.2.3\repo\org\apache\tomcat\servlet-api\6.0.28\servlet-api-6.0.28.jar</p>
<h1 id="xsd文件找不到"><a href="#xsd文件找不到" class="headerlink" title="xsd文件找不到"></a>xsd文件找不到</h1><p>报错提示，要引入jar包。或者手动添加xsd文件或者手动指定(参考：<a href="http://www.ibm.com/developerworks/cn/xml/x-1008dubb/" target="_blank" rel="external">http://www.ibm.com/developerworks/cn/xml/x-1008dubb/</a>)</p>
<h2 id="解决pom文件报错和multiple-problems-have-occurred错误"><a href="#解决pom文件报错和multiple-problems-have-occurred错误" class="headerlink" title="解决pom文件报错和multiple problems have occurred错误"></a>解决pom文件报错和multiple problems have occurred错误</h2><p>错误实质上都是jar依赖的问题，只需两步就可解决<br>进入出问题的jar包所在的本地仓库目录<br>1、    删除所有以.lastUpdate结尾的文件<br>a)    1、切换到maven的本地仓库<br>b)    2、在当前目录打开cmd命令行<br>c)    3、执行命令：for /r %i in (*.lastUpdated) do del %i<br>2、    在项目上执行 Maven Update （Alt + F5）</p>
<h2 id="如何避免jar下载不全导致项目报错"><a href="#如何避免jar下载不全导致项目报错" class="headerlink" title="如何避免jar下载不全导致项目报错"></a>如何避免jar下载不全导致项目报错</h2><p>使用相对稳定的私服下载地址：开源中国(<a href="http://maven.oschina.net/help.html" target="_blank" rel="external">http://maven.oschina.net/help.html</a>)<br>在maven指向的setting.xml文件中进行改变私服URL配置。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[java设计模式]]></title>
      <url>https://volc1605.github.io/2016/11/24/java%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</url>
      <content type="html"><![CDATA[<h1 id="singleton单例模式"><a href="#singleton单例模式" class="headerlink" title="singleton单例模式"></a>singleton单例模式</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> myprogram;</div><div class="line"><span class="comment">/**</span></div><div class="line"> * <span class="doctag">@ClassName</span> Singleton</div><div class="line"> * <span class="doctag">@Description</span> 单例模式-懒汉式</div><div class="line"> * 既实现了线程安全，又避免了同步带来的性能影响</div><div class="line"> * <span class="doctag">@Author</span> youtanzhi</div><div class="line"> * <span class="doctag">@Date</span> 2016年11月15日 下午3:58:33</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Singleton instance;</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span> <span class="params">()</span></span>&#123;&#125; <span class="comment">// 只有当前类可以使用</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">synchronized</span> Singleton <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (instance == <span class="keyword">null</span>) &#123;</div><div class="line">            instance = <span class="keyword">new</span> Singleton();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> instance;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> myprogram;</div><div class="line"><span class="comment">/**</span></div><div class="line"> * <span class="doctag">@ClassName</span> Singleton1</div><div class="line"> * <span class="doctag">@Description</span> 饿汉式单例类.在类初始化时，已经自行实例化</div><div class="line"> * <span class="doctag">@Author</span> youtanzhi</div><div class="line"> * <span class="doctag">@Date</span> 2016年11月15日 下午4:02:31</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton1</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton1</span><span class="params">()</span> </span>&#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Singleton1 single = <span class="keyword">new</span> Singleton1();</div><div class="line"></div><div class="line">    <span class="comment">// 静态工厂方法</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton1 <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">return</span> single;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[linux常用命令]]></title>
      <url>https://volc1605.github.io/2016/11/23/linux/</url>
      <content type="html"><![CDATA[<h1 id="LINUX常用命令"><a href="#LINUX常用命令" class="headerlink" title="LINUX常用命令"></a>LINUX常用命令</h1><blockquote>
<p>ls命令   </p>
</blockquote>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">ls</span> -l                                             # 目录详细结构</div></pre></td></tr></table></figure>
<a id="more"></a>                                        
<blockquote>
<p>mkdir命令                                         </p>
</blockquote>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">mkdir</span> folder1                                     # 创建folder1目录</div></pre></td></tr></table></figure>
<blockquote>
<p>rm命令                                            </p>
</blockquote>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">rm</span> folder1                                        # 删除folder1目录</div><div class="line"><span class="attribute">rm</span> file                                           # 删除文件</div><div class="line"><span class="attribute">rm</span> -rf * 										  # 删除当前文件夹下的所有目录和文件</div></pre></td></tr></table></figure>
<blockquote>
<p>cp命令                                            </p>
</blockquote>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">cp</span> file1 file2                                    # 复制file1文件到file2</div></pre></td></tr></table></figure>
<blockquote>
<p>mv命令                                            </p>
</blockquote>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">mv</span> file1.txt file2.txt                            # 重命名</div><div class="line"><span class="attribute">mv</span> folder1 folder2                                # 移动folder1文件夹(包含folder1)到folder2文件夹</div></pre></td></tr></table></figure>
<blockquote>
<p>vi命令  </p>
</blockquote>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">vi</span> file1.txt                                      # 查看file1.txt文件第一页(command mode),trl + f进行翻页</div><div class="line">                                                  <span class="comment"># 按i建进入编辑模式(insert mode)</span></div><div class="line">				                  <span class="comment"># 退出vi命令:</span></div><div class="line">				                  <span class="comment"># Esc按键(command mode) 输入':q'回车退出</span></div><div class="line">				                  <span class="comment"># ':wq'保存退出</span></div><div class="line">				                  <span class="comment"># ':q!'强制退出</span></div><div class="line">				                  <span class="comment"># 输入':/str'回车查找str字符串，按n查看下一个</span></div></pre></td></tr></table></figure>
<blockquote>
<p>cat命令  </p>
</blockquote>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">cat</span> file1.txt                                     # 查看file1.txt所有信息</div><div class="line"><span class="attribute">cat</span> file1.txt | grep 'info'                       # 查看file1.txt中匹配'info'所在行信息,并标记'info'字符串</div><div class="line"><span class="attribute">cat</span> file1 file2 &gt; file                            # file1和file2合并到file问价并显示</div><div class="line"><span class="attribute">cat</span> must.txt | tail -n +10 | head -n 10           # 查看must.txt文件，从第10行起显示10行，即'10-19'行</div></pre></td></tr></table></figure>
<blockquote>
<p>tail命令                                          </p>
</blockquote>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">tailf</span> catalina.out | grep 'countTime'             # 只实时显示含有'countTime'所在行的信息</div><div class="line"><span class="attribute">tail</span> -f file1                                     # 实时显示file1文件后十条并进入编辑模式</div><div class="line"><span class="attribute">tail</span> -n 200 -f file1                              # 实时显示file1后200行变化信息，和上面的命令效果相似	</div><div class="line"><span class="attribute">tail</span> -n 200 file1 | grep 'test'                   # 查看file1文件后200行，高亮'test'(最常用)</div><div class="line"><span class="attribute">tail</span> -n 200 -f file1 | grep 'INFO*'               # 实时显示file1后200行变化信息，并标记处'INFO'字符串(最常用)</div></pre></td></tr></table></figure>
<blockquote>
<p>find命令                                          </p>
</blockquote>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">find</span> folder1 -type f -name <span class="string">"*.txt"</span>                # 查询当前目录下的folder1文件夹中匹配'*.txt'的文件或文件夹</div><div class="line"><span class="attribute">find</span> folder1 -name 'must.txt' -ls                 # 查询当前目录下的folder1文件夹中匹配'*.txt'的文件或文件夹，并显示信息</div><div class="line"><span class="attribute">find</span> -type f -name 'must.txt'|xargs grep 'str'    # 查询当前目录下的must.txt文件中匹配'str'所在行的信息</div><div class="line"><span class="attribute">find</span> / -name <span class="string">"memca*"</span>							  # 根据文件名称全局查找</div><div class="line"><span class="attribute">grep</span> -rn <span class="string">"str"</span> *                                  # 查询当前目录下的must.txt文件中匹配'str'所在行的信息</div><div class="line">    <span class="comment"># * : 表示当前目录所有文件，也可以是某个文件名</span></div><div class="line">    <span class="comment"># -r 是递归查找</span></div><div class="line">    <span class="comment"># -n 是显示行号</span></div><div class="line">    <span class="comment"># -R 查找所有文件包含子目录</span></div><div class="line">    <span class="comment"># -i 忽略大小写</span></div></pre></td></tr></table></figure>
<blockquote>
<p>echo命令</p>
</blockquote>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">echo</span> <span class="string">"hello world"</span> &gt; file.txt                     # 当前目录下创建file.txt文件并添加数据</div></pre></td></tr></table></figure>
<h1 id="查看服务器外网ip"><a href="#查看服务器外网ip" class="headerlink" title="查看服务器外网ip"></a>查看服务器外网ip</h1><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">curl</span> http://members.3322.org/dyndns/getip</div></pre></td></tr></table></figure>
<h1 id="查看服务器网络地址"><a href="#查看服务器网络地址" class="headerlink" title="查看服务器网络地址"></a>查看服务器网络地址</h1><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">[root@iZbp199af3f3y8j7fr8kolZ ~]# ifconfig</div><div class="line">eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</div><div class="line">        inet 10.27.235.142  netmask 255.255.252.0  broadcast 10.27.235.255</div><div class="line">        ether 00:16:3e:0d:f7:47  txqueuelen 1000  (Ethernet)</div><div class="line">        RX packets 15622862  bytes 1152767495 (1.0 GiB)</div><div class="line">        RX errors 0  dropped 0  overruns 0  frame 0</div><div class="line">        TX packets 107645  bytes 7704353 (7.3 MiB)</div><div class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</div><div class="line"></div><div class="line">eth1: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</div><div class="line">        inet 116.62.29.229  netmask 255.255.252.0  broadcast 116.62.31.255</div><div class="line">        ether 00:16:3e:0c:a6:a1  txqueuelen 1000  (Ethernet)</div><div class="line">        RX packets 261064410  bytes 18335028955 (17.0 GiB)</div><div class="line">        RX errors 0  dropped 0  overruns 0  frame 0</div><div class="line">        TX packets 5924776  bytes 1812912938 (1.6 GiB)</div><div class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</div><div class="line"></div><div class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</div><div class="line">        inet 127.0.0.1  netmask 255.0.0.0</div><div class="line">        loop  txqueuelen 0  (Local Loopback)</div><div class="line">        RX packets 18419107  bytes 2800651279 (2.6 GiB)</div><div class="line">        RX errors 0  dropped 0  overruns 0  frame 0</div><div class="line">        TX packets 18419107  bytes 2800651279 (2.6 GiB)</div><div class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</div></pre></td></tr></table></figure>
<p>其中eth0为内网，eth1为外网</p>
<h1 id="更改文件或文件夹权限"><a href="#更改文件或文件夹权限" class="headerlink" title="更改文件或文件夹权限"></a>更改文件或文件夹权限</h1><p>改变一个文件的权限: chmod mode file|dir<br>改变所有子目录的权限: chmod mode dir -R</p>
<p>mode = 777 or 752 and so on.<br>mode的三个数字，分别表示 owner，group,others所具有的权限。<br>1 = x 执行 2 = w 写 4 = r 读，比如owner具有所有权限，1+2+4=7,<br>又比如 group 具有 读 和 执行 权限 1+4 = 5</p>
<h1 id="查看端口使用情况"><a href="#查看端口使用情况" class="headerlink" title="查看端口使用情况"></a>查看端口使用情况</h1><p>查看正在使用的端口号  </p>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">netstat</span> -anp</div><div class="line"><span class="attribute">tcp</span>        0      0 114.55.113.160:50358    106.11.68.13:80 ESTABLISHED 1338/AliYunDun</div></pre></td></tr></table></figure>
<h1 id="查看端口号对应的服务名称"><a href="#查看端口号对应的服务名称" class="headerlink" title="查看端口号对应的服务名称"></a>查看端口号对应的服务名称</h1><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">lsof</span> -i:<span class="string">"50358"</span></div><div class="line"><span class="attribute">AliYunDun</span> 1338 root   11u  IPv4 7340009      0t0  TCP 114.55.113.160:50358-&gt;106.11.68.13:http (ESTABLISHED)</div></pre></td></tr></table></figure>
<h1 id="根据pid查看进程信息所在目录"><a href="#根据pid查看进程信息所在目录" class="headerlink" title="根据pid查看进程信息所在目录"></a>根据pid查看进程信息所在目录</h1><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">lsof</span> -p <span class="string">"24619"</span></div></pre></td></tr></table></figure>
<h1 id="根据PID进程号关闭服务"><a href="#根据PID进程号关闭服务" class="headerlink" title="根据PID进程号关闭服务"></a>根据PID进程号关闭服务</h1><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">kill</span> -9 <span class="string">"1338"</span></div></pre></td></tr></table></figure>
<h1 id="根据服务名称查看是否启用"><a href="#根据服务名称查看是否启用" class="headerlink" title="根据服务名称查看是否启用"></a>根据服务名称查看是否启用</h1><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">ps</span> -aux | grep <span class="string">"memcache"</span></div><div class="line"><span class="attribute">root</span>     25899  0.0  0.0 112648   972 pts/0    S+   11:16   0:00 grep --color=auto memcache</div></pre></td></tr></table></figure>
<h1 id="和sh执行脚本的区别"><a href="#和sh执行脚本的区别" class="headerlink" title="./和sh执行脚本的区别"></a>./和sh执行脚本的区别</h1><p>./需要执行权限<br>sh不需要，sh是个软链接，它可能是一个任意的shell，通常默认是bash shell<br>用type命令可以查看<br>./执行调用的是你开头一行定义的shell，不指定系统会调用默认shell程序  </p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MySQL]]></title>
      <url>https://volc1605.github.io/2016/11/19/MySQL/</url>
      <content type="html"><![CDATA[<h1 id="部门表dept和员工表empMySQL练习"><a href="#部门表dept和员工表empMySQL练习" class="headerlink" title="部门表dept和员工表empMySQL练习"></a>部门表dept和员工表empMySQL练习</h1><blockquote>
<p>建表</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*</span></div><div class="line">Navicat MySQL Data Transfer</div><div class="line"></div><div class="line">Source Server         : 10.1.1.241</div><div class="line">Source Server Version : 50547</div><div class="line">Source Host           : 10.1.1.241:3306</div><div class="line">Source Database       : test</div><div class="line"></div><div class="line">Target Server Type    : MYSQL</div><div class="line">Target Server Version : 50547</div><div class="line">File Encoding         : 65001</div><div class="line"></div><div class="line">Date: 2016-11-15 15:41:17</div><div class="line">*/</div><div class="line"></div><div class="line"><span class="keyword">SET</span> FOREIGN_KEY_CHECKS=<span class="number">0</span>;</div><div class="line"></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="comment">-- Table structure for bonus</span></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`bonus`</span>;</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`bonus`</span> (</div><div class="line">  <span class="string">`empno`</span> <span class="built_in">decimal</span>(<span class="number">4</span>,<span class="number">0</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</div><div class="line">  <span class="string">`job`</span> <span class="built_in">varchar</span>(<span class="number">9</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</div><div class="line">  <span class="string">`sal`</span> <span class="built_in">decimal</span>(<span class="number">10</span>,<span class="number">0</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</div><div class="line">  <span class="string">`comm`</span> <span class="built_in">decimal</span>(<span class="number">10</span>,<span class="number">0</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span></div><div class="line">) <span class="keyword">ENGINE</span>=MyISAM <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</div><div class="line"></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="comment">-- Records of bonus</span></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="comment">-- Table structure for dept</span></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`dept`</span>;</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`dept`</span> (</div><div class="line">  <span class="string">`deptno`</span> <span class="built_in">decimal</span>(<span class="number">2</span>,<span class="number">0</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</div><div class="line">  <span class="string">`dname`</span> <span class="built_in">varchar</span>(<span class="number">14</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</div><div class="line">  <span class="string">`loc`</span> <span class="built_in">varchar</span>(<span class="number">13</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span></div><div class="line">) <span class="keyword">ENGINE</span>=MyISAM <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</div><div class="line"></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="comment">-- Records of dept</span></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`dept`</span> <span class="keyword">VALUES</span> (<span class="string">'10'</span>, <span class="string">'ACCOUNTING'</span>, <span class="string">'NEW YORK'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`dept`</span> <span class="keyword">VALUES</span> (<span class="string">'20'</span>, <span class="string">'RESEARCH'</span>, <span class="string">'DALLAS'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`dept`</span> <span class="keyword">VALUES</span> (<span class="string">'30'</span>, <span class="string">'SALES'</span>, <span class="string">'CHICAGO'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`dept`</span> <span class="keyword">VALUES</span> (<span class="string">'40'</span>, <span class="string">'OPERATIONS'</span>, <span class="string">'BOSTON'</span>);</div><div class="line"></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="comment">-- Table structure for emp</span></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`emp`</span>;</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`emp`</span> (</div><div class="line">  <span class="string">`empno`</span> <span class="built_in">decimal</span>(<span class="number">4</span>,<span class="number">0</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  <span class="string">`ename`</span> <span class="built_in">varchar</span>(<span class="number">10</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</div><div class="line">  <span class="string">`job`</span> <span class="built_in">varchar</span>(<span class="number">9</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</div><div class="line">  <span class="string">`mgr`</span> <span class="built_in">decimal</span>(<span class="number">4</span>,<span class="number">0</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</div><div class="line">  <span class="string">`hiredate`</span> datetime <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</div><div class="line">  <span class="string">`sal`</span> <span class="built_in">decimal</span>(<span class="number">7</span>,<span class="number">2</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</div><div class="line">  <span class="string">`comm`</span> <span class="built_in">decimal</span>(<span class="number">7</span>,<span class="number">2</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</div><div class="line">  <span class="string">`deptno`</span> <span class="built_in">decimal</span>(<span class="number">2</span>,<span class="number">0</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span></div><div class="line">) <span class="keyword">ENGINE</span>=MyISAM <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</div><div class="line"></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="comment">-- Records of emp</span></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`emp`</span> <span class="keyword">VALUES</span> (<span class="string">'7369'</span>, <span class="string">'SMITH'</span>, <span class="string">'CLERK'</span>, <span class="string">'7902'</span>, <span class="string">'1980-12-17 00:00:00'</span>, <span class="string">'960.00'</span>, <span class="literal">null</span>, <span class="string">'20'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`emp`</span> <span class="keyword">VALUES</span> (<span class="string">'7499'</span>, <span class="string">'ALLEN'</span>, <span class="string">'SALESMAN'</span>, <span class="string">'7698'</span>, <span class="string">'1981-02-20 00:00:00'</span>, <span class="string">'2764.80'</span>, <span class="string">'300.00'</span>, <span class="string">'30'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`emp`</span> <span class="keyword">VALUES</span> (<span class="string">'7521'</span>, <span class="string">'WARD'</span>, <span class="string">'SALESMAN'</span>, <span class="string">'7698'</span>, <span class="string">'1981-02-22 00:00:00'</span>, <span class="string">'2160.00'</span>, <span class="string">'500.00'</span>, <span class="string">'30'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`emp`</span> <span class="keyword">VALUES</span> (<span class="string">'7566'</span>, <span class="string">'JONES'</span>, <span class="string">'MANAGER'</span>, <span class="string">'7839'</span>, <span class="string">'1981-04-02 00:00:00'</span>, <span class="string">'3570.00'</span>, <span class="literal">null</span>, <span class="string">'20'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`emp`</span> <span class="keyword">VALUES</span> (<span class="string">'7654'</span>, <span class="string">'MARTIN'</span>, <span class="string">'SALESMAN'</span>, <span class="string">'7698'</span>, <span class="string">'1981-09-28 00:00:00'</span>, <span class="string">'2160.00'</span>, <span class="string">'1400.00'</span>, <span class="string">'30'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`emp`</span> <span class="keyword">VALUES</span> (<span class="string">'7698'</span>, <span class="string">'BLAKE'</span>, <span class="string">'MANAGER'</span>, <span class="string">'7839'</span>, <span class="string">'1981-05-01 00:00:00'</span>, <span class="string">'4924.80'</span>, <span class="literal">null</span>, <span class="string">'30'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`emp`</span> <span class="keyword">VALUES</span> (<span class="string">'7782'</span>, <span class="string">'CLARK'</span>, <span class="string">'MANAGER'</span>, <span class="string">'7839'</span>, <span class="string">'1981-06-09 00:00:00'</span>, <span class="string">'2940.00'</span>, <span class="literal">null</span>, <span class="string">'10'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`emp`</span> <span class="keyword">VALUES</span> (<span class="string">'7788'</span>, <span class="string">'SCOTT'</span>, <span class="string">'ANALYST'</span>, <span class="string">'7566'</span>, <span class="string">'1982-12-09 00:00:00'</span>, <span class="string">'3600.00'</span>, <span class="literal">null</span>, <span class="string">'20'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`emp`</span> <span class="keyword">VALUES</span> (<span class="string">'7839'</span>, <span class="string">'KING'</span>, <span class="string">'PRESIDENT'</span>, <span class="literal">null</span>, <span class="string">'1981-11-17 00:00:00'</span>, <span class="string">'6000.00'</span>, <span class="literal">null</span>, <span class="string">'10'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`emp`</span> <span class="keyword">VALUES</span> (<span class="string">'7844'</span>, <span class="string">'TURNER'</span>, <span class="string">'SALESMAN'</span>, <span class="string">'7698'</span>, <span class="string">'1981-09-08 00:00:00'</span>, <span class="string">'2592.00'</span>, <span class="string">'0.00'</span>, <span class="string">'30'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`emp`</span> <span class="keyword">VALUES</span> (<span class="string">'7876'</span>, <span class="string">'ADAMS'</span>, <span class="string">'CLERK'</span>, <span class="string">'7788'</span>, <span class="string">'1983-01-12 00:00:00'</span>, <span class="string">'1320.00'</span>, <span class="literal">null</span>, <span class="string">'20'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`emp`</span> <span class="keyword">VALUES</span> (<span class="string">'7900'</span>, <span class="string">'JAMES'</span>, <span class="string">'CLERK'</span>, <span class="string">'7698'</span>, <span class="string">'1981-12-03 00:00:00'</span>, <span class="string">'1641.60'</span>, <span class="literal">null</span>, <span class="string">'30'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`emp`</span> <span class="keyword">VALUES</span> (<span class="string">'7902'</span>, <span class="string">'FORD'</span>, <span class="string">'ANALYST'</span>, <span class="string">'7566'</span>, <span class="string">'1981-12-03 00:00:00'</span>, <span class="string">'3600.00'</span>, <span class="literal">null</span>, <span class="string">'20'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`emp`</span> <span class="keyword">VALUES</span> (<span class="string">'7934'</span>, <span class="string">'MILLER'</span>, <span class="string">'CLERK'</span>, <span class="string">'7782'</span>, <span class="string">'1982-01-23 00:00:00'</span>, <span class="string">'1560.00'</span>, <span class="literal">null</span>, <span class="string">'10'</span>);</div><div class="line"></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="comment">-- Table structure for salgrade</span></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`salgrade`</span>;</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`salgrade`</span> (</div><div class="line">  <span class="string">`grade`</span> <span class="built_in">decimal</span>(<span class="number">10</span>,<span class="number">0</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</div><div class="line">  <span class="string">`losal`</span> <span class="built_in">decimal</span>(<span class="number">10</span>,<span class="number">0</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</div><div class="line">  <span class="string">`hisal`</span> <span class="built_in">decimal</span>(<span class="number">10</span>,<span class="number">0</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span></div><div class="line">) <span class="keyword">ENGINE</span>=MyISAM <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</div><div class="line"></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="comment">-- Records of salgrade</span></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`salgrade`</span> <span class="keyword">VALUES</span> (<span class="string">'1'</span>, <span class="string">'700'</span>, <span class="string">'1200'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`salgrade`</span> <span class="keyword">VALUES</span> (<span class="string">'2'</span>, <span class="string">'1201'</span>, <span class="string">'1400'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`salgrade`</span> <span class="keyword">VALUES</span> (<span class="string">'3'</span>, <span class="string">'1401'</span>, <span class="string">'2000'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`salgrade`</span> <span class="keyword">VALUES</span> (<span class="string">'4'</span>, <span class="string">'2001'</span>, <span class="string">'3000'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`salgrade`</span> <span class="keyword">VALUES</span> (<span class="string">'5'</span>, <span class="string">'3001'</span>, <span class="string">'9999'</span>);</div></pre></td></tr></table></figure>
<a id="more"></a>
<blockquote>
<p>练习</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div></pre></td><td class="code"><pre><div class="line"><span class="comment">-- 1.更新名称为'SALES'部门下的所有员工薪水上涨20%</span></div><div class="line"><span class="keyword">UPDATE</span> emp e <span class="keyword">SET</span> e.sal = e.sal * (<span class="number">1</span> + <span class="number">0.2</span>) <span class="keyword">WHERE</span> e.deptno = ( <span class="keyword">SELECT</span> d.deptno <span class="keyword">FROM</span> dept d <span class="keyword">WHERE</span> d.dname = <span class="string">'SALES'</span> );</div><div class="line"><span class="comment">-- 2.找出部门10中所有经理(MANAGER) 和部门20中所有办事员（CLERK）的详细资料</span></div><div class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e <span class="keyword">WHERE</span> ( e.deptno = <span class="string">'10'</span> <span class="keyword">AND</span> e.job = <span class="string">'MANAGER'</span> ) <span class="keyword">OR</span> ( e.deptno = <span class="string">'20'</span> <span class="keyword">AND</span> e.job = <span class="string">'CLERK'</span>);</div><div class="line"><span class="comment">-- 3.找出部门10中所有经理，部门20中所有的办事员，既不是经理又不是办事员，但是薪金大于或等于2000的所有员工的资料</span></div><div class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> (deptno = <span class="number">10</span> <span class="keyword">AND</span> job = <span class="string">'MANAGER'</span>) <span class="keyword">OR</span> (deptno = <span class="number">20</span> <span class="keyword">AND</span> job = <span class="string">'CLERK'</span>) <span class="keyword">OR</span> ( job <span class="keyword">NOT</span> <span class="keyword">IN</span> (<span class="string">'MANAGER'</span>, <span class="string">'CLERK'</span>) <span class="keyword">AND</span> sal &gt;= <span class="number">2000</span>);</div><div class="line"><span class="comment">-- 4.找出收取佣金（comm）的员工的不同工作：[DISTINCT-&gt;消除重复的关键字]</span></div><div class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> job <span class="keyword">FROM</span> emp e <span class="keyword">WHERE</span> e.comm <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>;</div><div class="line"><span class="comment">-- 5.找个各月倒数第三天受雇的所有员工</span></div><div class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e <span class="keyword">WHERE</span> e.hiredate = <span class="keyword">DATE_FORMAT</span>(<span class="keyword">LAST_DAY</span>(e.hiredate) - <span class="number">2</span>, <span class="string">'%Y-%m-%d %H:%i:%s'</span>);</div><div class="line">	<span class="comment">-- 需要注意的是有两点转换格式的大小写：</span></div><div class="line">	<span class="comment">-- 1.</span></div><div class="line">	<span class="comment">-- LAST_DAY(e.hiredate) 获取到的日期格式：2016-09-30</span></div><div class="line">	<span class="comment">-- LAST_DAY(e.hiredate) - 2 获取到的日期格式：20160928</span></div><div class="line">	<span class="comment">-- 2.转换格式的大小写：</span></div><div class="line">	<span class="comment">-- DATE_FORMAT('2016-11-15', '%Y-%m-%d %H:%i:%s');-&gt;2016-11-15 00:12:00</span></div><div class="line">	<span class="comment">-- DATE_FORMAT('2016-11-15', '%Y-%m-%d %h:%I:%S');-&gt;2016-11-15 12:00:00</span></div><div class="line"><span class="comment">-- 6.找出早于2012年前受雇的员工</span></div><div class="line">	<span class="comment">-- mysql:</span></div><div class="line">	<span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e <span class="keyword">WHERE</span> <span class="keyword">DATE_FORMAT</span>(e.hiredate, <span class="string">'%Y%m%d%H%i%s'</span>) &lt; <span class="string">'2012'</span>;</div><div class="line">	<span class="comment">-- oracle:</span></div><div class="line">	<span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> MONTHS_BETWEEN(hiredate,<span class="string">'20120000'</span>)&gt;<span class="number">0</span>;</div><div class="line">	<span class="comment">-- MONTHS_BETWEEN('2012-01-01', '2016-11-12');表示2012-01-01到2016-11-12的月数，以小数形式返回</span></div><div class="line"><span class="comment">-- 7.按照首字母大写其余字母小写的方式显示员工姓名</span></div><div class="line"><span class="keyword">SELECT</span> <span class="keyword">CONCAT</span>( <span class="keyword">UPPER</span>(<span class="keyword">LEFT</span>(e.ename, <span class="number">1</span>)), <span class="keyword">LOWER</span>( ( <span class="keyword">RIGHT</span> (e.ename, <span class="keyword">LENGTH</span>(e.ename) - <span class="number">1</span>) ) ) ) <span class="keyword">as</span> ename <span class="keyword">FROM</span> emp e;	</div><div class="line"><span class="comment">-- 8.显示正好为5个字符的员工的姓名</span></div><div class="line"><span class="keyword">SELECT</span> e.ename ad ename <span class="keyword">FROM</span> emp e <span class="keyword">WHERE</span> <span class="keyword">LENGTH</span>(e.ename) = <span class="number">5</span>;	</div><div class="line"><span class="comment">-- 9.显示姓名不带'R'的员工的姓名</span></div><div class="line"><span class="keyword">SELECT</span> ename <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> ename <span class="keyword">NOT</span> <span class="keyword">LIKE</span> <span class="string">'%R%'</span>;	</div><div class="line"><span class="comment">-- 10.显示所有员工姓名的前3个字符</span></div><div class="line"><span class="keyword">SELECT</span> <span class="keyword">SUBSTR</span>(e.ename, <span class="number">1</span>, <span class="number">3</span>) <span class="keyword">FROM</span> emp e;</div><div class="line"><span class="keyword">SELECT</span> <span class="keyword">LEFT</span>(e.ename, <span class="number">3</span>) <span class="keyword">FROM</span> emp e;</div><div class="line"><span class="comment">-- 11.显示所有员工的姓名，并且用“x” 替换替换所有的 “A”</span></div><div class="line"><span class="keyword">SELECT</span> <span class="keyword">REPLACE</span>(ename,<span class="string">'A'</span>,<span class="string">'x'</span>) <span class="keyword">FROM</span> emp;</div><div class="line"><span class="comment">-- 12.显示员工的姓名和受雇日期，并根据其服务年限，把资料最老的员工排在第在前面</span></div><div class="line"><span class="keyword">SELECT</span> ename,hiredate <span class="keyword">FROM</span> emp <span class="keyword">ORDER</span> <span class="keyword">BY</span> hiredate; <span class="comment">-- mysql默认是ASC升序	</span></div><div class="line"><span class="comment">-- 13.显示所有员工的姓名，加入公司的年份和月份，按受雇日期所在的年排序，若年份相同则讲最早月份的员工排在最前面</span></div><div class="line"><span class="keyword">SELECT</span> e.ename, <span class="keyword">DATE_FORMAT</span>(e.hiredate,<span class="string">'%Y'</span>) <span class="keyword">YEAR</span>, <span class="keyword">DATE_FORMAT</span>(e.hiredate,<span class="string">'%m'</span>) <span class="keyword">MONTH</span> <span class="keyword">FROM</span> emp e <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">YEAR</span>, <span class="keyword">MONTH</span>;</div><div class="line"><span class="comment">-- 14.显示在一个月为30天的情况所有员工的日薪金，并且忽略余数</span></div><div class="line"><span class="keyword">SELECT</span> e.ename, <span class="keyword">ROUND</span>(e.sal/<span class="number">30</span>) 日薪金 <span class="keyword">FROM</span> emp e;	</div><div class="line"><span class="comment">-- 15.找出在（任何年份）的2月受聘的所有员工</span></div><div class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e <span class="keyword">WHERE</span> <span class="keyword">MONTH</span>(e.hiredate) = <span class="number">2</span>;	</div><div class="line"><span class="comment">-- 16.对于每个员工，显示其加入公司的天数</span></div><div class="line"><span class="keyword">SELECT</span> <span class="keyword">datediff</span>(<span class="keyword">SYSDATE</span>(),<span class="string">'2016-11-15 09:41:18'</span>) 两日期之间天数<span class="number">1</span>, <span class="keyword">TO_DAYS</span>(<span class="keyword">SYSDATE</span>()) - <span class="keyword">TO_DAYS</span>(<span class="string">'2016-11-15 09:41:18'</span>) 两日期之间天数<span class="number">2</span> <span class="keyword">FROM</span> emp e;	</div><div class="line">17.以年月的方式显示所有员工的服务年限</div><div class="line"><span class="keyword">SELECT</span> (<span class="keyword">YEAR</span>(<span class="keyword">SYSDATE</span>())-<span class="keyword">YEAR</span>(e.hiredate)) 年份, (<span class="keyword">YEAR</span>(<span class="keyword">SYSDATE</span>())-<span class="keyword">YEAR</span>(e.hiredate))*<span class="number">12</span> + <span class="keyword">MONTH</span>(<span class="keyword">SYSDATE</span>())-<span class="keyword">MONTH</span>(e.hiredate) 月份 <span class="keyword">FROM</span> emp e;	</div><div class="line"><span class="comment">-- 18.列出至少有三个员工的所有部门和部门信息</span></div><div class="line">	<span class="comment">-- 方式一:</span></div><div class="line">	<span class="keyword">SELECT</span> d.deptno, d.dname, d.loc, <span class="keyword">count</span>(<span class="number">1</span>) 部门人数 <span class="keyword">FROM</span> emp e <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> d.deptno = e.deptno <span class="keyword">GROUP</span> <span class="keyword">BY</span> e.deptno <span class="keyword">HAVING</span> <span class="keyword">COUNT</span>(e.empno) &gt; <span class="number">3</span>;</div><div class="line">	<span class="comment">-- 方式二</span></div><div class="line">	<span class="keyword">SELECT</span> d.*, ed.count 部门人数 <span class="keyword">FROM</span> dept d, (<span class="keyword">SELECT</span> deptno, <span class="keyword">COUNT</span>(empno) <span class="keyword">COUNT</span> <span class="keyword">FROM</span> emp <span class="keyword">GROUP</span> <span class="keyword">BY</span> deptno <span class="keyword">HAVING</span> <span class="keyword">COUNT</span>(empno) &gt; <span class="number">3</span>) ed <span class="keyword">WHERE</span> d.deptno = ed.deptno;</div><div class="line"><span class="comment">-- 19.列出薪金比“ALLEN”多的所有员工</span></div><div class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e <span class="keyword">WHERE</span> e.sal &gt; (<span class="keyword">SELECT</span> e1.sal <span class="keyword">FROM</span> emp e1 <span class="keyword">WHERE</span> e1.ename=<span class="string">'ALLEN'</span>);	</div><div class="line"><span class="comment">-- 20.列出所有员工的姓名及其上级的姓名</span></div><div class="line"><span class="keyword">SELECT</span> e.ename 员工姓名, e1.ename 员工上级姓名 <span class="keyword">FROM</span> emp e <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> emp e1 <span class="keyword">ON</span> e.mgr=e1.empno;	</div><div class="line"><span class="comment">-- 21.列出受雇日期早于直接上级的所有员工的编号，姓名，部门名称</span></div><div class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e <span class="keyword">WHERE</span> e.hiredate &lt; (<span class="keyword">SELECT</span> e1.hiredate <span class="keyword">FROM</span> emp e1 <span class="keyword">WHERE</span> e1.empno=e.mgr);</div><div class="line"><span class="comment">-- 22.列出部门名称和这些部门员工的信息，同时列出那些没有员工的部门</span></div><div class="line"><span class="keyword">SELECT</span> d.dname, e.* <span class="keyword">FROM</span> dept d <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> emp e <span class="keyword">ON</span> e.deptno = d.deptno;	</div><div class="line"><span class="comment">-- 23.列出“CLERK”的姓名和部门名称，部门人数</span></div><div class="line"><span class="keyword">SELECT</span> e.ename, d.dname, ep.cou <span class="keyword">FROM</span> emp e <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> d.deptno=e.deptno <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> (<span class="keyword">SELECT</span> e1.deptno, <span class="keyword">COUNT</span>(empno) cou <span class="keyword">FROM</span> emp e1 <span class="keyword">GROUP</span> <span class="keyword">BY</span> deptno) ep <span class="keyword">ON</span> ep.deptno=d.deptno <span class="keyword">WHERE</span> e.job = <span class="string">'CLERK'</span>;	</div><div class="line"><span class="comment">-- 24.列出最低薪金大于1500的各种工作以及从事此工作的全部雇员人数</span></div><div class="line"><span class="keyword">SELECT</span> e.job, ep.count <span class="keyword">FROM</span> emp e <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> (<span class="keyword">SELECT</span> e1.job, <span class="keyword">count</span>(e1.job) <span class="keyword">COUNT</span> <span class="keyword">FROM</span> emp e1 <span class="keyword">GROUP</span> <span class="keyword">BY</span> e1.job) ep <span class="keyword">ON</span> e.job=ep.job <span class="keyword">WHERE</span> e.sal&gt;<span class="number">1500</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> e.job;	</div><div class="line"><span class="comment">-- 25.列出薪金高于工资平均薪金的所有员工，所在部门，上级领导，公司的工资等级</span></div><div class="line"><span class="keyword">SELECT</span> e.empno, d.dname 所在部门名称,e1.ename 上级领导,e.sal 工资, s.grade 工资等级 <span class="keyword">FROM</span> emp e <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> d.deptno=e.deptno <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> emp e1 <span class="keyword">ON</span> e.mgr=e1.empno <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> salgrade s <span class="keyword">ON</span> e.sal <span class="keyword">BETWEEN</span> s.losal <span class="keyword">AND</span> s.hisal <span class="keyword">WHERE</span> e.sal&gt; (<span class="keyword">SELECT</span> <span class="keyword">AVG</span>(e1.sal) <span class="keyword">FROM</span> emp e1);</div><div class="line"><span class="comment">-- 26.列出和“SCOTT”从事相同工作的所有员工及部门名称</span></div><div class="line"><span class="keyword">SELECT</span> e1.empno, e1.job, e1.deptno, d.dname <span class="keyword">FROM</span> emp e1 <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> d.deptno=e1.deptno <span class="keyword">WHERE</span> e1.job= (<span class="keyword">SELECT</span> e.job <span class="keyword">FROM</span> emp e <span class="keyword">WHERE</span> e.ename=<span class="string">'SCOTT'</span>);	</div><div class="line"><span class="comment">-- 27.列出薪金等于部门30中员工薪金的所有员工的姓名和薪金</span></div><div class="line"><span class="keyword">SELECT</span> ename, sal <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> sal <span class="keyword">IN</span> (<span class="keyword">SELECT</span> sal <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> deptno=<span class="string">'30'</span>) <span class="keyword">AND</span> deptno!=<span class="string">'30'</span>;</div><div class="line"><span class="comment">-- 28.列出薪金高于在部门30工作的所有员工的薪金的员工姓名和薪金、部门名称</span></div><div class="line"><span class="keyword">SELECT</span> e.ename 员工姓名, e.sal 薪金, d.dname <span class="keyword">FROM</span> emp e <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> d.deptno=e.deptno <span class="keyword">WHERE</span> e.sal&gt; (<span class="keyword">SELECT</span> <span class="keyword">max</span>(e1.sal) <span class="keyword">FROM</span> emp e1 <span class="keyword">WHERE</span> e1.deptno=<span class="string">'30'</span>);</div><div class="line"><span class="comment">-- 29.列出每个部门工作的员工数量、平均工资和平均服务期限</span></div><div class="line"><span class="keyword">SELECT</span> d.dname 部门名称, <span class="keyword">count</span>(e.deptno) 员工数量, <span class="keyword">AVG</span>(e.sal) 平均工资, <span class="keyword">AVG</span>(((<span class="keyword">YEAR</span> (<span class="keyword">SYSDATE</span>()) - <span class="keyword">YEAR</span> (e.hiredate)) * <span class="number">12</span> + <span class="keyword">MONTH</span> (<span class="keyword">SYSDATE</span>()) - <span class="keyword">MONTH</span> (e.hiredate)) / <span class="number">12</span>) 工作平均年限 <span class="keyword">FROM</span> dept d <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> emp e <span class="keyword">ON</span> e.deptno = d.deptno <span class="keyword">GROUP</span> <span class="keyword">BY</span> e.deptno;	</div><div class="line"><span class="comment">-- 30.列出各个部门的MANAGER 的最低薪金</span></div><div class="line"><span class="keyword">SELECT</span> ep.*, <span class="keyword">MIN</span>(ep.sal) 部门最低薪水 <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> d.dname 部门名称,e.* <span class="keyword">FROM</span> emp e <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> d.deptno=e.deptno <span class="keyword">WHERE</span> e.job=<span class="string">'MANAGER'</span>) ep <span class="keyword">GROUP</span> <span class="keyword">BY</span> ep.部门名称;</div><div class="line"><span class="comment">-- 31.查询出某个员工的上级主管，并要求这些主管中的薪水超过3000</span></div><div class="line"><span class="keyword">SELECT</span> e.* <span class="keyword">FROM</span> emp e <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> emp e1 <span class="keyword">ON</span> e1.deptno=e.mgr <span class="keyword">WHERE</span> e.sal&gt;<span class="number">3000</span>;</div><div class="line"><span class="comment">-- 32.求出部门名称中带有’S‘字符的部门员工的工资合计，部门人数</span></div><div class="line"><span class="keyword">SELECT</span> d.dname 部门名称, <span class="keyword">sum</span>(e.sal) 工资合计, <span class="keyword">count</span>(e.deptno) <span class="keyword">FROM</span> dept d <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> emp e <span class="keyword">ON</span> e.deptno=d.deptno <span class="keyword">WHERE</span> d.dname <span class="keyword">LIKE</span> <span class="string">'%S%'</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> d.deptno;	</div><div class="line"><span class="comment">-- 33.给任职日期超过10年的人加薪10%</span></div><div class="line"><span class="keyword">UPDATE</span> emp e <span class="keyword">SET</span> e.sal=e.sal*<span class="number">1.1</span> <span class="keyword">WHERE</span> (<span class="keyword">TIMESTAMPDIFF</span>(<span class="keyword">MONTH</span>,e.hiredate,<span class="keyword">SYSDATE</span>()))/<span class="number">12</span> &gt; <span class="number">10</span>;	</div><div class="line"><span class="keyword">SELECT</span> <span class="keyword">TIMESTAMPDIFF</span>(<span class="keyword">DAY</span>,<span class="string">'2012-10-01'</span>,<span class="string">'2013-01-13'</span>); <span class="comment">-- 获取两日期之间天数</span></div><div class="line"><span class="keyword">SELECT</span> <span class="keyword">DATEDIFF</span>(<span class="string">'2013-01-13'</span>,<span class="string">'2012-10-01'</span>) <span class="keyword">FROM</span> dual; <span class="comment">-- 获取两日期之间天数</span></div><div class="line"><span class="keyword">SELECT</span> <span class="keyword">TIMESTAMPDIFF</span>(<span class="keyword">MONTH</span>,<span class="string">'2012-10-01'</span>,<span class="string">'2013-01-13'</span>); <span class="comment">-- 获取两日期月数</span></div></pre></td></tr></table></figure>
<h1 id="EXISTS和IN"><a href="#EXISTS和IN" class="headerlink" title="EXISTS和IN"></a>EXISTS和IN</h1><p>效率差<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span></div><div class="line">	<span class="number">1</span></div><div class="line"><span class="keyword">FROM</span></div><div class="line">	tp_parcel_info f</div><div class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> tp_station_info s <span class="keyword">ON</span> s.f_station_id = f.f_station_id</div><div class="line"><span class="keyword">WHERE</span></div><div class="line">	<span class="number">1</span> = <span class="number">1</span></div><div class="line"><span class="keyword">AND</span> f.f_parcel_status <span class="keyword">IN</span> (<span class="number">0</span>)</div><div class="line"><span class="keyword">AND</span> f.f_last_time &gt;= <span class="string">'20160901000000'</span></div><div class="line"><span class="keyword">AND</span> f.f_last_time &lt;= <span class="string">'20161131235959'</span></div><div class="line"><span class="keyword">AND</span> f.f_company_id = <span class="string">'108'</span></div><div class="line"><span class="keyword">AND</span> <span class="keyword">EXISTS</span> (</div><div class="line">	<span class="keyword">SELECT</span></div><div class="line">		<span class="number">1</span></div><div class="line">	<span class="keyword">FROM</span></div><div class="line">		tp_express_branch_com_dz d</div><div class="line">	<span class="keyword">WHERE</span></div><div class="line">		d.f_exp_id = <span class="string">'2729'</span></div><div class="line">	<span class="keyword">AND</span> f.f_station_id = d.f_station_id</div><div class="line">	<span class="keyword">AND</span> d.f_branch_state = <span class="number">0</span></div><div class="line">)</div><div class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></div><div class="line">	f.f_last_time <span class="keyword">DESC</span></div></pre></td></tr></table></figure></p>
<p>效率高<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span></div><div class="line">	f.f_parcel_id,</div><div class="line">	f.f_exp_id,</div><div class="line">	f.f_branch_id,</div><div class="line">	f.f_station_id,</div><div class="line">	f.f_mail_no,</div><div class="line">	f.f_company_id,</div><div class="line">	f.f_company_name,</div><div class="line">	f.f_recipient_name,</div><div class="line">	f.f_recipient_mobile,</div><div class="line">	f.f_frame_code,</div><div class="line">	f.f_take_code,</div><div class="line">	f.f_num,</div><div class="line">	f.f_input_way,</div><div class="line">	f.f_input_source,</div><div class="line">	f.f_arrive_time,</div><div class="line">	f.f_parcel_status,</div><div class="line">	f.f_is_detention,</div><div class="line">	f.f_out_way,</div><div class="line">	f.f_out_source,</div><div class="line">	f.f_app_notice_status,</div><div class="line">	f.f_weixin_notice_status,</div><div class="line">	f.f_sms_notice_status,</div><div class="line">	f.f_out_time,</div><div class="line">	f.f_last_time,</div><div class="line">	f.f_type,</div><div class="line">	f.f_comment,</div><div class="line">	s.f_station_name</div><div class="line"><span class="keyword">FROM</span></div><div class="line">	tp_parcel_info f</div><div class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> tp_station_info s <span class="keyword">ON</span> s.f_station_id = f.f_station_id</div><div class="line"><span class="keyword">WHERE</span></div><div class="line">	<span class="number">1</span> = <span class="number">1</span></div><div class="line"><span class="keyword">AND</span> f.f_parcel_status <span class="keyword">IN</span> (<span class="number">0</span>)</div><div class="line"><span class="keyword">AND</span> f.f_last_time &gt;= <span class="string">'20160901000000'</span></div><div class="line"><span class="keyword">AND</span> f.f_last_time &lt;= <span class="string">'20161131235959'</span></div><div class="line"><span class="keyword">AND</span> f.f_company_id = <span class="string">'108'</span></div><div class="line"><span class="keyword">AND</span> f.f_station_id <span class="keyword">IN</span> (</div><div class="line">	<span class="keyword">SELECT</span></div><div class="line">		d.f_station_id</div><div class="line">	<span class="keyword">FROM</span></div><div class="line">		tp_express_branch_com_dz d</div><div class="line">	<span class="keyword">WHERE</span></div><div class="line">		d.f_exp_id = <span class="string">'2729'</span></div><div class="line">	<span class="keyword">AND</span> d.f_branch_state = <span class="number">0</span></div><div class="line">)</div><div class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></div><div class="line">	f.f_last_time <span class="keyword">DESC</span></div></pre></td></tr></table></figure></p>
<blockquote>
<p>例如</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">-- 例如：表A（小表），表B（大表）</span></div><div class="line"><span class="comment">-- 1：</span></div><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> A <span class="keyword">where</span> cc <span class="keyword">in</span> (<span class="keyword">select</span> cc <span class="keyword">from</span> B)</div><div class="line"><span class="comment">-- 效率低，用到了A表上cc列的索引；</span></div><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> A <span class="keyword">where</span> <span class="keyword">exists</span>(<span class="keyword">select</span> cc <span class="keyword">from</span> B <span class="keyword">where</span> cc=A.cc)</div><div class="line"><span class="comment">-- 效率高，用到了B表上cc列的索引。</span></div><div class="line"><span class="comment">-- 相反的</span></div><div class="line"><span class="comment">-- 2：</span></div><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> B <span class="keyword">where</span> cc <span class="keyword">in</span> (<span class="keyword">select</span> cc <span class="keyword">from</span> A)</div><div class="line"><span class="comment">-- 效率高，用到了B表上cc列的索引；</span></div><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> B <span class="keyword">where</span> <span class="keyword">exists</span>(<span class="keyword">select</span> cc <span class="keyword">from</span> A <span class="keyword">where</span> cc=B.cc)</div><div class="line"><span class="comment">-- 效率低，用到了A表上cc列的索引。</span></div></pre></td></tr></table></figure>
<blockquote>
<p>总结    </p>
</blockquote>
<font color="#FF0000" face="Menlo">in是把外表和内表作hash连接，而exists是对外表作loop循环，每次loop循环再对内表进行查询，一直以来认为exists比in效率高的说法是不准确的。如果查询的两个表大小相当，那么用in和exists差别不大；如果两个表中一个较小一个较大，则子查询表大的用exists(大表)，子查询表小的用in(小表);<br>跟显示字段的多少没有太大区别。<br></font>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Notes]]></title>
      <url>https://volc1605.github.io/2016/11/01/notes/</url>
      <content type="html"><![CDATA[<h1 id="1-查看端口号并关闭相关进程"><a href="#1-查看端口号并关闭相关进程" class="headerlink" title="1.查看端口号并关闭相关进程"></a>1.查看端口号并关闭相关进程</h1><blockquote>
<p>1.查看端口占用</p>
</blockquote>
<p>在windows命令行窗口下执行：  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">netstat -aon|findstr &quot;8080&quot;</div><div class="line">TCP     127.0.0.1:80         0.0.0.0:0               LISTENING       2448</div></pre></td></tr></table></figure>
<p>端口“8080”被PID（进程号）为2448的进程占用。<br>查看端口“8080”被哪个应用占用，，继续执行下面命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">tasklist|findstr &quot;2448&quot;</div><div class="line">notepad.exe                     2016 Console                 0     16,064 K</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<blockquote>
<p>2.关闭进程</p>
</blockquote>
<p>2.1 按进程号关闭进程</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">taskkill /pid 2152</div></pre></td></tr></table></figure>
<p>多个时格式为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">taskkill /pid 2152 /pid 1284</div></pre></td></tr></table></figure></p>
<p>2.2 按进程名关闭进程</p>
<p>如要关闭notepad.exe,格式为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">taskkill /im notepad.exe</div></pre></td></tr></table></figure>
<p>指定多个时格式为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">taskkill /im notepad.exe /im iexplorer.exe</div></pre></td></tr></table></figure></p>
<p>如果是要关闭所有的,则使用通配符*,即：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">taskkill /im *.exe</div></pre></td></tr></table></figure></p>
<p>2.3 有提示的关闭进程</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">taskkill /t /im notepad.exe</div><div class="line">taskkill /t /pid 2152</div></pre></td></tr></table></figure>
<p>这个效果是提示后在使用者确定后关闭,有提示框。<br>2.4 强行终止进程<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">taskkill /f /im notepad.exe</div><div class="line">taskkill /f /pid 2152</div></pre></td></tr></table></figure></p>
<blockquote>
<p>3.端口状态</p>
</blockquote>
<p>3.1 LISTENING状态<br>FTP服务启动后首先处于侦听（LISTENING）状态。</p>
<p>3.2 ESTABLISHED状态<br>ESTABLISHED的意思是建立连接。表示两台机器正在通信。<br>3.3 CLOSE_WAIT<br>对方主动关闭连接或者网络异常导致连接中断，这时我方的状态会变成CLOSE_WAIT 此时我方要调用close()来使得连接正确关闭<br>3.4 TIME_WAIT<br>我方主动调用close()断开连接，收到对方确认后状态变为TIME_WAIT。TCP协议规定TIME_WAIT状态会一直持续2MSL(即两倍的分段最大生存期)，以此来确保旧的连接状态不会对新连接产生影响。处于TIME_WAIT状态的连接占用的资源不会被内核释放，所以作为服务器，在可能的情况下，尽量不要主动断开连接，以减少TIME_WAIT状态造成的资源浪费。<br>目前有一种避免TIME_WAIT资源浪费的方法，就是关闭socket的LINGER选项。但这种做法是TCP协议不推荐使用的，在某些情况下这个操作可能会带来错误。<br>3.5 SYN_SENT状态<br>SYN_SENT状态表示请求连接，当你要访问其它的计算机的服务时首先要发个同步信号给该端口，此时状态为SYN_SENT，如果连接成功了就变为ESTABLISHED，此时SYN_SENT状态非常短暂。但如果发现SYN_SENT非常多且在向不同的机器发出，那你的机器可能中了冲击波或震荡波之类的病毒了。这类病毒为了感染别的计算机，它就要扫描别的计算机，在扫描的过程中对每个要扫描的计算机都要发出了同步请求，这也是出现许多SYN_SENT的原因。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[JS]]></title>
      <url>https://volc1605.github.io/2016/11/01/JS/</url>
      <content type="html"><![CDATA[<h1 id="1-windows对象setTimeOut-用于发送验证码倒计时"><a href="#1-windows对象setTimeOut-用于发送验证码倒计时" class="headerlink" title="1.windows对象setTimeOut()用于发送验证码倒计时"></a>1.windows对象setTimeOut()用于发送验证码倒计时</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">//短信验证码倒计时</div><div class="line">var wait = 30;</div><div class="line">function time(o) &#123;</div><div class="line">    if (wait == 0) &#123;</div><div class="line">        o.removeAttribute(&quot;disabled&quot;);</div><div class="line">        o.innerHTML = &quot;发送短信验证码&quot;;</div><div class="line">        wait = 30;</div><div class="line">    &#125; else &#123;</div><div class="line">        o.setAttribute(&quot;disabled&quot;, true);  </div><div class="line">        o.innerHTML = &quot;重新发送(&quot; + wait + &quot;)&quot;;</div><div class="line"></div><div class="line">        wait--;  </div><div class="line">        setTimeout(function()&#123;time(o)&#125;, 2)</div><div class="line">    &#125;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="2-bind-this-用法"><a href="#2-bind-this-用法" class="headerlink" title="2.bind(this)用法"></a>2.bind(this)用法</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">//设立一个简单地对象作为“上下文”</div><div class="line"> var context = &#123; foo: &quot;bar&quot; &#125;;</div><div class="line"></div><div class="line"> //一个在this上下文中指向foo变量的函数</div><div class="line"> function returnFoo () &#123;</div><div class="line">   return this.foo;</div><div class="line"> &#125;</div><div class="line"></div><div class="line"> // 变量在作用域中不存在，因此显示undefined</div><div class="line"> returnFoo(); // =&gt; undefined</div><div class="line"></div><div class="line"> // 如果我们把它绑定在context上下文中</div><div class="line"> var bound = returnFoo.bind(context);</div><div class="line"></div><div class="line"> // 现在的作用域中有这个变量了</div><div class="line"> bound(); // =&gt; &quot;bar&quot;</div></pre></td></tr></table></figure>
<h1 id="js传数组给html"><a href="#js传数组给html" class="headerlink" title="js传数组给html"></a>js传数组给html</h1><p>JS<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> servicePlanList = <span class="built_in">JSON</span>.stringify(canFee);  <span class="comment">// canFee数组</span></div><div class="line"><span class="keyword">this</span>.assign(<span class="string">'servicePlanList'</span>, servicePlanList);</div></pre></td></tr></table></figure></p>
<p>html</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">INPUT</span> <span class="attr">ID</span>=<span class="string">"servicePlanList"</span> <span class="attr">NAME</span>=<span class="string">"servicePlanListName"</span> <span class="attr">TYPE</span>=<span class="string">"hidden"</span></span></div><div class="line">  <span class="attr">VALUE</span>=<span class="string">"&lt;?=servicePlanList?&gt;"</span>&gt;<span class="tag">&lt;/<span class="name">INPUT</span>&gt;</span> value的值” [</div><div class="line">&#123;"fState":"1","managerId":123,"serviceFeeId":"5b7627c5ec8d4b96abae3996255f1034","serviceFeeMin":34,"serviceFeeName":"KGKGKA134","serviceFeePer":"12","serviceFeeStart":23,"type":1&#125;,</div><div class="line">&#123;"fState":"1","managerId":123,"serviceFeeId":"5a1248caf9334d77ab04f6a1df68b542","serviceFeeMin":20,"serviceFeeName":"KGKGKA13","serviceFeePer":"12","serviceFeeStart":23,"type":1&#125;]</div><div class="line">”</div><div class="line"><span class="tag">&lt;<span class="name">SCRIPT</span>&gt;</span><span class="javascript"></span></div><div class="line">                        <span class="keyword">var</span> servicePlanList = $(<span class="string">'#servicePlanList'</span>).val();</div><div class="line">servicePlanList = <span class="built_in">eval</span>(<span class="string">"("</span> + servicePlanList +<span class="string">")"</span>); <span class="comment">// eval()语言</span></div><div class="line"><span class="tag">&lt;/<span class="name">SCRIPT</span>&gt;</span></div></pre></td></tr></table></figure>
<h1 id="解决服务器上容器传参到jsp页面出现乱码问题"><a href="#解决服务器上容器传参到jsp页面出现乱码问题" class="headerlink" title="解决服务器上容器传参到jsp页面出现乱码问题"></a>解决服务器上容器传参到jsp页面出现乱码问题</h1><blockquote>
<p>jsp页面需要使用两次encodeURI进行编码处理<br>encodeURI(encodeURI(‘中文’));</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[HTML]]></title>
      <url>https://volc1605.github.io/2016/10/18/HTML/</url>
      <content type="html"><![CDATA[<h1 id="1-input中autocomplete"><a href="#1-input中autocomplete" class="headerlink" title="1.input中autocomplete"></a>1.input中autocomplete</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- autocomplete：为on时返回页面时，input中的值仍然存在 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"user_phone"</span> <span class="attr">id</span>=<span class="string">"user_phone"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control required"</span>   <span class="attr">autocomplete</span>=<span class="string">"off"</span> <span class="attr">placeholder</span>=<span class="string">"请填写您注册的手机号码(登录账号)"</span> <span class="attr">required</span> /&gt;</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="2-UEditor使用注意事项"><a href="#2-UEditor使用注意事项" class="headerlink" title="2.UEditor使用注意事项"></a>2.UEditor使用注意事项</h1><h2 id="2-1引入UEditor和回显图片"><a href="#2-1引入UEditor和回显图片" class="headerlink" title="2.1引入UEditor和回显图片"></a>2.1引入UEditor和回显图片</h2><ul>
<li>jsp页面引用：</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- 文档编辑器 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span></span></div><div class="line">	<span class="attr">src</span>=<span class="string">"$&#123;contextPath&#125;/resource/scripts/ueditor/ueditor.config.js"</span>&gt;<span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span></span></div><div class="line">	<span class="attr">src</span>=<span class="string">"$&#123;contextPath&#125;/resource/scripts/ueditor/ueditor.all.min.js"</span>&gt;<span class="undefined"></span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span></span></div><div class="line">	<span class="attr">src</span>=<span class="string">"$&#123;contextPath&#125;/resource/scripts/ueditor/lang/zh-cn/zh-cn.js"</span>&gt;<span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line">	window.UEDITOR_HOME_URL = "$&#123;contextPath&#125;/resource/scripts/ueditor/";</div><div class="line">	var ue = UE.getEditor('editor');</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">h5</span>&gt;</span>&amp;nbsp;&amp;nbsp;静态页面内容：<span class="tag">&lt;/<span class="name">h5</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">"editor"</span> <span class="attr">name</span>=<span class="string">"fContent"</span></span></div><div class="line">	<span class="attr">style</span>=<span class="string">"width: 1500px; height: 400px"</span> <span class="attr">data-options</span>=<span class="string">"required:true"</span>&gt;<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>ueditor.config.js配置</li>
</ul>
<p><img src="https://volc1605.github.io/images/html/ueditorConfig.png" alt="ueditorConfig"></p>
<ul>
<li>config.json配置</li>
</ul>
<p><img src="https://volc1605.github.io/images/html/configJson.png" alt="configJson"></p>
<hr>
<h2 id="2-2设置获取ueditor内容"><a href="#2-2设置获取ueditor内容" class="headerlink" title="2.2设置获取ueditor内容"></a>2.2设置获取ueditor内容</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//判断ueditor 编辑器是否创建成功并设置文本内容</span></div><div class="line">ue.addListener(<span class="string">"ready"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">ue.setContent(staticPage.fContent);</div><div class="line">ue.setContent(<span class="string">'hello'</span>);</div><div class="line"><span class="keyword">var</span> html = ue.getContent();</div><div class="line"><span class="keyword">var</span> txt = ue.getContentTxt();</div><div class="line">  alert(txt);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h1 id="3-输入框对齐"><a href="#3-输入框对齐" class="headerlink" title="3.输入框对齐"></a>3.输入框对齐</h1><blockquote>
<p>方式一：</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dl</span> <span class="attr">style</span>=<span class="string">"width:253px;float:left"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">dt</span> <span class="attr">style</span>=<span class="string">"width:50px;float:left"</span>&gt;</span>站点名称<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">dd</span> <span class="attr">style</span>=<span class="string">"width:200px;float:left"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"stationName"</span> <span class="attr">id</span>=<span class="string">"stationName"</span> /&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">dt</span> <span class="attr">style</span>=<span class="string">"width:50px;float:left"</span>&gt;</span>手机号<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">dd</span> <span class="attr">style</span>=<span class="string">"width:200px;float:left"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"tel"</span> <span class="attr">id</span>=<span class="string">"tel"</span> /&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></div></pre></td></tr></table></figure>
<blockquote>
<p>方式二：</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">li</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">'spanId'</span> <span class="attr">style</span>=<span class="string">"width:200px;float:left;"</span>&gt;</span></div><div class="line">			标签121231：</div><div class="line">		<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">li</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">'spanId2'</span> <span class="attr">style</span>=<span class="string">"width:200px;float:left;"</span>&gt;</span></div><div class="line">			标签：</div><div class="line">		<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<blockquote>
<p>方式三：</p>
</blockquote>
<p>放入加入style样式table中</p>
<h1 id="失去焦点事件"><a href="#失去焦点事件" class="headerlink" title="失去焦点事件"></a>失去焦点事件</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">onblur=”validate(this, 0)”</div><div class="line">validate: function(item, index) &#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Java]]></title>
      <url>https://volc1605.github.io/2016/10/18/Java/</url>
      <content type="html"><![CDATA[<h1 id="1-生成pdf文件"><a href="#1-生成pdf文件" class="headerlink" title="1.生成pdf文件"></a>1.生成pdf文件</h1><p>导包：</p>
<ul>
<li>D:\java-tools\apache-maven-3.2.3\repo\com\itextpdf\itextpdf\5.4.3\itextpdf-5.4.3.jar</li>
<li>D:\java-tools\apache-maven-3.2.3\repo\com\itextpdf\itext-asian\5.2.0\itext-asian-5.2.0.jar</li>
</ul>
<p>ReviewInvocation.java<br><a id="more"></a><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">@Component</span>(<span class="string">"INVO_review"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ReviewInvocation</span> <span class="keyword">implements</span> <span class="title">BaseInvocation</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(ReviewInvocation.class);</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> IReviewService reviewService;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> InvocationResult <span class="title">queryReviewList</span><span class="params">(InvocationContext context)</span> </span>&#123;</div><div class="line">	<span class="keyword">long</span> begin = System.currentTimeMillis();</div><div class="line">	InvocationResult result = InvocationResult.newInstance();</div><div class="line">	String userNameSearch = RequestUtil.getStrParamterAsDef(context.getRequest(), <span class="string">"userNameSearch"</span>, <span class="string">""</span>);</div><div class="line">	String reviewTimeSearch = RequestUtil.getStrParamterAsDef(context.getRequest(), <span class="string">"reviewTimeSearch"</span>, <span class="string">""</span>);</div><div class="line">	String fUserMobile = RequestUtil.getStrParamterAsDef(context.getRequest(), <span class="string">"fUserMobile"</span>, <span class="string">""</span>);</div><div class="line">	<span class="keyword">int</span> page = RequestUtil.getIntParamterAsDef(context.getRequest(), <span class="string">"page"</span>, <span class="number">1</span>);</div><div class="line">	<span class="keyword">int</span> rows = RequestUtil.getIntParamterAsDef(context.getRequest(), <span class="string">"rows"</span>, <span class="number">0</span>);</div><div class="line">	<span class="keyword">try</span> &#123;</div><div class="line">	    ReviewBean queryBean = <span class="keyword">new</span> ReviewBean();</div><div class="line">	    queryBean.setReviewTime(reviewTimeSearch);</div><div class="line">	    queryBean.setUserName(userNameSearch);</div><div class="line">	    queryBean.setfUserMobile(fUserMobile);</div><div class="line">	    Map&lt;String, Object&gt; queryMap = reviewService.queryReviewList(queryBean, page, rows);</div><div class="line">	    result.setRetObj(queryMap);</div><div class="line">	    result.setA(ISystemConstants.SYS_SUCCESS);</div><div class="line">	&#125; <span class="keyword">catch</span> (Exception ex) &#123;</div><div class="line">	    logger.error(<span class="string">"ReviewInvocation queryReviewList happen execption."</span>, ex);</div><div class="line">	    result.setRetCode(ISystemConstants.SYS_FAILED);</div><div class="line">	&#125; <span class="keyword">finally</span> &#123;</div><div class="line">	    <span class="keyword">long</span> end = System.currentTimeMillis();</div><div class="line">	    logger.info(<span class="string">"ReviewInvocation queryReviewList cost "</span> + (end - begin) + <span class="string">" ms!"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> result;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> InvocationResult <span class="title">queryReviewById</span><span class="params">(InvocationContext context)</span> </span>&#123;</div><div class="line">	<span class="keyword">long</span> begin = System.currentTimeMillis();</div><div class="line">	InvocationResult result = InvocationResult.newInstance();</div><div class="line">	String reviewId = RequestUtil.getStrParamterAsDef(context.getRequest(), <span class="string">"reviewId"</span>, <span class="string">""</span>);</div><div class="line">	<span class="keyword">try</span> &#123;</div><div class="line">	    ReviewBean reviewBean = reviewService.queryReviewById(reviewId);</div><div class="line">	    result.setRetObj(reviewBean);</div><div class="line">	    result.setA(ISystemConstants.SYS_SUCCESS);</div><div class="line">	&#125; <span class="keyword">catch</span> (Exception ex) &#123;</div><div class="line">	    logger.error(<span class="string">"ReviewInvocation queryReviewList happen execption."</span>, ex);</div><div class="line">	    result.setRetCode(ISystemConstants.SYS_FAILED);</div><div class="line">	&#125; <span class="keyword">finally</span> &#123;</div><div class="line">	    <span class="keyword">long</span> end = System.currentTimeMillis();</div><div class="line">	    logger.info(<span class="string">"ReviewInvocation queryReviewList cost "</span> + (end - begin) + <span class="string">" ms!"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> result;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> InvocationResult <span class="title">updateReview</span><span class="params">(InvocationContext context)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">	<span class="keyword">long</span> begin = System.currentTimeMillis();</div><div class="line">	InvocationResult result = InvocationResult.newInstance();</div><div class="line">	String reviewId = RequestUtil.getStrParamterAsDef(context.getRequest(), <span class="string">"reviewId"</span>, <span class="string">""</span>);</div><div class="line">	String desc = RequestUtil.getStrParamterAsDef(context.getRequest(), <span class="string">"desc"</span>, <span class="string">""</span>);</div><div class="line">	String combo = RequestUtil.getStrParamterAsDef(context.getRequest(), <span class="string">"combo"</span>, <span class="string">""</span>);</div><div class="line">	String handleType = RequestUtil.getStrParamterAsDef(context.getRequest(), <span class="string">"handleType"</span>, <span class="string">""</span>);</div><div class="line">	String userId = RequestUtil.getStrParamterAsDef(context.getRequest(), <span class="string">"userId"</span>, <span class="string">""</span>);</div><div class="line">	ReviewBean reviewBean2 = <span class="keyword">new</span> ReviewBean();</div><div class="line">	String contractContent = <span class="string">""</span>;</div><div class="line">	<span class="keyword">if</span> (<span class="string">"1"</span>.equals(handleType)) &#123;</div><div class="line">	    <span class="comment">// 批量替换异花括号(包含)中的内容，'&#123;name&#125;'为'zhangsan'</span></div><div class="line">	    HashMap&lt;String, Object&gt; param = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</div><div class="line">	    Map&lt;String, String&gt; tokens = <span class="keyword">new</span> HashMap&lt;String, String&gt;();</div><div class="line">	    param.put(<span class="string">"fContractId"</span>, <span class="string">"1"</span>);</div><div class="line">	    param.put(<span class="string">"fContractType"</span>, <span class="string">"1"</span>);</div><div class="line">	    ReviewBean reviewBeanTemp = reviewService.queryContractContent(param);</div><div class="line">	    contractContent = reviewBeanTemp.getfContractContent();</div><div class="line">	    ReviewBean reviewBean = reviewService.queryReviewById(reviewId);</div><div class="line">	    String userName = reviewBean.getUserName();</div><div class="line">	    String idNo = reviewBean.getIdNo();</div><div class="line">	    String provinceName = reviewBean.getProvinceName();</div><div class="line">	    String city = reviewBean.getCityName();</div><div class="line">	    String areaName = reviewBean.getAreaName();</div><div class="line">	    <span class="keyword">if</span> (userName != <span class="keyword">null</span> &amp;&amp; userName != <span class="string">""</span>) &#123;</div><div class="line">		tokens.put(<span class="string">"name"</span>, userName);</div><div class="line">	    &#125;</div><div class="line">	    <span class="keyword">if</span> (idNo != <span class="keyword">null</span> &amp;&amp; idNo != <span class="string">""</span>) &#123;</div><div class="line">		tokens.put(<span class="string">"id"</span>, idNo);</div><div class="line">	    &#125;</div><div class="line">	    <span class="keyword">if</span> (provinceName != <span class="keyword">null</span> &amp;&amp; provinceName != <span class="string">""</span>) &#123;</div><div class="line">		tokens.put(<span class="string">"province"</span>, provinceName);</div><div class="line">	    &#125;</div><div class="line">	    <span class="keyword">if</span> (city != <span class="keyword">null</span> &amp;&amp; city != <span class="string">""</span>) &#123;</div><div class="line">		city = city.substring(<span class="number">0</span>, city.length() - <span class="number">1</span>);</div><div class="line">		tokens.put(<span class="string">"city"</span>, city);</div><div class="line">	    &#125;</div><div class="line">	    <span class="keyword">if</span> (areaName != <span class="keyword">null</span> &amp;&amp; areaName != <span class="string">""</span>) &#123;</div><div class="line">		tokens.put(<span class="string">"area"</span>, areaName);</div><div class="line">	    &#125;</div><div class="line">	    String todayYear = DateTimeUtil.getTodayYear();</div><div class="line">	    String todayMonth = DateTimeUtil.getTodayMonth();</div><div class="line">	    String todayDay = DateTimeUtil.getTodayDay();</div><div class="line">	    tokens.put(<span class="string">"year"</span>, todayYear);</div><div class="line">	    tokens.put(<span class="string">"mon"</span>, todayMonth);</div><div class="line">	    tokens.put(<span class="string">"day"</span>, todayDay);</div><div class="line">	    tokens.put(<span class="string">"nyear"</span>, Integer.parseInt(todayYear) + <span class="number">1</span> + <span class="string">""</span>);</div><div class="line">	    tokens.put(<span class="string">"nmon"</span>, todayMonth);</div><div class="line">	    tokens.put(<span class="string">"nday"</span>, todayDay);</div><div class="line">	    String patternString = <span class="string">"\\&#123;("</span> + StringUtils.join(tokens.keySet(), <span class="string">"|"</span>) + <span class="string">")\\&#125;"</span>;</div><div class="line">	    Pattern pattern = Pattern.compile(patternString);</div><div class="line">	    Matcher matcher = pattern.matcher(contractContent);</div><div class="line">	    StringBuffer sb = <span class="keyword">new</span> StringBuffer();</div><div class="line">	    <span class="keyword">while</span> (matcher.find()) &#123;</div><div class="line">		matcher.appendReplacement(sb, tokens.get(matcher.group(<span class="number">1</span>)));</div><div class="line">	    &#125;</div><div class="line">	    matcher.appendTail(sb);</div><div class="line">	    <span class="comment">// 替换后协议内容</span></div><div class="line">	    contractContent = sb.toString();</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">try</span> &#123;</div><div class="line">	    <span class="keyword">if</span> (<span class="string">"1"</span>.equals(handleType)) &#123;</div><div class="line">		SystemUserInfoBean userInfo = (SystemUserInfoBean) SessionUtil.getObjectAttribute(context.getRequest(),</div><div class="line">			RequestConstants.ADMIN_SESSION_KEY);</div><div class="line">		reviewService.updateReview(userId, reviewId, desc, combo, handleType,</div><div class="line">			userInfo != <span class="keyword">null</span> &amp;&amp; userInfo.getfUserName() != <span class="keyword">null</span> &amp;&amp; !<span class="string">""</span>.equals(userInfo.getfUserName())</div><div class="line">				? userInfo.getfUserName() : <span class="string">"system"</span>);</div><div class="line">		ReviewBean reviewBeanById = reviewService.queryReviewById(reviewId);</div><div class="line">		String state = reviewBeanById.getState();</div><div class="line">		String fStationId = reviewBeanById.getfStationId();</div><div class="line">		<span class="keyword">if</span> (<span class="string">"1"</span>.equals(state)) &#123;</div><div class="line">		    getPdf(contractContent);</div><div class="line">		    String pdfName = addPic();</div><div class="line">		    Map&lt;String, Object&gt; param = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</div><div class="line">		    <span class="comment">// pdf访问路径</span></div><div class="line">		    String fContractUrl = BaseWebProperties.PDF_READ + File.separator + pdfName + <span class="string">".pdf"</span>;</div><div class="line">		    param.put(<span class="string">"fStationId"</span>, fStationId);</div><div class="line">		    param.put(<span class="string">"fContractUrl"</span>, fContractUrl);</div><div class="line">		    reviewService.addContractInfo(param);</div><div class="line">		&#125;</div><div class="line">		reviewBean2.setfContractContent(contractContent);</div><div class="line">		result.setD(reviewBean2);</div><div class="line">		result.setA(ISystemConstants.SYS_SUCCESS);</div><div class="line">	    &#125;</div><div class="line">	&#125; <span class="keyword">catch</span> (Exception ex) &#123;</div><div class="line">	    logger.error(<span class="string">"ReviewInvocation updateReview happen execption."</span>, ex);</div><div class="line">	    result.setRetCode(ISystemConstants.SYS_FAILED);</div><div class="line">	&#125; <span class="keyword">finally</span> &#123;</div><div class="line">	    <span class="keyword">long</span> end = System.currentTimeMillis();</div><div class="line">	    logger.info(<span class="string">"ReviewInvocation updateReview cost "</span> + (end - begin) + <span class="string">" ms!"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> result;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// 创建</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getPdf</span><span class="params">(String contractContent)</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line">	Document document = <span class="keyword">new</span> Document(PageSize.A4, <span class="number">50</span>, <span class="number">50</span>, <span class="number">50</span>, <span class="number">50</span>);</div><div class="line">	String pdfN = <span class="string">"cachePdf"</span>;</div><div class="line">	File file = <span class="keyword">new</span> File(BaseWebProperties.UPLOAD_PDF_PATH + File.separator + pdfN + <span class="string">".pdf"</span>);</div><div class="line">	<span class="keyword">try</span> &#123;</div><div class="line">	    PdfWriter.getInstance(document, <span class="keyword">new</span> FileOutputStream(file));</div><div class="line">	    document.open();</div><div class="line">	    BaseFont bf = BaseFont.createFont(<span class="string">"STSong-Light"</span>, <span class="string">"UniGB-UCS2-H"</span>, BaseFont.NOT_EMBEDDED);</div><div class="line">	    Font font = <span class="keyword">new</span> Font(bf, <span class="number">12</span>, Font.NORMAL);</div><div class="line">	    Image png = Image.getInstance(BaseWebProperties.PIC_READ + File.separator + <span class="string">"title.png"</span>);</div><div class="line">	    png.scaleAbsolute(<span class="number">540</span>, <span class="number">70</span>);</div><div class="line">	    png.setAlignment(Image.ALIGN_CENTER);</div><div class="line">	    document.add(png);</div><div class="line">	    document.add(<span class="keyword">new</span> Paragraph(contractContent, font));</div><div class="line">	    document.close();</div><div class="line">	&#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</div><div class="line">	    e.printStackTrace();</div><div class="line">	&#125; <span class="keyword">catch</span> (DocumentException e) &#123;</div><div class="line">	    e.printStackTrace();</div><div class="line">	&#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// 追加图片到pdf</span></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">addPic</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">	PdfReader reader = <span class="keyword">new</span> PdfReader(BaseWebProperties.PDF_READ + File.separator + <span class="string">"cachePdf.pdf"</span>);</div><div class="line">	<span class="keyword">int</span> n = reader.getNumberOfPages();</div><div class="line">	Document document = <span class="keyword">new</span> Document(reader.getPageSize(n));</div><div class="line">	<span class="keyword">float</span> width = document.getPageSize().getWidth();</div><div class="line">	String pdfName = DateTimeUtil.getTodayChar14();</div><div class="line">	File file = <span class="keyword">new</span> File(BaseWebProperties.UPLOAD_PDF_PATH + File.separator + pdfName + <span class="string">".pdf"</span>);</div><div class="line">	PdfStamper stamp = <span class="keyword">new</span> PdfStamper(reader, <span class="keyword">new</span> FileOutputStream(file));</div><div class="line">	PdfContentByte over;</div><div class="line">	Image img = Image.getInstance(BaseWebProperties.PIC_READ + File.separator + <span class="string">"sign1.PNG"</span>);</div><div class="line">	img.scaleAbsolute(<span class="number">110</span>, <span class="number">110</span>);</div><div class="line">	img.setAbsolutePosition(width - <span class="number">150</span>, <span class="number">350</span>);</div><div class="line">	img.setAlignment(Image.ALIGN_RIGHT);</div><div class="line">	<span class="keyword">if</span> (n &gt; <span class="number">0</span>) &#123;</div><div class="line">	    over = stamp.getOverContent(n);</div><div class="line">	    over.addImage(img);</div><div class="line">	&#125;</div><div class="line">	stamp.close();</div><div class="line">	File file2 = <span class="keyword">new</span> File(BaseWebProperties.UPLOAD_PDF_PATH + File.separator + <span class="string">"cachePdf.pdf"</span>);</div><div class="line">	<span class="keyword">if</span> (file2.exists()) &#123;</div><div class="line">	    file2.delete();</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> pdfName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<ul>
<li>正则表达式参考资源：<a href="http://jiangzhengjun.iteye.com/blog/513929" target="_blank" rel="external">http://jiangzhengjun.iteye.com/blog/513929</a><h1 id="2-Map排序"><a href="#2-Map排序" class="headerlink" title="2.Map排序"></a>2.Map排序</h1></li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">    Student student2 = <span class="keyword">new</span> Student(<span class="string">"b"</span>, <span class="string">"2"</span>);</div><div class="line">    Student student3 = <span class="keyword">new</span> Student(<span class="string">"c"</span>, <span class="string">"3"</span>);</div><div class="line">    Student student1 = <span class="keyword">new</span> Student(<span class="string">"a"</span>, <span class="string">"1"</span>);</div><div class="line">    TreeMap&lt;Integer, Object&gt; treeMap = <span class="keyword">new</span> TreeMap&lt;Integer, Object&gt;();<span class="comment">//true</span></div><div class="line">    treeMap.put(<span class="keyword">new</span> Integer(<span class="number">2</span>), student2);</div><div class="line">    treeMap.put(<span class="keyword">new</span> Integer(<span class="number">3</span>), student3);</div><div class="line">    treeMap.put(<span class="keyword">new</span> Integer(<span class="number">1</span>), student1);</div><div class="line">    <span class="comment">/**</span></div><div class="line">     *</div><div class="line">    Set&lt;String&gt; keySet = map.keySet();</div><div class="line">    for(String key : keySet)&#123;</div><div class="line">    	System.out.println("key:" + key + " | value:" + map.get(key));</div><div class="line">    &#125;</div><div class="line">     */</div><div class="line">    HashMap&lt;Integer, Object&gt; hashMap = <span class="keyword">new</span> HashMap&lt;Integer, Object&gt;();</div><div class="line">    hashMap.put(<span class="keyword">new</span> Integer(<span class="number">2</span>), student2);</div><div class="line">    hashMap.put(<span class="keyword">new</span> Integer(<span class="number">3</span>), student3);</div><div class="line">    hashMap.put(<span class="keyword">new</span> Integer(<span class="number">1</span>), student1);</div><div class="line">    <span class="comment">/**</span></div><div class="line">    Iterator&lt;Object&gt; iterator = map.values().iterator();//排序</div><div class="line">    while(iterator.hasNext())&#123;</div><div class="line">    	int value = (Integer)iterator.next();</div><div class="line">    	System.out.println(value);</div><div class="line">    &#125;</div><div class="line">     */</div><div class="line">    LinkedHashMap&lt;Integer, Object&gt; likedMap = <span class="keyword">new</span> LinkedHashMap&lt;Integer, Object&gt;();<span class="comment">//不排序</span></div><div class="line">    likedMap.put(<span class="keyword">new</span> Integer(<span class="number">2</span>), student2);</div><div class="line">    likedMap.put(<span class="keyword">new</span> Integer(<span class="number">3</span>), student3);</div><div class="line">    likedMap.put(<span class="keyword">new</span> Integer(<span class="number">1</span>), student1);</div><div class="line">    <span class="comment">/**</span></div><div class="line">    Set&lt;String&gt; keySet2 = map.keySet();</div><div class="line">    for(String key : keySet2)&#123;</div><div class="line">    	System.out.println("key:" + key + " | value:" + map.get(key));</div><div class="line">    &#125;</div><div class="line">     */</div><div class="line">    System.out.println(<span class="string">"down"</span>);</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="3-JAVA代理"><a href="#3-JAVA代理" class="headerlink" title="3.JAVA代理"></a>3.JAVA代理</h1><h2 id="3-1简单代理"><a href="#3-1简单代理" class="headerlink" title="3.1简单代理"></a>3.1简单代理</h2><p>Subject.java接口<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.bmx.omp.business.invocation.system;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Subject</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">operation1</span><span class="params">()</span></span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">operation2</span><span class="params">(String arg)</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>RealSubject.java实现类。被代理对象<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.bmx.omp.business.invocation.system;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RealSubject</span> <span class="keyword">implements</span> <span class="title">Subject</span> </span>&#123;<span class="comment">//被代理对象</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">operation1</span><span class="params">()</span> </span>&#123;</div><div class="line">       System.out.println(<span class="string">"Realer do operation1"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">operation2</span><span class="params">(String arg)</span> </span>&#123;</div><div class="line">       System.out.println(<span class="string">"Realer do operation2 with "</span> + arg);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>ProxySubject.java代理对象</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.bmx.omp.business.invocation.system;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProxySubject</span> <span class="keyword">implements</span> <span class="title">Subject</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> Subject proxied;<span class="comment">// 被代理对象</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ProxySubject</span><span class="params">(Subject proxied)</span> </span>&#123;</div><div class="line">       <span class="keyword">this</span>.proxied = proxied;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">operation1</span><span class="params">()</span> </span>&#123;</div><div class="line">       System.out.println(<span class="string">"Proxyer do operation1"</span>);</div><div class="line">       proxied.operation1();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">operation2</span><span class="params">(String arg)</span> </span>&#123;</div><div class="line">       System.out.println(<span class="string">"Proxyer do operation2 with "</span> + arg);</div><div class="line">       proxied.operation2(arg);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>测试类SimpleProxyDemo.java</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.zj.proxy.client;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.zj.proxy.Subject;</div><div class="line"><span class="keyword">import</span> com.zj.proxy.RealSubject;</div><div class="line"><span class="keyword">import</span> com.zj.proxy.ProxySubject;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SimpleProxyDemo</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">consumer</span><span class="params">(Subject subject)</span> </span>&#123;</div><div class="line">        subject.operation1();</div><div class="line">        subject.operation2(<span class="string">"ZJ"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        RealSubject real = <span class="keyword">new</span> RealSubject();</div><div class="line">        System.out.println(<span class="string">"===Without Proxy==="</span>);</div><div class="line">        consumer(real);</div><div class="line">        System.out.println(<span class="string">"===Use Proxy==="</span>);</div><div class="line">        consumer(<span class="keyword">new</span> ProxySubject(real));</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>结果<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">结果：</div><div class="line">===Without Proxy===</div><div class="line">Realer do operation1</div><div class="line">Realer do operation2 with ZJ</div><div class="line">===Use Proxy===</div><div class="line">Proxyer do operation1</div><div class="line">Realer do operation1</div><div class="line">Proxyer do operation2 with ZJ</div><div class="line">Realer do operation2 with ZJ</div></pre></td></tr></table></figure></p>
<h2 id="3-2动态代理"><a href="#3-2动态代理" class="headerlink" title="3.2动态代理"></a>3.2动态代理</h2><p>DynamicProxyHandler.java代理处理类</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.omp.business.invocation.system;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</div><div class="line"><span class="keyword">import</span> java.lang.reflect.Method;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * <span class="doctag">@ClassName</span> DynamicProxyHandler</div><div class="line"> * <span class="doctag">@Description</span> 动态代理处理类</div><div class="line"> * <span class="doctag">@Author</span> youtanzhi</div><div class="line"> * <span class="doctag">@Date</span> 2016年8月23日 下午7:01:55</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DynamicProxyHandler</span> <span class="keyword">implements</span> <span class="title">InvocationHandler</span> </span>&#123;<span class="comment">// 动态代理处理类</span></div><div class="line">  <span class="keyword">private</span> Object proxied;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="title">DynamicProxyHandler</span><span class="params">(Object RealSubject)</span> </span>&#123;</div><div class="line">    <span class="keyword">this</span>.proxied = RealSubject;<span class="comment">//生成代理对象</span></div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</div><div class="line">    System.out.println(<span class="string">"**** proxy: ****\n"</span> + proxy.getClass() + <span class="string">"\nmethod: "</span> + method + <span class="string">"\nargs: "</span> + args);</div><div class="line">    <span class="keyword">if</span> (args != <span class="keyword">null</span>) &#123;</div><div class="line">      <span class="keyword">for</span> (Object arg : args) &#123;</div><div class="line">        System.out.println(<span class="string">"  "</span> + arg);</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> method.invoke(proxied, args);</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>动态代理测试类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.omp.business.invocation.system;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * <span class="doctag">@ClassName</span> DynamicProxyDemo</div><div class="line"> * <span class="doctag">@Description</span> 动态代理测试类</div><div class="line"> * <span class="doctag">@Author</span> youtanzhi</div><div class="line"> * <span class="doctag">@Date</span> 2016年8月23日 下午7:24:19</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DynamicProxyDemo</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">consumer</span><span class="params">(Subject subject)</span> </span>&#123;</div><div class="line">        subject.operation1();<span class="comment">//执行被代理对象调用的方法时，先执行代理对象的invoke方法</span></div><div class="line">        subject.operation2(<span class="string">"ZJ"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        RealSubject real = <span class="keyword">new</span> RealSubject();</div><div class="line">        System.out.println(<span class="string">"===Without Proxy==="</span>);</div><div class="line">        consumer(real);</div><div class="line">        System.out.println(<span class="string">"===Use Proxy==="</span>);</div><div class="line">        Subject proxy = (Subject) Proxy.newProxyInstance(<span class="comment">//三个参数</span></div><div class="line">                            Subject.class.getClassLoader(), <span class="comment">// 被代理对象类加载器</span></div><div class="line">                            <span class="keyword">new</span> Class[] &#123;Subject.class&#125;, <span class="comment">// 代理类要实现的接口字节码列表(数组)</span></div><div class="line">                            <span class="keyword">new</span> DynamicProxyHandler(real));<span class="comment">// 指派方法调用的处理程序</span></div><div class="line">        consumer(proxy);<span class="comment">// 先处理程序中的invoke方法载执行代理对象执行要执行的方法</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="请求头转换成map"><a href="#请求头转换成map" class="headerlink" title="请求头转换成map"></a>请求头转换成map</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">SortedMap&lt;STRING, STRING&gt; paramMap = <span class="keyword">new</span> TreeMap&lt;STRING, STRING&gt;();</div><div class="line"> Enumeration&lt;STRING&gt; em = request.getParameterNames();</div><div class="line"> <span class="keyword">while</span></div><div class="line"> (em.hasMoreElements()) &#123;</div><div class="line">     String paramKey = em.nextElement();</div><div class="line">     paramMap.put(paramKey, request.getParameter(paramKey));</div><div class="line"> &#125;</div></pre></td></tr></table></figure>
<h1 id="list元素去重数组与list转换"><a href="#list元素去重数组与list转换" class="headerlink" title="list元素去重数组与list转换"></a>list元素去重数组与list转换</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Com</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">	<span class="comment">// 如何去重list集合中的元素</span></div><div class="line">	<span class="comment">// 方式一：使用for循环</span></div><div class="line">	List&lt;String&gt; arr = <span class="keyword">new</span> ArrayList&lt;String&gt;(); <span class="comment">// aec</span></div><div class="line">	arr.add(<span class="string">"a"</span>);</div><div class="line">	arr.add(<span class="string">"b"</span>);</div><div class="line">	arr.add(<span class="string">"e"</span>);</div><div class="line">	arr.add(<span class="string">"e"</span>);</div><div class="line">	arr.add(<span class="string">"c"</span>);</div><div class="line">	arr.add(<span class="string">"e"</span>);</div><div class="line">	arr.add(<span class="string">"a"</span>);</div><div class="line">	arr.add(<span class="string">"b"</span>);</div><div class="line">	arr.add(<span class="string">"b"</span>);</div><div class="line"><span class="comment">//	for (int i = 0; i &lt; arr.size(); i++) &#123;</span></div><div class="line"><span class="comment">//	    for (int j = i + 1; j &lt; arr.size(); j++) &#123;</span></div><div class="line"><span class="comment">//		if (arr.get(i).equals(arr.get(j))) &#123;</span></div><div class="line"><span class="comment">//		    arr.remove(j);</span></div><div class="line"><span class="comment">//		    if (j != arr.size()) &#123;</span></div><div class="line"><span class="comment">//			j--;</span></div><div class="line"><span class="comment">//		    &#125;</span></div><div class="line"><span class="comment">//		&#125;</span></div><div class="line"><span class="comment">//	    &#125;</span></div><div class="line"><span class="comment">//	&#125;</span></div><div class="line"><span class="comment">//	for (int i = 0; i &lt; arr.size(); i++) &#123;</span></div><div class="line"><span class="comment">//	    System.out.println(arr.get(i));</span></div><div class="line"><span class="comment">//	&#125;</span></div><div class="line">	<span class="comment">// 方式二</span></div><div class="line"><span class="comment">//	for (int i = 0; i &lt; arr.size() - 1; i++) &#123;</span></div><div class="line"><span class="comment">//	    for (int j = arr.size() - 1; j &gt; i; j--) &#123;</span></div><div class="line"><span class="comment">//		if (arr.get(j).equals(arr.get(i))) &#123;</span></div><div class="line"><span class="comment">//		    arr.remove(j);</span></div><div class="line"><span class="comment">//		&#125;</span></div><div class="line"><span class="comment">//	    &#125;</span></div><div class="line"><span class="comment">//	&#125;</span></div><div class="line"><span class="comment">//	System.out.println(arr);</span></div><div class="line">	<span class="comment">// 方式三 放到hashset中</span></div><div class="line"><span class="comment">//	Set h = new HashSet(arr);</span></div><div class="line"><span class="comment">//	arr.clear();</span></div><div class="line"><span class="comment">//	arr.addAll(h);</span></div><div class="line"><span class="comment">//	System.out.println(arr);</span></div><div class="line">	<span class="comment">// String类型list集合转String类型的数组</span></div><div class="line">	String[] arrString = (String[]) arr.toArray(<span class="keyword">new</span> String[] &#123;&#125;);</div><div class="line">	<span class="comment">// String数组转String类型的list集合</span></div><div class="line">	List&lt;String&gt; list = Arrays.asList(arrString);</div><div class="line">	<span class="comment">// 快速打印出数组中元素</span></div><div class="line">	System.out.println(Arrays.toString(arrString));</div><div class="line">	<span class="comment">// int数组转list集合</span></div><div class="line">	Integer[] intA = <span class="keyword">new</span> Integer[] &#123; <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span> &#125;;</div><div class="line">	List dataList = Arrays.asList(intA); <span class="comment">// 说明了asList()d的参数要的是对象数组，而不是基本类型的数组</span></div><div class="line">	System.out.println(dataList);</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="SortedMap正序排序"><a href="#SortedMap正序排序" class="headerlink" title="SortedMap正序排序"></a>SortedMap正序排序</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line"><span class="comment">// SoredMap是正序排序</span></div><div class="line">SortedMap&lt;String, Object&gt; s = <span class="keyword">new</span> TreeMap&lt;String, Object&gt;();</div><div class="line"><span class="comment">// Map&lt;String, Object&gt; s = new HashMap&lt;String, Object&gt;();</span></div><div class="line">s.put(<span class="string">"b"</span>, <span class="number">2</span>);</div><div class="line">s.put(<span class="string">"c"</span>, <span class="number">3</span>);</div><div class="line">s.put(<span class="string">"a"</span>, <span class="number">1</span>);</div><div class="line">Set&lt;Entry&lt;String, Object&gt;&gt; entrySet = s.entrySet();</div><div class="line"><span class="keyword">for</span> (Entry i : entrySet) &#123;</div><div class="line">    System.out.println(<span class="string">"key :"</span> + i.getKey());</div><div class="line">    System.out.println(<span class="string">"value :"</span> + i.getValue());</div><div class="line">&#125;</div><div class="line">   &#125;</div><div class="line">   <span class="comment">/**</span></div><div class="line">    * 结果： </div><div class="line">    * key :a value :1 key :b value :2 key :c value :3</div><div class="line">    */</div></pre></td></tr></table></figure>
<h3 id="HashMap可放入TreeMap中进行排序"><a href="#HashMap可放入TreeMap中进行排序" class="headerlink" title="HashMap可放入TreeMap中进行排序"></a>HashMap可放入TreeMap中进行排序</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">Map&lt;String, Object&gt; m = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</div><div class="line">m.put(<span class="string">"b"</span>, <span class="number">2</span>);</div><div class="line">m.put(<span class="string">"c"</span>, <span class="number">3</span>);</div><div class="line">m.put(<span class="string">"a"</span>, <span class="number">1</span>);</div><div class="line">SortedMap&lt;String, Object&gt; sort = <span class="keyword">new</span> TreeMap&lt;String, Object&gt;(m);</div><div class="line">Set&lt;Entry&lt;String, Object&gt;&gt; entrySet = sort.entrySet();</div><div class="line"><span class="keyword">for</span> (Entry e : entrySet) &#123;</div><div class="line">    System.out.println(e.getKey());</div><div class="line">    System.out.println(e.getValue());</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="ajax返回结果时机"><a href="#ajax返回结果时机" class="headerlink" title="ajax返回结果时机"></a>ajax返回结果时机</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Object retObj = actionDispatcher.dispatchRequest(request, response, <span class="keyword">null</span>);</div><div class="line"> String s = JSONObject.toJSONString(retObj);</div><div class="line"> PrintWriter pw = response.getWriter();</div><div class="line"> pw.print(s); <span class="comment">// 设置返回结果对象，并不返回</span></div><div class="line"> pw.close();  <span class="comment">// (这一步结束之后)PrintWriter对象关闭之后才返回对象，执行ajax的success方法</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="请求体以utf8格式转码获取"><a href="#请求体以utf8格式转码获取" class="headerlink" title="请求体以utf8格式转码获取"></a>请求体以utf8格式转码获取</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getHttpBodyString</span><span class="params">(HttpServletRequest req)</span> <span class="keyword">throws</span> Exception</span></div><div class="line">&#123;</div><div class="line">	</div><div class="line">	InputStream in = req.getInputStream();</div><div class="line">	<span class="keyword">byte</span>[] data = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</div><div class="line">	<span class="keyword">int</span> readLen = <span class="number">0</span>;</div><div class="line">	ByteArrayOutputStream bos = <span class="keyword">new</span> ByteArrayOutputStream();</div><div class="line">	<span class="keyword">while</span> ((readLen = in.read(data)) != -<span class="number">1</span>)</div><div class="line">	&#123;</div><div class="line">		bos.write(data, <span class="number">0</span>, readLen);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> bos.toString(<span class="string">"UTF-8"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h1><p>Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: Timed out waiting for a free available connection.原因有可能是：</p>
<p>You call DB.getConnection() twice. Perhaps because of this the JDBC driver creates 2 connections, but you close only the second one.<br>    创建了两个连接，程序只关闭了第二个<br>    mybatis会自动关闭数据库连接</p>
<h1 id="java调用声音"><a href="#java调用声音" class="headerlink" title="java调用声音"></a>java调用声音</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.io.FileInputStream;</div><div class="line"><span class="keyword">import</span> sun.audio.AudioPlayer;</div><div class="line"><span class="keyword">import</span> sun.audio.AudioStream;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Sounda</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</div><div class="line">	<span class="keyword">try</span> &#123;</div><div class="line">	    FileInputStream fileau = <span class="keyword">new</span> FileInputStream(<span class="string">"E:/tet/1.wav"</span>);</div><div class="line">	    AudioStream as = <span class="keyword">new</span> AudioStream(fileau);</div><div class="line">	    AudioPlayer.player.start(as);</div><div class="line">	&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">	&#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MyBatis]]></title>
      <url>https://volc1605.github.io/2016/10/18/MyBatis/</url>
      <content type="html"><![CDATA[<h1 id="1-判断字段值是否存在并录入数据sql"><a href="#1-判断字段值是否存在并录入数据sql" class="headerlink" title="1.判断字段值是否存在并录入数据sql"></a>1.判断字段值是否存在并录入数据sql</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- 录入短信套餐信息 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"addSmsPackage"</span> <span class="attr">parameterType</span>=<span class="string">"java.util.Map"</span>&gt;</span></div><div class="line">	INSERT INTO</div><div class="line">	tp_package_info (</div><div class="line">	f_station_id,</div><div class="line">	f_type,</div><div class="line">	f_buy_count,</div><div class="line">	f_package_count,</div><div class="line">	f_cur_count,</div><div class="line">	f_first_month_count,</div><div class="line">	f_sec_month_count,</div><div class="line">	f_third_month_count,</div><div class="line">	f_first_month_surplus,</div><div class="line">	f_sec_month_surplus,</div><div class="line">	f_is_first_accrued,</div><div class="line">	f_is_sec_accrued,</div><div class="line">	f_every_month,</div><div class="line">	f_package_create_time</div><div class="line">	) SELECT</div><div class="line">	<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"combo != null and combo != '' and combo == 1"</span>&gt;</span></div><div class="line">		#&#123;userId&#125;,#&#123;combo&#125;,0,50000,5000,5000,3000,3000,0,0,0,0,0,#&#123;currentTime&#125;</div><div class="line">	<span class="tag">&lt;/<span class="name">if</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"combo != null and combo != '' and combo == 2"</span>&gt;</span></div><div class="line">		#&#123;userId&#125;,#&#123;combo&#125;,0,50000,5000,5000,3000,3000,0,0,0,0,0,#&#123;currentTime&#125;</div><div class="line">	<span class="tag">&lt;/<span class="name">if</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"combo != null and combo != '' and combo == 0"</span>&gt;</span></div><div class="line">		#&#123;userId&#125;,#&#123;combo&#125;,0,0,0,0,0,0,0,0,0,0,0,#&#123;currentTime&#125;</div><div class="line">	<span class="tag">&lt;/<span class="name">if</span>&gt;</span></div><div class="line">	FROM</div><div class="line">	DUAL</div><div class="line">	WHERE</div><div class="line">	NOT EXISTS (</div><div class="line">	SELECT</div><div class="line">	*</div><div class="line">	FROM</div><div class="line">	tp_package_info st</div><div class="line">	WHERE</div><div class="line">	st.f_station_id = #&#123;userId&#125;)</div><div class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="2-sql索引"><a href="#2-sql索引" class="headerlink" title="2.sql索引"></a>2.sql索引</h1><p>创建唯一索引时，可以使用REPLACE INTO 进行修改或新增数据<br>13if判断不能加引号<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">SELECT</div><div class="line"><span class="tag">&lt;<span class="name">INCLUDE</span> <span class="attr">REFID</span>=<span class="string">"Blob_Column_List"</span> /&gt;</span></div><div class="line">FROM txm_publish t WHERE 1 = 1 AND</div><div class="line">t.f_type = "1" OR t.f_type = "2"</div><div class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"fUserTypeId==8 "</span>&gt;</span><span class="tag">&lt;<span class="name">!—不能加引号</span> <span class="attr">--</span>&gt;</span></div><div class="line">	OR t.f_center_id = #&#123;fUserId&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"fUserTypeId != 8 "</span>&gt;</span></div><div class="line">	OR EXISTS (</div><div class="line">	SELECT</div><div class="line">	f_manager_id</div><div class="line">	FROM</div><div class="line">	txm_user_detail d</div><div class="line">	WHERE</div><div class="line">	d.f_user_id = #&#123;fUserId&#125;</div><div class="line">	AND d.f_manager_id = t.f_center_id)</div><div class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></div><div class="line">AND t.f_publishstate = #&#123;fPublishState&#125;</div></pre></td></tr></table></figure></p>
<h1 id="3-mybatis分页sql注意数据类型"><a href="#3-mybatis分页sql注意数据类型" class="headerlink" title="3.mybatis分页sql注意数据类型"></a>3.mybatis分页sql注意数据类型</h1><p>一定要BIGINT类型，传进的map中pageStart和pageSize必须将其设置为int<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">IF</span> <span class="attr">TEST</span>=<span class="string">"pageStart !=-1"</span>&gt;</span> LIMIT</div><div class="line">#&#123;pageStart,jdbcType=BIGINT&#125;,#&#123;pageSize,jdbcType=BIGINT&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">IF</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h1 id="4-mybatis日期转换"><a href="#4-mybatis日期转换" class="headerlink" title="4.mybatis日期转换"></a>4.mybatis日期转换</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">SQL</span> <span class="attr">ID</span>=<span class="string">"Base_Column_List"</span>&gt;</span> f_parcel_id, f_exp_id, f_branch_id,</div><div class="line">f_station_id, f_mail_no, f_company_id, f_company_name, f_recipient_name,</div><div class="line">f_recipient_mobile, f_frame_code, f_take_code, f_num, f_input_way,</div><div class="line">f_input_source, date_format(f_arrive_time,'%Y-%c-%d %h:%i:%s') AS</div><div class="line">'f_arrive_time' , f_parcel_status, f_is_detention, f_out_way, f_out_source,</div><div class="line">f_app_notice_status, f_weixin_notice_status, f_sms_notice_status,</div><div class="line">f_out_time, f_last_time, f_type, f_comment</div><div class="line"><span class="tag">&lt;/<span class="name">SQL</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">SELECT</span> <span class="attr">ID</span>=<span class="string">"queryParcleList"</span> <span class="attr">RESULTMAP</span>=<span class="string">"BaseResultMap"</span>&gt;</span>select</div><div class="line">   <span class="tag">&lt;<span class="name">INCLUDE</span> <span class="attr">REFID</span>=<span class="string">"Base_Column_List"</span> /&gt;</span> from tp_parcel_info WHERE 1=1</div><div class="line">   <span class="tag">&lt;<span class="name">IF</span> <span class="attr">TEST</span>=<span class="string">"mi.startTime!='' and mi.startTime!=null"</span>&gt;</span> and</div><div class="line">   date_format(f_arrive_time, '%Y%m%d%') &amp;gt;= date_format(#&#123;mi.startTime&#125;,</div><div class="line">   '%Y%m%d%')</div><div class="line">   <span class="tag">&lt;/<span class="name">IF</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">IF</span> <span class="attr">TEST</span>=<span class="string">"mi.endTime!='' and mi.endTime!=null"</span>&gt;</span> and</div><div class="line">   date_format(f_arrive_time, '%Y%m%d%') &amp;lt;= date_format(#&#123;mi.endTime&#125;,</div><div class="line">   '%Y%m%d%')</div><div class="line">   <span class="tag">&lt;/<span class="name">IF</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">IF</span> <span class="attr">TEST</span>=<span class="string">"mi.fCompanyId!='-1' and mi.fCompanyId!=null"</span>&gt;</span> and f_company_id</div><div class="line">   = #&#123;mi.fCompanyId&#125;</div><div class="line">   <span class="tag">&lt;/<span class="name">IF</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">IF</span> <span class="attr">TEST</span>=<span class="string">"mi.fParcelStatus!='-1' and mi.fParcelStatus!=null and mi.fParcelStatus !=''"</span>&gt;</span></div><div class="line">   and f_parcel_status = #&#123;mi.fParcelStatus&#125;</div><div class="line">   <span class="tag">&lt;/<span class="name">IF</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">IF</span> <span class="attr">TEST</span>=<span class="string">"mi.fStationId !=null and mi.fStationId !=''"</span>&gt;</span> and f_station_id</div><div class="line">   = #&#123;mi.fStationId&#125;</div><div class="line">   <span class="tag">&lt;/<span class="name">IF</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">IF</span> <span class="attr">TEST</span>=<span class="string">"pageNum!='-1' and pageSize!='-1'"</span>&gt;</span> LIMIT #&#123;pageNum&#125;,</div><div class="line">   #&#123;pageSize&#125;</div><div class="line">   <span class="tag">&lt;/<span class="name">IF</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">SELECT</span>&gt;</span></div></pre></td></tr></table></figure>
<h1 id="spring-mybatis"><a href="#spring-mybatis" class="headerlink" title="spring+mybatis"></a>spring+mybatis</h1><pre><code>配置参考：https://my.oschina.net/wangt10/blog/508344
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo之NexT主题搭建博客详细过程]]></title>
      <url>https://volc1605.github.io/2016/10/03/Hexo%E4%B9%8BNexT%E4%B8%BB%E9%A2%98%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%AF%A6%E7%BB%86%E8%BF%87%E7%A8%8B/</url>
      <content type="html"><![CDATA[<p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=33856275&auto=0&height=66"></iframe><br><a id="more"></a><br>本站是用hexo来搭建的，使用的是next主题。这里记录一下搭建的整个过程，仅供参考！有什么问题请留言通知，谢谢支持！</p>
<h1 id="更新内容-2017-03-24"><a href="#更新内容-2017-03-24" class="headerlink" title="更新内容 2017-03-24"></a>更新内容 2017-03-24</h1><blockquote>
<ul>
<li>使用友言评论功能</li>
<li>解析域名</li>
</ul>
</blockquote>
<hr>
<h1 id="1-环境准备"><a href="#1-环境准备" class="headerlink" title="1.环境准备"></a>1.环境准备</h1><p>下载安装nodejs和git(for window)，声明一下我的搭建环境win764</p>
<h2 id="1-1-nodejs安装"><a href="#1-1-nodejs安装" class="headerlink" title="1.1.nodejs安装"></a>1.1.nodejs安装</h2><p>官网下载地址：<a href="https://nodejs.org/en/" target="_blank" rel="external">https://nodejs.org/en/</a> 下载v<em>*</em> LTS Recommended For Most Users</p>
<blockquote>
<p>设置系统变量      </p>
</blockquote>
<p>我把nodejs安装在c盘program files的nodejs目录下<br>编辑系统环境变量path的值，追加C:\Program Files\nodejs</p>
<blockquote>
<p>安装Express开发框架  </p>
</blockquote>
<p>以管理员打开cmd命令窗口，执行命令<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">npm</span> install -g express</div><div class="line"><span class="attribute">npm</span> install -g express-generator</div></pre></td></tr></table></figure></p>
<p>在C:\Program Files\nodejs\node_modules中会生成express和express-generator两个文件夹表示安装好了</p>
<blockquote>
<p>新建项目  </p>
</blockquote>
<p>进入C:\Program Files\nodejs，新建名称为newproject的项目<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">cd</span> C:\Program Files\nodejs</div><div class="line"><span class="attribute">express</span> -t ejs newsproject</div></pre></td></tr></table></figure></p>
<p>新建成功在nodesj目录下会生成newproject目录，其目录下大致有以下文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">bin          相关运行脚本</div><div class="line">public       静态资源</div><div class="line">routes       路由表</div><div class="line">views        试图模板  </div><div class="line">app.js       视图文件夹  </div><div class="line">packge.json  项目依赖说明</div></pre></td></tr></table></figure></p>
<blockquote>
<p>关于执行npm install -g express命令的出现错误的解决方式  </p>
</blockquote>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">npm</span> config list # 查看以前修改过的命令，针对错误的地方删除掉。</div></pre></td></tr></table></figure>
<p>删除代理<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">npm</span> config delete proxy</div></pre></td></tr></table></figure></p>
<p>删除注册的目录<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">npm</span> config delete registry</div></pre></td></tr></table></figure></p>
<p>npm仓库是国外服务器，经常连接不上或安装慢，这里推荐使用 淘宝 NPM 镜像 来安装，设置镜像<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">npm</span> config set registry https://registry.npm.taobao.org</div></pre></td></tr></table></figure></p>
<p>查看是否修改成功<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">npm</span> config list</div></pre></td></tr></table></figure></p>
<p>再重新安装express模块<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">npm</span> install -g express</div></pre></td></tr></table></figure></p>
<blockquote>
<p>安装模块  </p>
</blockquote>
<p>进入newproject目录, 安装模块<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">cd</span> newsproject</div><div class="line"><span class="attribute">npm</span> install</div></pre></td></tr></table></figure></p>
<blockquote>
<p>启动项目  </p>
</blockquote>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">npm</span> start</div></pre></td></tr></table></figure>
<p>在浏览器访问<a href="http://127.0.0.1:3000/" target="_blank" rel="external">http://127.0.0.1:3000/</a> 测试出现下面图视表示nodejs安装成功，并可以正常部署项目<br><img src="https://volc1605.github.io/images/Hexo之NexT主题搭建博客详细过程/result.png" alt="测试"><br>可输入以下命令查看版本号<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">node</span> -v</div><div class="line"><span class="attribute">npm</span> -v</div></pre></td></tr></table></figure></p>
<h2 id="1-2-git安装"><a href="#1-2-git安装" class="headerlink" title="1.2.git安装"></a>1.2.git安装</h2><p>官网下载地址：<a href="https://git-scm.com/downloads/" target="_blank" rel="external">https://git-scm.com/downloads/</a> 这个就不多说了</p>
<h1 id="2-安装Hexo"><a href="#2-安装Hexo" class="headerlink" title="2.安装Hexo"></a>2.安装Hexo</h1><p>git安装成功后在桌面右击选择git bash here, 命令窗口<br><img src="https://volc1605.github.io/images/Hexo之NexT主题搭建博客详细过程/desktop.gif" alt="desktop"></p>
<blockquote>
<p>安装hexo  </p>
</blockquote>
<p>执行命令</p>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">npm</span> -g hexo-cli  # g代表全局,npm默认为当前项目安装</div></pre></td></tr></table></figure>
<p>在D盘新建blog文件夹，这个文件夹就是博客的根目录，打开blog空白处右击选择git bash here执行以下命令。首先对blog文件夹进行hexo初始化<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">hexo</span> init</div></pre></td></tr></table></figure></p>
<p>会生成一些文件</p>
<blockquote>
<p>安装依赖包</p>
</blockquote>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">npm</span> install</div></pre></td></tr></table></figure>
<p>可能会遇到的错误<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">npm</span> ERR! registry error parsing json # 错误</div></pre></td></tr></table></figure></p>
<p>可能需要设置npm代理,执行命令<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">npm</span> config set registry http://registry.cnpmjs.org</div></pre></td></tr></table></figure></p>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">hexo</span>:command not found</div></pre></td></tr></table></figure>
<p>删除刚刚安装的C:\Users\Administrator\AppData\Roaming\npm目录，重新执行命令npm install -g hexo安装hexo</p>
<blockquote>
<p>生成静态资源</p>
</blockquote>
<p>生成public文件夹(浏览器访问资源)<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">hexo</span> g</div></pre></td></tr></table></figure></p>
<blockquote>
<p>启动服务</p>
</blockquote>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">hexo</span> s</div></pre></td></tr></table></figure>
<p>在浏览器访问：<a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a> 便可查看hexo默认的主题<br><img src="https://volc1605.github.io/images/Hexo之NexT主题搭建博客详细过程/h.png" alt="hexo"></p>
<blockquote>
<p>clone NexT主题</p>
</blockquote>
<p>在blog根目录执行命令<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">git</span> clone https://github.com/iissnan/hexo-theme-next themes/next</div></pre></td></tr></table></figure></p>
<p>clone完成后打开blog下的themes文件夹就可以看到有两个主题，一个是默认的，一个是刚刚clone的NexT主题<br>站点配置文件D:\blog\_config.yml<br>主题配置文件D:\blog\themes\next\_config.yml<br>在站点配置文件_config.yml中进行搜索key为’theme’，如果没有theme就添加key为theme，其值为next<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># Extensions</div><div class="line">## Plugins: https://hexo.io/plugins/</div><div class="line">## Themes: https://hexo.io/themes/</div><div class="line"># theme: landscape</div><div class="line"># 设置主题为next</div><div class="line">theme: next</div></pre></td></tr></table></figure></p>
<p>需要注意的是冒号后面有一个空格<br>在blog目录中右击选择git bash here 分别执行清除静态资源，生成静态资源，启动服务命令<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">hexo</span> clean</div><div class="line"><span class="attribute">hexo</span> g</div><div class="line"><span class="attribute">hexo</span> s</div></pre></td></tr></table></figure></p>
<p>在浏览器中访问<a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a> 便可看到效果</p>
<p>打开主题配置文件_config.yml找到Schemes，如下所示有三种方案可选，只需将#去掉就可以了，可以都尝试一下，选择喜欢的风格，修改之后不用重启服务直接刷新浏览器就能看到效果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># 切换样式</div><div class="line"># Schemes</div><div class="line">#scheme: Muse</div><div class="line">#scheme: Mist</div><div class="line">scheme: Pisces</div></pre></td></tr></table></figure></p>
<p>到此本地资源基本上完成了，下面贴出站点配置_config.yml和主题配置_config.yml里面注释了信息<strong>仅供</strong>参考</p>
<h2 id="2-1站点配置文件-config-yml"><a href="#2-1站点配置文件-config-yml" class="headerlink" title="2.1站点配置文件_config.yml"></a>2.1站点配置文件_config.yml</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div></pre></td><td class="code"><pre><div class="line"># Hexo Configuration</div><div class="line">## Docs: https://hexo.io/docs/configuration.html</div><div class="line">## Source: https://github.com/hexojs/hexo/</div><div class="line"></div><div class="line"># Site</div><div class="line">title: Blog  # 首页title名称</div><div class="line">subtitle: Volc&apos;s Blog  </div><div class="line">description: volc #作者简介</div><div class="line">author: VOLC # 作者名称</div><div class="line">language: zh-Hans # 修改语言环境为简体汉字</div><div class="line">timezone:</div><div class="line"></div><div class="line"># URL</div><div class="line">## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;</div><div class="line">url: https://volc1605.github.io/</div><div class="line">root: /</div><div class="line">permalink: :year/:month/:day/:title/</div><div class="line">permalink_defaults:</div><div class="line"></div><div class="line"># Directory</div><div class="line">source_dir: source</div><div class="line">public_dir: public</div><div class="line">tag_dir: tags</div><div class="line">archive_dir: archives</div><div class="line">category_dir: categories</div><div class="line">code_dir: downloads/code</div><div class="line">i18n_dir: :lang</div><div class="line">skip_render:</div><div class="line"></div><div class="line"># Writing</div><div class="line">new_post_name: :title.md # File name of new posts</div><div class="line">default_layout: post</div><div class="line">titlecase: false # Transform title into titlecase</div><div class="line">external_link: true # Open external links in new tab</div><div class="line">filename_case: 0</div><div class="line">render_drafts: false</div><div class="line">post_asset_folder: false</div><div class="line">relative_link: false</div><div class="line">future: true</div><div class="line">highlight:</div><div class="line">  enable: true</div><div class="line">  line_number: true</div><div class="line">  auto_detect: false</div><div class="line">  tab_replace:</div><div class="line"></div><div class="line"># Category &amp; Tag</div><div class="line">default_category: uncategorized</div><div class="line">category_map:</div><div class="line">  编程: programming</div><div class="line">  生活: life</div><div class="line">  其他: other</div><div class="line">tag_map:</div><div class="line"></div><div class="line"># Date / Time format</div><div class="line">## Hexo uses Moment.js to parse and display date</div><div class="line">## You can customize the date format as defined in</div><div class="line">## http://momentjs.com/docs/#/displaying/format/</div><div class="line">date_format: YYYY-MM-DD</div><div class="line">time_format: HH:mm:ss</div><div class="line"></div><div class="line"># Pagination</div><div class="line">## Set per_page to 0 to disable pagination</div><div class="line">per_page: 10</div><div class="line">pagination_dir: page</div><div class="line"></div><div class="line"># Extensions</div><div class="line">## Plugins: https://hexo.io/plugins/</div><div class="line">## Themes: https://hexo.io/themes/</div><div class="line">#theme: landscape</div><div class="line"># 设置主题为next</div><div class="line">theme: next</div><div class="line"></div><div class="line"># Deployment</div><div class="line">## Docs: https://hexo.io/docs/deployment.html</div><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repository: git@github.com:volc1605/volc1605.github.io.git</div><div class="line">  branch: master</div><div class="line"></div><div class="line"># 设置头像</div><div class="line">avatar: /images/0.png</div><div class="line"></div><div class="line"># Social links</div><div class="line">social:</div><div class="line">  GitHub: https://github.com/volc1605</div><div class="line">  Twitter: https://twitter.com/volcliu</div><div class="line">  微博: http://weibo.com/2297464654/profile?topnav=1&amp;wvr=6&amp;is_all=1</div><div class="line">  知乎: https://www.zhihu.com/people/volc</div><div class="line"></div><div class="line"># hexo sitemap网站地图</div><div class="line">sitemap:</div><div class="line">  path: sitemap.xml</div><div class="line">baidusitemap:</div><div class="line">  path: baidusitemap.xml</div><div class="line"></div><div class="line">search:</div><div class="line">  path: search.xml</div><div class="line">  field: post</div><div class="line"># 百度站点统计</div><div class="line">baidu_analytics: 87980c**************99ec5e26fb5</div><div class="line"># google统计</div><div class="line">google_analytics: 85*****1</div></pre></td></tr></table></figure>
<h2 id="3-2-主题配置文件-config-yml"><a href="#3-2-主题配置文件-config-yml" class="headerlink" title="3.2.主题配置文件_config.yml"></a>3.2.主题配置文件_config.yml</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div><div class="line">370</div><div class="line">371</div><div class="line">372</div><div class="line">373</div><div class="line">374</div><div class="line">375</div><div class="line">376</div><div class="line">377</div><div class="line">378</div><div class="line">379</div><div class="line">380</div><div class="line">381</div><div class="line">382</div><div class="line">383</div><div class="line">384</div><div class="line">385</div><div class="line">386</div><div class="line">387</div><div class="line">388</div><div class="line">389</div><div class="line">390</div><div class="line">391</div><div class="line">392</div><div class="line">393</div><div class="line">394</div><div class="line">395</div><div class="line">396</div><div class="line">397</div><div class="line">398</div><div class="line">399</div><div class="line">400</div><div class="line">401</div><div class="line">402</div><div class="line">403</div><div class="line">404</div><div class="line">405</div><div class="line">406</div><div class="line">407</div><div class="line">408</div><div class="line">409</div></pre></td><td class="code"><pre><div class="line"># ---------------------------------------------------------------</div><div class="line"># Site Information Settings</div><div class="line"># ---------------------------------------------------------------</div><div class="line"></div><div class="line"># Put your favicon.ico into `hexo-site/source/` directory.</div><div class="line">favicon: /favicon.ico</div><div class="line"></div><div class="line"># Set default keywords (Use a comma to separate)</div><div class="line">keywords: &quot;Hexo, NexT&quot;</div><div class="line"></div><div class="line"># Set rss to false to disable feed link.</div><div class="line"># Leave rss as empty to use site&apos;s feed link.</div><div class="line"># Set rss to specific value if you have burned your feed already.</div><div class="line">rss:</div><div class="line"></div><div class="line"># Specify the date when the site was setup</div><div class="line">#since: 2015</div><div class="line"></div><div class="line"># Canonical, set a canonical link tag in your hexo, you could use it for your SEO of blog.</div><div class="line"># See: https://support.google.com/webmasters/answer/139066</div><div class="line"># Tips: Before you open this tag, remeber set up your URL in hexo _config.yml ( ex. url: http://yourdomain.com )</div><div class="line">canonical: true</div><div class="line"></div><div class="line"></div><div class="line"># ---------------------------------------------------------------</div><div class="line"># Menu Settings</div><div class="line"># ---------------------------------------------------------------</div><div class="line"></div><div class="line"># When running the site in a subdirectory (e.g. domain.tld/blog), remove the leading slash (/archives -&gt; archives)</div><div class="line">menu:</div><div class="line">  home: /</div><div class="line">  categories: /categories</div><div class="line">  archives: /archives</div><div class="line">  tags: /tags</div><div class="line">  message: /message</div><div class="line">  # search: /search</div><div class="line">  about: /about</div><div class="line">  #commonweal: /404.html</div><div class="line"></div><div class="line"></div><div class="line"># Enable/Disable menu icons.</div><div class="line"># Icon Mapping:</div><div class="line">#   Map a menu item to a specific FontAwesome icon name.</div><div class="line">#   Key is the name of menu item and value is the name of FontAwsome icon. Key is case-senstive.</div><div class="line">#   When an question mask icon presenting up means that the item has no mapping icon.</div><div class="line">menu_icons:</div><div class="line">  enable: true</div><div class="line">  #KeyMapsToMenuItemKey: NameOfTheIconFromFontAwesome</div><div class="line">  home: home</div><div class="line">  categories: th</div><div class="line">  tags: tags</div><div class="line">  archives: archive</div><div class="line">  commonweal: heartbeat</div><div class="line">  message: external-link</div><div class="line">  # search: search</div><div class="line">  about: user</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"># ---------------------------------------------------------------</div><div class="line"># Scheme Settings</div><div class="line"># ---------------------------------------------------------------</div><div class="line"></div><div class="line"># 切换样式</div><div class="line"># Schemes</div><div class="line">#scheme: Muse</div><div class="line">scheme: Mist</div><div class="line">#scheme: Pisces</div><div class="line"></div><div class="line"></div><div class="line"># ---------------------------------------------------------------</div><div class="line"># Font Settings</div><div class="line"># - Find fonts on Google Fonts (https://www.google.com/fonts)</div><div class="line"># - All fonts set here will have the following styles:</div><div class="line">#     light, light italic, normal, normal intalic, bold, bold italic</div><div class="line"># - Be aware that setting too much fonts will cause site running slowly</div><div class="line"># - Introduce in 5.0.1</div><div class="line"># ---------------------------------------------------------------</div><div class="line">font:</div><div class="line">  enable: true</div><div class="line"></div><div class="line">  # Uri of fonts host. E.g. //fonts.googleapis.com (Default)</div><div class="line">  host:</div><div class="line"></div><div class="line">  # Global font settings used on &lt;body&gt; element.</div><div class="line">  global:</div><div class="line">    # external: true will load this font family from host.</div><div class="line">    external: true</div><div class="line">    family: Lato</div><div class="line"></div><div class="line">  # Font settings for Headlines (h1, h2, h3, h4, h5, h6)</div><div class="line">  # Fallback to `global` font settings.</div><div class="line">  headings:</div><div class="line">    external: true</div><div class="line">    family:</div><div class="line"></div><div class="line">  # Font settings for posts</div><div class="line">  # Fallback to `global` font settings.</div><div class="line">  posts:</div><div class="line">    external: true</div><div class="line">    family:</div><div class="line"></div><div class="line">  # Font settings for Logo</div><div class="line">  # Fallback to `global` font settings.</div><div class="line">  # The `size` option use `px` as unit</div><div class="line">  logo:</div><div class="line">    external: true</div><div class="line">    family:</div><div class="line">    size: 33</div><div class="line"></div><div class="line">  # Font settings for &lt;code&gt; and code blocks.</div><div class="line">  codes:</div><div class="line">    external: true</div><div class="line">    family:</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"># ---------------------------------------------------------------</div><div class="line"># Sidebar Settings</div><div class="line"># ---------------------------------------------------------------</div><div class="line"></div><div class="line"></div><div class="line"># Social Links</div><div class="line"># Key is the link label showing to end users.</div><div class="line"># Value is the target link (E.g. GitHub: https://github.com/iissnan)</div><div class="line">#social:</div><div class="line">  #LinkLabel: Link</div><div class="line"></div><div class="line"></div><div class="line"># Social Links Icons</div><div class="line"># Icon Mapping:</div><div class="line">#   Map a menu item to a specific FontAwesome icon name.</div><div class="line">#   Key is the name of the item and value is the name of FontAwsome icon. Key is case-senstive.</div><div class="line">#   When an globe mask icon presenting up means that the item has no mapping icon.</div><div class="line">social_icons:</div><div class="line">  enable: true</div><div class="line">  # Icon Mappings.</div><div class="line">  # KeyMapsToSocalItemKey: NameOfTheIconFromFontAwesome</div><div class="line">  GitHub: github</div><div class="line">  Twitter: twitter</div><div class="line">  微博: weibo</div><div class="line"></div><div class="line"></div><div class="line"># Sidebar Avatar</div><div class="line"># in theme directory(source/images): /images/avatar.jpg</div><div class="line"># in site  directory(source/uploads): /uploads/avatar.jpg</div><div class="line">#avatar:</div><div class="line"></div><div class="line"></div><div class="line"># Table Of Contents in the Sidebar</div><div class="line">toc:</div><div class="line">  enable: true</div><div class="line"></div><div class="line">  # Automatically add list number to toc.</div><div class="line">  number: true</div><div class="line"></div><div class="line"></div><div class="line"># Creative Commons 4.0 International License.</div><div class="line"># http://creativecommons.org/</div><div class="line"># Available: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero</div><div class="line">#creative_commons: by-nc-sa</div><div class="line">#creative_commons:</div><div class="line"></div><div class="line"></div><div class="line">sidebar:</div><div class="line">  # Sidebar Position, available value: left | right</div><div class="line">  position: left</div><div class="line">  #position: right</div><div class="line"></div><div class="line">  # Sidebar Display, available value:</div><div class="line">  #  - post    expand on posts automatically. Default.</div><div class="line">  #  - always  expand for all pages automatically</div><div class="line">  #  - hide    expand only when click on the sidebar toggle icon.</div><div class="line">  #  - remove  Totally remove sidebar including sidebar toggler.</div><div class="line">  display: post</div><div class="line">  #display: always</div><div class="line">  #display: hide</div><div class="line">  #display: remove</div><div class="line"></div><div class="line"></div><div class="line"># Blogrolls</div><div class="line">links_title: 友情链接</div><div class="line">links_layout: inline</div><div class="line">links_icon: link  # 设置图标</div><div class="line">links:</div><div class="line">  一素人: http://yisu.ren/index.php/</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"># ---------------------------------------------------------------</div><div class="line"># Misc Theme Settings</div><div class="line"># ---------------------------------------------------------------</div><div class="line"></div><div class="line"># Custom Logo.</div><div class="line"># !!Only available for Default Scheme currently.</div><div class="line"># Options:</div><div class="line">#   enabled: [true/false] - Replace with specific image</div><div class="line">#   image: url-of-image   - Images&apos;s url</div><div class="line">custom_logo:</div><div class="line">  enabled: false</div><div class="line">  image:</div><div class="line"></div><div class="line"></div><div class="line"># Code Highlight theme</div><div class="line"># Available value:</div><div class="line">#    normal | night | night eighties | night blue | night bright</div><div class="line"># https://github.com/chriskempson/tomorrow-theme</div><div class="line">highlight_theme: night eighties</div><div class="line"></div><div class="line"></div><div class="line"># Automatically scroll page to section which is under &lt;!-- more --&gt; mark.</div><div class="line">scroll_to_more: true</div><div class="line"></div><div class="line"></div><div class="line"># Automatically Excerpt. Not recommand.</div><div class="line"># Please use &lt;!-- more --&gt; in the post to control excerpt accurately.</div><div class="line">auto_excerpt:</div><div class="line">  enable: true  # 开启文章阅全文</div><div class="line">  length: 2000   # 显示长度</div><div class="line"></div><div class="line"></div><div class="line"># Wechat Subscriber</div><div class="line">#wechat_subscriber:</div><div class="line">  #enabled: true</div><div class="line">  #qcode: /path/to/your/wechatqcode ex. /uploads/wechat-qcode.jpg</div><div class="line">  #description: ex. subscribe to my blog by scanning my public wechat account</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"># ---------------------------------------------------------------</div><div class="line"># Third Party Services Settings</div><div class="line"># ---------------------------------------------------------------</div><div class="line"></div><div class="line"># MathJax Support</div><div class="line">mathjax:</div><div class="line">  enable: false</div><div class="line">  cdn: //cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML</div><div class="line"></div><div class="line"></div><div class="line"># Swiftype Search API Key</div><div class="line">#swiftype_key:</div><div class="line"></div><div class="line"># Baidu Analytics ID</div><div class="line">#baidu_analytics:</div><div class="line">baidu_tongji: true</div><div class="line"></div><div class="line"># Duoshuo ShortName</div><div class="line">duoshuo_shortname: *******  # 开启多说评论功能</div><div class="line"></div><div class="line"># Disqus</div><div class="line">#disqus_shortname:</div><div class="line"></div><div class="line"># Baidu Share</div><div class="line"># Available value:</div><div class="line">#    button | slide</div><div class="line">#baidushare: true #</div><div class="line">##  type: button</div><div class="line"></div><div class="line"># Share</div><div class="line">#jiathis:</div><div class="line">#add_this_id:</div><div class="line"></div><div class="line"># Share</div><div class="line">duoshuo_share: true  # 开启多说的文章分享功能</div><div class="line"></div><div class="line"># Google Webmaster tools verification setting</div><div class="line"># See: https://www.google.com/webmasters/</div><div class="line">#google_site_verification:</div><div class="line"></div><div class="line"></div><div class="line"># Google Analytics</div><div class="line">#google_analytics:</div><div class="line"></div><div class="line"># CNZZ count</div><div class="line">#cnzz_siteid:</div><div class="line"></div><div class="line"></div><div class="line"># Make duoshuo show UA</div><div class="line"># user_id must NOT be null when admin_enable is true!</div><div class="line"># you can visit http://dev.duoshuo.com get duoshuo user id.</div><div class="line">duoshuo_info:</div><div class="line">  ua_enable: true</div><div class="line">  admin_enable: false</div><div class="line">  user_id: 0</div><div class="line">  #admin_nickname: Author</div><div class="line"></div><div class="line"></div><div class="line"># Facebook SDK Support.</div><div class="line"># https://github.com/iissnan/hexo-theme-next/pull/410</div><div class="line">facebook_sdk:</div><div class="line">  enable: false</div><div class="line">  app_id:       #&lt;app_id&gt;</div><div class="line">  fb_admin:     #&lt;user_id&gt;</div><div class="line">  like_button:  #true</div><div class="line">  webmaster:    #true</div><div class="line"></div><div class="line"># Facebook comments plugin</div><div class="line"># This plugin depends on Facebook SDK.</div><div class="line"># If facebook_sdk.enable is false, Facebook comments plugin is unavailable.</div><div class="line">facebook_comments_plugin:</div><div class="line">  enable: false</div><div class="line">  num_of_posts: 10  # min posts num is 1</div><div class="line">  width: 100%       # default width is 550px</div><div class="line">  scheme: light     # default scheme is light (light or dark)</div><div class="line"></div><div class="line"></div><div class="line"># Show number of visitors to each article.</div><div class="line"># You can visit https://leancloud.cn get AppID and AppKey.</div><div class="line">leancloud_visitors:</div><div class="line">  enable: true</div><div class="line">  app_id: uSB1*************************Hsz</div><div class="line">  app_key: 98i************************aI5</div><div class="line"></div><div class="line"># Show PV/UV of the website/page with busuanzi.</div><div class="line"># Get more information on http://ibruce.info/2015/04/04/busuanzi/</div><div class="line">busuanzi_count:</div><div class="line">  # count values only if the other configs are false</div><div class="line">  enable: false</div><div class="line">  # custom uv span for the whole site</div><div class="line">  site_uv: true</div><div class="line">  site_uv_header: &lt;i class=&quot;fa fa-user&quot;&gt;&lt;/i&gt;</div><div class="line">  site_uv_footer:</div><div class="line">  # custom pv span for the whole site</div><div class="line">  site_pv: true</div><div class="line">  site_pv_header: &lt;i class=&quot;fa fa-eye&quot;&gt;&lt;/i&gt;</div><div class="line">  site_pv_footer:</div><div class="line">  # custom pv span for one page only</div><div class="line">  page_pv: true</div><div class="line">  page_pv_header: &lt;i class=&quot;fa fa-file-o&quot;&gt;&lt;/i&gt;</div><div class="line">  page_pv_footer:</div><div class="line"></div><div class="line"># Tencent analytics ID</div><div class="line"># tencent_analytics:</div><div class="line"></div><div class="line"># Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEO</div><div class="line">baidu_push: false</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">#! ---------------------------------------------------------------</div><div class="line">#! DO NOT EDIT THE FOLLOWING SETTINGS</div><div class="line">#! UNLESS YOU KNOW WHAT YOU ARE DOING</div><div class="line">#! ---------------------------------------------------------------</div><div class="line"></div><div class="line"># Motion</div><div class="line">use_motion: true</div><div class="line"></div><div class="line"># Fancybox</div><div class="line">fancybox: true</div><div class="line"></div><div class="line"></div><div class="line"># Script Vendors.</div><div class="line"># Set a CDN address for the vendor you want to customize.</div><div class="line"># For example</div><div class="line">#    jquery: https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js</div><div class="line"># Be aware that you should use the same version as internal ones to avoid potential problems.</div><div class="line">vendors:</div><div class="line">  # Internal path prefix. Please do not edit it.</div><div class="line">  _internal: vendors</div><div class="line"></div><div class="line">  # Internal version: 2.1.3</div><div class="line">  jquery:</div><div class="line"></div><div class="line">  # Internal version: 2.1.5</div><div class="line">  # http://fancyapps.com/fancybox/</div><div class="line">  fancybox:</div><div class="line">  fancybox_css:</div><div class="line"></div><div class="line">  # Internal version: 1.0.6</div><div class="line">  # https://github.com/ftlabs/fastclick</div><div class="line">  fastclick:</div><div class="line"></div><div class="line">  # Internal version: 1.9.7</div><div class="line">  # https://github.com/tuupola/jquery_lazyload</div><div class="line">  lazyload:</div><div class="line"></div><div class="line">  # Internal version: 1.2.1</div><div class="line">  # http://VelocityJS.org</div><div class="line">  velocity:</div><div class="line"></div><div class="line">  # Internal version: 1.2.1</div><div class="line">  # http://VelocityJS.org</div><div class="line">  velocity_ui:</div><div class="line"></div><div class="line">  # Internal version: 0.7.9</div><div class="line">  # https://faisalman.github.io/ua-parser-js/</div><div class="line">  ua_parser:</div><div class="line"></div><div class="line">  # Internal version: 4.4.0</div><div class="line">  # http://fontawesome.io/</div><div class="line">  fontawesome:</div><div class="line"></div><div class="line"></div><div class="line"># Assets</div><div class="line">css: css</div><div class="line">js: js</div><div class="line">images: images</div><div class="line"></div><div class="line"># Theme version</div><div class="line">version: 5.0.1</div><div class="line"></div><div class="line"># Donate 文章末尾显示打赏按钮</div><div class="line">reward_comment: 如果文章对您有用请随意打赏，谢谢支持！</div><div class="line">wechatpay: /images/w.png</div><div class="line">alipay: /images/z.jpg</div></pre></td></tr></table></figure>
<h1 id="3-菜单栏"><a href="#3-菜单栏" class="headerlink" title="3.菜单栏"></a>3.菜单栏</h1><h2 id="3-1-菜单栏为中文简体字"><a href="#3-1-菜单栏为中文简体字" class="headerlink" title="3.1.菜单栏为中文简体字"></a>3.1.菜单栏为中文简体字</h2><p>主题配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">language: zh-Hans</div></pre></td></tr></table></figure></p>
<p>这样就引用了themes\next\languages\zh-Hans.yml文件，打开这个文件就可以看每个key对应的都是中文字体</p>
<h2 id="3-2标签和分类"><a href="#3-2标签和分类" class="headerlink" title="3.2标签和分类"></a>3.2标签和分类</h2><p>在主题配置文件中找到menu，如果想隐藏菜单栏中的某个选项只要在前面加上 # 即可<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">menu:</div><div class="line">  home: /</div><div class="line">  categories: /categories # 分类</div><div class="line">  archives: /archives     # 归档</div><div class="line">  tags: /tags             # 标签</div><div class="line">  message: /message       # 留言</div><div class="line">  about: /about           # 关于</div><div class="line">  # commonweal: /404.html # 公益</div></pre></td></tr></table></figure></p>
<p>我们将categories 和tags 设为显示<br>再找到menu_icons, 这里是每一个菜单选项前面对应的小图标<br><img src="https://volc1605.github.io/images/Hexo之NexT主题搭建博客详细过程/ioc.png" alt="ioc"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">menu_icons:</div><div class="line">  enable: true</div><div class="line">  #KeyMapsToMenuItemKey: NameOfTheIconFromFontAwesome</div><div class="line">  home: home</div><div class="line">  categories: th</div><div class="line">  tags: tags</div><div class="line">  archives: archive</div><div class="line">  commonweal: heartbeat</div><div class="line">  message: external-link</div><div class="line">  about: user</div></pre></td></tr></table></figure>
<p>我们将categories 和tags 设为显示<br>在blog文件夹中进行git bash here 执行以下命令生成categories 和 tags的页面<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo n page &quot;categories&quot;</div><div class="line">hexo n page &quot;tags&quot;</div></pre></td></tr></table></figure></p>
<p>会生成source\categories 和 source\tags 两个文件夹，里面都有index.md文件.修改内容为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: categories</div><div class="line">type: categories</div><div class="line">---</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: tags</div><div class="line">type: tags</div><div class="line">---</div></pre></td></tr></table></figure>
<p>再使用命令生成博文文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo n &quot;name&quot;    # name 文章名称</div></pre></td></tr></table></figure></p>
<p>生成文章时，在对应的name.md中可以这样添加标签和分类<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: Hexo之NexT主题搭建博客详细过程</div><div class="line">date: 2016-10-03 15:39:31</div><div class="line">update: 2016-10-04 06:19:11</div><div class="line">categories: hexo             # 分类</div><div class="line">tags: [nodejs, hexo, NexT]   # [标签1, 标签2..., 标签n]</div><div class="line">---</div></pre></td></tr></table></figure></p>
<h2 id="3-3-新增留言功能"><a href="#3-3-新增留言功能" class="headerlink" title="3.3.新增留言功能"></a>3.3.新增留言功能</h2><p>主题配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">menu:</div><div class="line">  home: /</div><div class="line">  categories: /categories</div><div class="line">  archives: /archives</div><div class="line">  tags: /tags</div><div class="line">  message: /message       # 新增 message</div><div class="line">  about: /about</div><div class="line">  #commonweal: /404.html</div></pre></td></tr></table></figure></p>
<p>配置图标<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">menu_icons:</div><div class="line">  enable: true</div><div class="line">  home: home</div><div class="line">  categories: th</div><div class="line">  tags: tags</div><div class="line">  archives: archive</div><div class="line">  commonweal: heartbeat</div><div class="line">  message: external-link  # 新增 message</div><div class="line">  about: user</div></pre></td></tr></table></figure></p>
<p>配置对应的中文名称，在themes\next\languages\zh-Hans.yml文件中修改如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">menu:</div><div class="line">  home: 首页</div><div class="line">  archives: 归档</div><div class="line">  categories: 分类</div><div class="line">  tags: 标签</div><div class="line">  about: 关于</div><div class="line">  search: 搜索</div><div class="line">  message: 留言            # 新增 留言</div><div class="line">  commonweal: 公益404</div><div class="line">  udpate: 更新</div></pre></td></tr></table></figure></p>
<p>然后执行如下命令<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">hexo</span> n page <span class="string">"message"</span></div></pre></td></tr></table></figure></p>
<p>重新清除，生成和启动便可看到效果，只不过留言功能什么也没有</p>
<h3 id="3-3-1-引入多说评论功能"><a href="#3-3-1-引入多说评论功能" class="headerlink" title="3.3.1.引入多说评论功能"></a>3.3.1.引入多说评论功能</h3><p>进入官网<a href="http://duoshuo.com/" target="_blank" rel="external">http://duoshuo.com/</a> 进行登录，建议不要使用微信进行登录，容易出现Scope 参数错误或没有 Scope 权限的问题。登录完成在首页进入后台管理，在设置里面包含：域名：zhangsan.duoshuo.com<br>在主题配置文件中<br>修改如下, duoshuo_shortname的值就是域名中的zhangsan<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">duoshuo_shortname: zhangsan  # 开启多说评论功能</div><div class="line"># Share</div><div class="line">duoshuo_share: true          # 开启多说的文章分享功能</div></pre></td></tr></table></figure></p>
<p>留言功能已完成<br>去掉分类和其他的选项的留言功能，只需修改index.md<br>在source\categories\index.md 中修改如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: categories</div><div class="line">type: categories</div><div class="line">comments: false       # 去掉评论功能</div><div class="line">date: 2016-10-01 21:07:35</div><div class="line">---</div></pre></td></tr></table></figure></p>
<p>添加留言邮件提醒功能请参阅：<a href="http://www.tuicool.com/articles/iEN7riZ" target="_blank" rel="external">http://www.tuicool.com/articles/iEN7riZ</a></p>
<h1 id="4-修改头像"><a href="#4-修改头像" class="headerlink" title="4.修改头像"></a>4.修改头像</h1><p>设置菜单栏头像<br>    把头像0.jpg图片放在themes\next\source\images中<br>    在站点的_config.yml，修改字段 avatar<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># 设置头像</div><div class="line">avatar: /images/0.jpg</div></pre></td></tr></table></figure></p>
<p>可以指定网址图片url</p>
<h1 id="5-侧边栏社交链接"><a href="#5-侧边栏社交链接" class="headerlink" title="5.侧边栏社交链接"></a>5.侧边栏社交链接</h1><p>侧栏社交链接的修改包含两个部分，第一是链接，第二是链接图标。 两者配置均在 主题配置文件 中。</p>
<blockquote>
<p>链接放置在 social 字段下，一行一个链接。其键值格式是 显示文本: 链接地址</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># Social links</div><div class="line">social:</div><div class="line">  GitHub: https://github.com/your-user-name</div><div class="line">  Twitter: https://twitter.com/your-user-name</div><div class="line">  微博: http://weibo.com/your-user-name</div><div class="line">  豆瓣: http://douban.com/people/your-user-name</div><div class="line">  知乎: http://www.zhihu.com/people/your-user-name</div><div class="line">  # 等等</div></pre></td></tr></table></figure>
<p>效果图<br><img src="https://volc1605.github.io/images/Hexo之NexT主题搭建博客详细过程/lin.png" alt="lin"></p>
<blockquote>
<p>设定链接的图标，对应的字段是 social_icons。其键值格式是 匹配键: Font Awesome 图标名称， 匹配键 与上一步所配置的链接的 显示文本 相同（大小写严格匹配），图标名称 是 Font Awesome 图标的名字（不必带 fa- 前缀）。 enable 选项用于控制是否显示图标，你可以设置成 false 来去掉图标。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"># Social Icons</div><div class="line">social_icons:</div><div class="line">  enable: true</div><div class="line">  # Icon Mappings</div><div class="line">  GitHub: github</div><div class="line">  Twitter: twitter</div><div class="line">  微博: weibo</div></pre></td></tr></table></figure>
<h1 id="6-友情链接"><a href="#6-友情链接" class="headerlink" title="6.友情链接"></a>6.友情链接</h1><blockquote>
<p>编辑 主题配置文件 添加：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># Blogrolls</div><div class="line">links_title: 友情链接</div><div class="line">links_layout: inline</div><div class="line">links_icon: link  # 设置图标</div><div class="line">links:</div><div class="line">  一素人: http://yisu.ren/index.php/</div></pre></td></tr></table></figure>
<p><img src="https://volc1605.github.io/images/Hexo之NexT主题搭建博客详细过程/yl.png" alt="yl"></p>
<h1 id="7-文章配置"><a href="#7-文章配置" class="headerlink" title="7.文章配置"></a>7.文章配置</h1><h2 id="7-1-开启阅读全文"><a href="#7-1-开启阅读全文" class="headerlink" title="7.1.开启阅读全文"></a>7.1.开启阅读全文</h2><blockquote>
<p>方式一：在文章中进行截断(推荐使用)<br>以下给出文章md文件片段内容</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">在浏览器访问：http://localhost:4000/ 便可查看hexo默认的主题</div><div class="line">![hexo](https://volc1605.github.io/images/Hexo之NexT主题搭建博客详细过程/h.png)</div><div class="line">&lt;!-- more --&gt;    # 直接在文章的md文件中添加&lt;!-- more --&gt;标注</div><div class="line">&gt;clone NexT主题</div><div class="line"></div><div class="line">在blog根目录执行命令</div></pre></td></tr></table></figure>
<blockquote>
<p>方式二：修改主题配置文件</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">auto_excerpt:</div><div class="line">  enable: true  # 开启文章阅全文</div><div class="line">  length: 2000   # 显示长度</div></pre></td></tr></table></figure>
<h2 id="7-2-新增阅读量"><a href="#7-2-新增阅读量" class="headerlink" title="7.2.新增阅读量"></a>7.2.新增阅读量</h2><p>为每一篇文章统计阅读量  </p>
<blockquote>
<p>使用leancloud进行文章变更统计，进入官网<a href="https://leancloud.cn/" target="_blank" rel="external">https://leancloud.cn/</a> 注册</p>
</blockquote>
<p>打开LeanCloud官网，进入注册页面注册。完成邮箱激活后，点击头像，进入控制台页面</p>
<blockquote>
<p>创建新应用</p>
</blockquote>
<p>点击应用创建新应用，应用名称随便起</p>
<blockquote>
<p>创建Class文件</p>
</blockquote>
<p>进入到应用后点击存储，在左侧点击设置，选择”创建Class”，名称必须为Counter</p>
<blockquote>
<p>修改主题配置文件</p>
</blockquote>
<p>主题配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># 文章阅读量</div><div class="line">leancloud_visitors:</div><div class="line">  enable: true</div><div class="line">  app_id: **你的app_id**</div><div class="line">  app_key: **你的app_key**</div></pre></td></tr></table></figure></p>
<p>其中，app_id和app_key在你所创建的应用的设置-&gt;应用Key中  </p>
<blockquote>
<p>添加lean-analytics.swig文件</p>
</blockquote>
<p>在主题的 themes\next\layout\_scripts\third-party路径下查看是否有lean-analytics.swig 文件，如果没有新建一个 lean-analytics.swig 文件，并向里面添加以下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div></pre></td><td class="code"><pre><div class="line">&#123;% if theme.leancloud_visitors.enable %&#125;</div><div class="line"></div><div class="line">  &#123;# custom analytics part create by xiamo #&#125;</div><div class="line">  &lt;script src=&quot;https://cdn1.lncld.net/static/js/av-core-mini-0.6.1.js&quot;&gt;&lt;/script&gt;</div><div class="line">  &lt;script&gt;AV.initialize(&quot;&#123;&#123;theme.leancloud_visitors.app_id&#125;&#125;&quot;, &quot;&#123;&#123;theme.leancloud_visitors.app_key&#125;&#125;&quot;);&lt;/script&gt;</div><div class="line">  &lt;script&gt;</div><div class="line">    function showTime(Counter) &#123;</div><div class="line">      var query = new AV.Query(Counter);</div><div class="line">      var entries = [];</div><div class="line">      var $visitors = $(&quot;.leancloud_visitors&quot;);</div><div class="line"></div><div class="line">      $visitors.each(function () &#123;</div><div class="line">        entries.push( $(this).attr(&quot;id&quot;).trim() );</div><div class="line">      &#125;);</div><div class="line"></div><div class="line">      query.containedIn(&apos;url&apos;, entries);</div><div class="line">      query.find()</div><div class="line">        .done(function (results) &#123;</div><div class="line">          var COUNT_CONTAINER_REF = &apos;.leancloud-visitors-count&apos;;</div><div class="line"></div><div class="line">          if (results.length === 0) &#123;</div><div class="line">            $visitors.find(COUNT_CONTAINER_REF).text(0);</div><div class="line">            return;</div><div class="line">          &#125;</div><div class="line"></div><div class="line">          for (var i = 0; i &lt; results.length; i++) &#123;</div><div class="line">            var item = results[i];</div><div class="line">            var url = item.get(&apos;url&apos;);</div><div class="line">            var time = item.get(&apos;time&apos;);</div><div class="line">            var element = document.getElementById(url);</div><div class="line"></div><div class="line">            $(element).find(COUNT_CONTAINER_REF).text(time);</div><div class="line">          &#125;</div><div class="line">          for(var i = 0; i &lt; entries.length; i++) &#123;</div><div class="line">            var url = entries[i];</div><div class="line">            var element = document.getElementById(url);</div><div class="line">            var countSpan = $(element).find(COUNT_CONTAINER_REF);</div><div class="line">            if( countSpan.text() == &apos;&apos;) &#123;</div><div class="line">              countSpan.text(0);</div><div class="line">            &#125;</div><div class="line">          &#125;</div><div class="line">        &#125;)</div><div class="line">        .fail(function (object, error) &#123;</div><div class="line">          console.log(&quot;Error: &quot; + error.code + &quot; &quot; + error.message);</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    function addCount(Counter) &#123;</div><div class="line">      var $visitors = $(&quot;.leancloud_visitors&quot;);</div><div class="line">      var url = $visitors.attr(&apos;id&apos;).trim();</div><div class="line">      var title = $visitors.attr(&apos;data-flag-title&apos;).trim();</div><div class="line">      var query = new AV.Query(Counter);</div><div class="line"></div><div class="line">      query.equalTo(&quot;url&quot;, url);</div><div class="line">      query.find(&#123;</div><div class="line">        success: function(results) &#123;</div><div class="line">          if (results.length &gt; 0) &#123;</div><div class="line">            var counter = results[0];</div><div class="line">            counter.fetchWhenSave(true);</div><div class="line">            counter.increment(&quot;time&quot;);</div><div class="line">            counter.save(null, &#123;</div><div class="line">              success: function(counter) &#123;</div><div class="line">                var $element = $(document.getElementById(url));</div><div class="line">                $element.find(&apos;.leancloud-visitors-count&apos;).text(counter.get(&apos;time&apos;));</div><div class="line">              &#125;,</div><div class="line">              error: function(counter, error) &#123;</div><div class="line">                console.log(&apos;Failed to save Visitor num, with error message: &apos; + error.message);</div><div class="line">              &#125;</div><div class="line">            &#125;);</div><div class="line">          &#125; else &#123;</div><div class="line">            var newcounter = new Counter();</div><div class="line">            /* Set ACL */</div><div class="line">            var acl = new AV.ACL();</div><div class="line">            acl.setPublicReadAccess(true);</div><div class="line">            acl.setPublicWriteAccess(true);</div><div class="line">            newcounter.setACL(acl);</div><div class="line">            /* End Set ACL */</div><div class="line">            newcounter.set(&quot;title&quot;, title);</div><div class="line">            newcounter.set(&quot;url&quot;, url);</div><div class="line">            newcounter.set(&quot;time&quot;, 1);</div><div class="line">            newcounter.save(null, &#123;</div><div class="line">              success: function(newcounter) &#123;</div><div class="line">                var $element = $(document.getElementById(url));</div><div class="line">                $element.find(&apos;.leancloud-visitors-count&apos;).text(newcounter.get(&apos;time&apos;));</div><div class="line">              &#125;,</div><div class="line">              error: function(newcounter, error) &#123;</div><div class="line">                console.log(&apos;Failed to create&apos;);</div><div class="line">              &#125;</div><div class="line">            &#125;);</div><div class="line">          &#125;</div><div class="line">        &#125;,</div><div class="line">        error: function(error) &#123;</div><div class="line">          console.log(&apos;Error:&apos; + error.code + &quot; &quot; + error.message);</div><div class="line">        &#125;</div><div class="line">      &#125;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    $(function() &#123;</div><div class="line">      var Counter = AV.Object.extend(&quot;Counter&quot;);</div><div class="line">      if ($(&apos;.leancloud_visitors&apos;).length == 1) &#123;</div><div class="line">        addCount(Counter);</div><div class="line">      &#125; else if ($(&apos;.post-title-link&apos;).length &gt; 1) &#123;</div><div class="line">        showTime(Counter);</div><div class="line">      &#125;</div><div class="line">    &#125;);</div><div class="line">  &lt;/script&gt;</div><div class="line"></div><div class="line">&#123;% endif %&#125;</div></pre></td></tr></table></figure></p>
<blockquote>
<p>修改 themes\next\layout_macro\post.swig 文件</p>
</blockquote>
<p>找到：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&#123;% if not is_index and theme.facebook_sdk.enable and theme.facebook_sdk.like_button %&#125;</div><div class="line">  &amp;nbsp; | &amp;nbsp;</div><div class="line">  &lt;div class=&quot;fb-like&quot; data-layout=&quot;button_count&quot; data-share=&quot;true&quot;&gt;&lt;/div&gt;</div><div class="line">&#123;% endif %&#125;</div></pre></td></tr></table></figure></p>
<p>在其后追加以下代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&#123;# LeanCould PageView #&#125;</div><div class="line">  &#123;% if theme.leancloud_visitors.enable %&#125;</div><div class="line">     &lt;span id=&quot;&#123;&#123; url_for(post.path) &#125;&#125;&quot; class=&quot;leancloud_visitors&quot; data-flag-title=&quot;&#123;&#123; post.title &#125;&#125;&quot;&gt;</div><div class="line">       &amp;nbsp; | &amp;nbsp;</div><div class="line">       &lt;span class=&quot;post-meta-item-icon&quot;&gt;</div><div class="line">         &lt;i class=&quot;fa fa-eye&quot;&gt;&lt;/i&gt;</div><div class="line">       &lt;/span&gt;</div><div class="line">       &lt;span class=&quot;post-meta-item-text&quot;&gt;&#123;&#123;__(&apos;post.visitors&apos;)&#125;&#125; &lt;/span&gt;</div><div class="line">       &lt;span class=&quot;leancloud-visitors-count&quot;&gt;&lt;/span&gt;</div><div class="line">  &#123;% endif %&#125;</div><div class="line">&#123;% endif %&#125;</div></pre></td></tr></table></figure></p>
<blockquote>
<p>配置themes\next\layout\_layout.swig文件</p>
</blockquote>
<p>在最后div标签中查找是否引用了_scripts/third-party/lean-analytics.swig文件，如果没有增加以下代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&#123;% include &apos;_scripts/third-party/comments.swig&apos; %&#125;</div><div class="line">  &#123;% include &apos;_scripts/third-party/tinysou.swig&apos; %&#125;</div><div class="line">  &#123;% include &apos;_scripts/third-party/localsearch.swig&apos; %&#125;</div><div class="line">  &#123;% include &apos;_scripts/third-party/mathjax.swig&apos; %&#125;</div><div class="line">  &#123;% include &apos;_scripts/third-party/lean-analytics.swig&apos; %&#125;  # 新增</div><div class="line">  &#123;% include &apos;_scripts/baidu-push.swig&apos; %&#125;</div><div class="line">&lt;/body&gt;</div></pre></td></tr></table></figure></p>
<blockquote>
<p>修改语言配置文件 themes\next\languages\zh-Hans.yml post字段</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">post:</div><div class="line">  sticky: 置顶</div><div class="line">  posted: 发表于</div><div class="line">  updated: 最近</div><div class="line">  update: 更新于</div><div class="line">  in: 分类于</div><div class="line">  visitors: 阅读量</div><div class="line">  read_more: 阅读全文</div><div class="line">  untitled: 未命名</div><div class="line">  toc_empty: 此文章未包含目录</div></pre></td></tr></table></figure>
<p>其他语言与之类似，将visitors设置成你希望翻译的字段。最后，重新清除并生成你的网站即可。</p>
<blockquote>
<p>Web安全性</p>
</blockquote>
<p>为了保证应用的统计计数功能仅应用于自己的博客系统，你可以在应用-&gt;设置-&gt;安全中心的Web安全域名中加入自己的博客域名，以保证数据的调用安全。直接加上首页地址即可,保存三分之后生效，这时在本地方访问便不会统计。<br>参阅：<a href="http://www.jeyzhang.com/hexo-next-add-post-views.html" target="_blank" rel="external">http://www.jeyzhang.com/hexo-next-add-post-views.html</a></p>
<h2 id="7-3-文章最近访问时间"><a href="#7-3-文章最近访问时间" class="headerlink" title="7.3.文章最近访问时间"></a>7.3.文章最近访问时间</h2><blockquote>
<p>改themes\next\layout_scripts\third-party\lean-analytics.swig文件</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div></pre></td><td class="code"><pre><div class="line">&#123;% if theme.leancloud_visitors.enable %&#125;</div><div class="line">  &#123;# custom analytics part create by xiamo #&#125;</div><div class="line">  &lt;script src=&quot;https://cdn1.lncld.net/static/js/av-core-mini-0.6.1.js&quot;&gt;&lt;/script&gt;</div><div class="line">  &lt;script&gt;AV.initialize(&quot;&#123;&#123;theme.leancloud_visitors.app_id&#125;&#125;&quot;, &quot;&#123;&#123;theme.leancloud_visitors.app_key&#125;&#125;&quot;);&lt;/script&gt;</div><div class="line">  &lt;script&gt;</div><div class="line">    function showTime(Counter) &#123;</div><div class="line">      var query = new AV.Query(Counter);</div><div class="line">      var entries = [];</div><div class="line">      var $visitors = $(&quot;.leancloud_visitors&quot;);</div><div class="line">      $visitors.each(function () &#123;</div><div class="line">        entries.push( $(this).attr(&quot;id&quot;).trim() );</div><div class="line">      &#125;);</div><div class="line">      query.containedIn(&apos;url&apos;, entries);</div><div class="line">      query.find()</div><div class="line">        .done(function (results) &#123;</div><div class="line">          var COUNT_CONTAINER_REF = &apos;.leancloud-visitors-count&apos;;</div><div class="line">          var UPDATED_AT = &apos;.leancloud-updated-at&apos;; // 新增代码 定义最近变更时间的class</div><div class="line">          if (results.length === 0) &#123;</div><div class="line">            $visitors.find(COUNT_CONTAINER_REF).text(0);</div><div class="line">            return;</div><div class="line">          &#125;</div><div class="line">          // console.log(results);</div><div class="line">          for(var i = 0; i &lt; results.length; i++) &#123;</div><div class="line">            var item = results[i];</div><div class="line">            var url = item.get(&apos;url&apos;);</div><div class="line">            var time = item.get(&apos;time&apos;);   // 获取阅读量</div><div class="line">            var updatedT = item.updatedAt; // 新增代码 获取最近浏览时间 需要注意的是updateT是对象并不是字符串</div><div class="line">            var element = document.getElementById(url);</div><div class="line">            $(element).find(COUNT_CONTAINER_REF).text(time);</div><div class="line">            // 新增代码 转换日期格式</div><div class="line">            if(updatedT != null &amp;&amp; updatedT != &apos;&apos;) &#123;</div><div class="line">              var a = [updatedT.getFullYear(), updatedT.getMonth() + 1, updatedT.getDate(), updatedT.getHours(), updatedT.getMinutes(), updatedT.getSeconds()];</div><div class="line">              for(var j = 0,len = a.length; j &lt; len; j++) &#123;</div><div class="line">                  if(a[j] &lt; 10) &#123;</div><div class="line">                      a[j] = &apos;0&apos; + a[j];</div><div class="line">                  &#125;</div><div class="line">              &#125;</div><div class="line">              var updateTime = a[0] + &apos;-&apos; + a[1] + &apos;-&apos; + a[2] + &apos; &apos; + a[3] + &apos;:&apos; + a[4] + &apos;:&apos; + a[5];</div><div class="line">              $(element).find(UPDATED_AT).text(updateTime);</div><div class="line">            &#125;</div><div class="line">          &#125;</div><div class="line">          for(var i = 0; i &lt; entries.length; i++) &#123;</div><div class="line">            var url = entries[i];</div><div class="line">            var element = document.getElementById(url);</div><div class="line">            var countSpan = $(element).find(COUNT_CONTAINER_REF);</div><div class="line">            var updatedAtContent = $(element).find(UPDATED_AT);</div><div class="line">            if( countSpan.text() == &apos;&apos;) &#123;</div><div class="line">              countSpan.text(0);</div><div class="line">            &#125;</div><div class="line">            // 新增代码 如果首页的文章没有更新侧默认为无人浏览</div><div class="line">            if(updatedAtContent.text() == &apos;&apos;) &#123;</div><div class="line">              updatedAtContent.text(&apos;无人浏览&apos;);</div><div class="line">            &#125;</div><div class="line">            // 结束</div><div class="line">          &#125;</div><div class="line">        &#125;)</div><div class="line">        .fail(function (object, error) &#123;</div><div class="line">          console.log(&quot;Error: &quot; + error.code + &quot; &quot; + error.message);</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line">    function addCount(Counter) &#123;</div><div class="line">      var $visitors = $(&quot;.leancloud_visitors&quot;);</div><div class="line">      var url = $visitors.attr(&apos;id&apos;).trim();</div><div class="line">      var title = $visitors.attr(&apos;data-flag-title&apos;).trim();</div><div class="line">      var query = new AV.Query(Counter);</div><div class="line">      query.equalTo(&quot;url&quot;, url);</div><div class="line">      query.find(&#123;</div><div class="line">        success: function(results) &#123;</div><div class="line">          if (results.length &gt; 0) &#123;</div><div class="line">            var counter = results[0];</div><div class="line">            counter.fetchWhenSave(true);</div><div class="line">            counter.increment(&quot;time&quot;);</div><div class="line">            counter.save(null, &#123;</div><div class="line">              success: function(counter) &#123;</div><div class="line">                var $element = $(document.getElementById(url));</div><div class="line">                $element.find(&apos;.leancloud-visitors-count&apos;).text(counter.get(&apos;time&apos;));</div><div class="line">              &#125;,</div><div class="line">              error: function(counter, error) &#123;</div><div class="line">                console.log(&apos;Failed to save Visitor num, with error message: &apos; + error.message);</div><div class="line">              &#125;</div><div class="line">            &#125;);</div><div class="line">          &#125; else &#123;</div><div class="line">            var newcounter = new Counter();</div><div class="line">            /* Set ACL */</div><div class="line">            var acl = new AV.ACL();</div><div class="line">            acl.setPublicReadAccess(true);</div><div class="line">            acl.setPublicWriteAccess(true);</div><div class="line">            newcounter.setACL(acl);</div><div class="line">            /* End Set ACL */</div><div class="line">            newcounter.set(&quot;title&quot;, title);</div><div class="line">            newcounter.set(&quot;url&quot;, url);</div><div class="line">            newcounter.set(&quot;time&quot;, 1);</div><div class="line">            newcounter.save(null, &#123;</div><div class="line">              success: function(newcounter) &#123;</div><div class="line">                var $element = $(document.getElementById(url));</div><div class="line">                $element.find(&apos;.leancloud-visitors-count&apos;).text(newcounter.get(&apos;time&apos;));</div><div class="line">              &#125;,</div><div class="line">              error: function(newcounter, error) &#123;</div><div class="line">                console.log(&apos;Failed to create&apos;);</div><div class="line">              &#125;</div><div class="line">            &#125;);</div><div class="line">          &#125;</div><div class="line">        &#125;,</div><div class="line">        error: function(error) &#123;</div><div class="line">          console.log(&apos;Error:&apos; + error.code + &quot; &quot; + error.message);</div><div class="line">        &#125;</div><div class="line">      &#125;);</div><div class="line">    &#125;</div><div class="line">    $(function() &#123;</div><div class="line">      var Counter = AV.Object.extend(&quot;Counter&quot;);</div><div class="line">      if ($(&apos;.leancloud_visitors&apos;).length == 1) &#123;</div><div class="line">        addCount(Counter);</div><div class="line">      &#125; else if ($(&apos;.post-title-link&apos;).length &gt; 1) &#123;</div><div class="line">        showTime(Counter);</div><div class="line">      &#125;</div><div class="line">    &#125;);</div><div class="line">  &lt;/script&gt;</div><div class="line">&#123;% endif %&#125;</div></pre></td></tr></table></figure>
<h2 id="7-4-添加文章更新时间"><a href="#7-4-添加文章更新时间" class="headerlink" title="7.4.添加文章更新时间"></a>7.4.添加文章更新时间</h2><blockquote>
<p>scaffolds\post.md 文件</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: &#123;&#123; title &#125;&#125;</div><div class="line">date: &#123;&#123; date &#125;&#125;</div><div class="line">categories:</div><div class="line">tags:</div><div class="line">update: &#123;&#123; date &#125;&#125;  # 新增更新时间</div><div class="line">---</div></pre></td></tr></table></figure>
<blockquote>
<p>themes\next\layout_macro\post.swig 文件</p>
</blockquote>
<p>找到以下代码的位置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;span class=&quot;post-time&quot;&gt;</div><div class="line">  &lt;span class=&quot;post-meta-item-icon&quot;&gt;</div><div class="line">    &lt;i class=&quot;fa fa-calendar-o&quot;&gt;&lt;/i&gt;</div><div class="line">  &lt;/span&gt;</div><div class="line">  &lt;span class=&quot;post-meta-item-text&quot;&gt;&#123;&#123; __(&apos;post.posted&apos;) &#125;&#125;&lt;/span&gt;</div><div class="line">  &lt;time itemprop=&quot;dateCreated&quot; datetime=&quot;&#123;&#123; moment(post.date).format() &#125;&#125;&quot; content=&quot;&#123;&#123; date(post.date, config.date_format) &#125;&#125;&quot;&gt;</div><div class="line">    &#123;&#123; date(post.date, config.date_format) &#125;&#125;</div><div class="line">  &lt;/time&gt;</div><div class="line">&lt;/span&gt;</div></pre></td></tr></table></figure>
<p>进行追加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&lt;span class=&quot;post-time&quot;&gt;</div><div class="line">  &lt;span class=&quot;post-meta-item-icon&quot;&gt;</div><div class="line">    &lt;i class=&quot;fa fa-calendar-o&quot;&gt;&lt;/i&gt;</div><div class="line">  &lt;/span&gt;</div><div class="line">  &lt;span class=&quot;post-meta-item-text&quot;&gt;&#123;&#123; __(&apos;post.posted&apos;) &#125;&#125;&lt;/span&gt;</div><div class="line">  &lt;time itemprop=&quot;dateCreated&quot; datetime=&quot;&#123;&#123; moment(post.date).format() &#125;&#125;&quot; content=&quot;&#123;&#123; date(post.date, config.date_format) &#125;&#125;&quot;&gt;</div><div class="line">    &#123;&#123; date(post.date, config.date_format) &#125;&#125;</div><div class="line">  &lt;/time&gt;</div><div class="line">&lt;/span&gt;</div><div class="line">&#123;# 追加代码 #&#125;</div><div class="line">&lt;span&gt;</div><div class="line">    |</div><div class="line">  &lt;span&gt;&#123;&#123; __(&apos;post.update&apos;) &#125;&#125;&lt;/span&gt;</div><div class="line">  &lt;time&gt;</div><div class="line">    &#123;&#123; date(post.update, config.date_format) &#125;&#125;</div><div class="line">    &#123;&#123; date(post.update, config.time_format) &#125;&#125;</div><div class="line">  &lt;/time&gt;</div><div class="line">&lt;/span&gt;</div></pre></td></tr></table></figure></p>
<p>在每次新建文章时，默认更新时间就是发表时间，更新文章时需要手动修改udpate的值。例如source_posts\hexo之next主题.md</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: Hexo之NexT主题搭建博客详细过程</div><div class="line">date: 2016-10-03 15:39:31</div><div class="line">update: 2016-10-03 15:39:31      # 每次更新需手动修改成这样的格式时间</div><div class="line">categories: hexo</div><div class="line">tags: [nodejs, hexo]</div><div class="line">---</div></pre></td></tr></table></figure>
<blockquote>
<p>修改themes\next\languages\zh-Hans.yml</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">post:</div><div class="line">  sticky: 置顶</div><div class="line">  posted: 发表于</div><div class="line">  updated: 最近</div><div class="line">  update: 更新于     # 新增</div><div class="line">  in: 分类于</div><div class="line">  visitors: 阅读量</div><div class="line">  read_more: 阅读全文</div><div class="line">  untitled: 未命名</div><div class="line">  toc_empty: 此文章未包含目录</div></pre></td></tr></table></figure>
<h2 id="7-5-设置阅读全文时不显示最近访问时间"><a href="#7-5-设置阅读全文时不显示最近访问时间" class="headerlink" title="7.5.设置阅读全文时不显示最近访问时间"></a>7.5.设置阅读全文时不显示最近访问时间</h2><blockquote>
<p>修改themes\next\layout_macro\post.swig 文件</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&#123;# LeanCould PageView #&#125;</div><div class="line">  &#123;% if theme.leancloud_visitors.enable %&#125;</div><div class="line">     &lt;span id=&quot;&#123;&#123; url_for(post.path) &#125;&#125;&quot; class=&quot;leancloud_visitors&quot; data-flag-title=&quot;&#123;&#123; post.title &#125;&#125;&quot;&gt;</div><div class="line">       |</div><div class="line">       &lt;span class=&quot;post-meta-item-icon&quot;&gt;</div><div class="line">         &lt;i class=&quot;fa fa-eye&quot;&gt;&lt;/i&gt;</div><div class="line">       &lt;/span&gt;</div><div class="line">       &lt;span class=&quot;post-meta-item-text&quot;&gt;&#123;&#123;__(&apos;post.visitors&apos;)&#125;&#125; &lt;/span&gt;</div><div class="line">       &lt;span class=&quot;leancloud-visitors-count&quot;&gt;&lt;/span&gt;</div><div class="line">      &#123;% if not is_pv %&#125;    &#123;# 新增is_pv字段判断是否为首页 #&#125;</div><div class="line">        |</div><div class="line">        &lt;span class=&quot;post-meta-item-text&quot;&gt;&#123;&#123;__(&apos;post.updated&apos;)&#125;&#125; &lt;/span&gt;</div><div class="line">        &lt;span class=&quot;leancloud-updated-at&quot;&gt;&lt;/span&gt;</div><div class="line">        &lt;/span&gt;</div><div class="line">      &#123;% endif %&#125;           &#123;# if结束 #&#125;</div><div class="line">&#123;% endif %&#125;</div></pre></td></tr></table></figure>
<p>在文件开头修改传进的参数字段<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;% macro render(post, is_index, is_pv, post_extra_class) %&#125;   &#123;# 新增第三个字段is_pv #&#125;</div></pre></td></tr></table></figure></p>
<blockquote>
<p>修改themes/next/layout目录下的post.swig文件</p>
</blockquote>
<p>这个文件是文章的模板<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&#123;% block content %&#125;</div><div class="line">  &lt;div id=&quot;posts&quot; class=&quot;posts-expand&quot;&gt;</div><div class="line">  	#render方法第二个参数is_index为是否为首页</div><div class="line">  	#第三个参数is_pv为我们刚才设置的是否显示计数</div><div class="line">    &#123;&#123; post_template.render(page, false, true) &#125;&#125;</div><div class="line">    &lt;div class=&quot;post-spread&quot;&gt;</div><div class="line">      &#123;% if theme.jiathis %&#125;</div><div class="line">        &#123;% include &apos;_partials/share/jiathis.swig&apos; %&#125;</div><div class="line">      &#123;% elseif theme.duoshuo_shortname and theme.duoshuo_share %&#125;</div><div class="line">        &#123;% include &apos;_partials/share/duoshuo_share.swig&apos; %&#125;</div><div class="line">      &#123;% endif %&#125;</div><div class="line">    &lt;/div&gt;</div><div class="line">  &lt;/div&gt;</div><div class="line">&#123;% endblock %&#125;</div></pre></td></tr></table></figure></p>
<blockquote>
<p>修改themes/next/layout目录下的index.swig文件</p>
</blockquote>
<p>这个文件是首页的模板<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">找到以下代码，给render方法传入刚才第一步中设置的参数。</div><div class="line">&#123;% block content %&#125;</div><div class="line">  &lt;section id=&quot;posts&quot; class=&quot;posts-expand&quot;&gt;</div><div class="line">    &#123;% for post in page.posts %&#125;</div><div class="line">       #render方法第二个参数is_index为是否为首页</div><div class="line">       #第三个参数is_pv为我们刚才设置的是否显示计数</div><div class="line">      &#123;&#123; post_template.render(post, true, false) &#125;&#125;</div><div class="line">    &#123;% endfor %&#125;</div><div class="line">  &lt;/section&gt;</div><div class="line">  &#123;% include &apos;_partials/pagination.swig&apos; %&#125;</div><div class="line">&#123;% endblock %&#125;</div></pre></td></tr></table></figure></p>
<p>这样的效果是在首页显示最近阅读时间，阅读全文时文章标题不显示最近阅读时间。</p>
<h2 id="7-6-为文章增加分享"><a href="#7-6-为文章增加分享" class="headerlink" title="7.6.为文章增加分享"></a>7.6.为文章增加分享</h2><blockquote>
<p>使用多说分享</p>
</blockquote>
<p>多说评论在前面的使用留言功能已经介绍了，这里值修改主题配置文件即可<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># 多说热评文章</div><div class="line">duoshuo_hotartical: true # 开启多说热评文章</div></pre></td></tr></table></figure></p>
<h2 id="7-7-为文章增加打赏"><a href="#7-7-为文章增加打赏" class="headerlink" title="7.7.为文章增加打赏"></a>7.7.为文章增加打赏</h2><blockquote>
<p>修改主题配置文件, 收款二维码放在themes\next\source\images 目录下</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># Donate 文章末尾显示打赏按钮</div><div class="line">reward_comment: 如果文章对您有用请随意打赏，谢谢支持！</div><div class="line">wechatpay: /images/w.png</div><div class="line">alipay: /images/z.jpg</div></pre></td></tr></table></figure>
<h2 id="7-8-设置代码高亮主题"><a href="#7-8-设置代码高亮主题" class="headerlink" title="7.8.设置代码高亮主题"></a>7.8.设置代码高亮主题</h2><p>NexT 使用 Tomorrow Theme 作为代码高亮，共有5款主题供你选择。 NexT 默认使用的是 白色的 normal 主题，可选的值有 normal，night， night blue， night bright， night eighties：<br>在主题配置文件中修改<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># Code Highlight theme</div><div class="line"># Available value:</div><div class="line">#    normal | night | night eighties | night blue | night bright</div><div class="line"># https://github.com/chriskempson/tomorrow-theme</div><div class="line">highlight_theme: night eighties       # 修改即可</div></pre></td></tr></table></figure></p>
<h2 id="7-9-文章添加音乐链接"><a href="#7-9-文章添加音乐链接" class="headerlink" title="7.9.文章添加音乐链接"></a>7.9.文章添加音乐链接</h2><p>Hexo支持解析markdown语法，因此每篇博文都是以.md结尾的文件。而markdown又支持如表格、脚注、内嵌HTML等等，所以在.md文件中直接添加html代码！<br>网音乐云音乐，虾米音乐都可以生成内嵌音乐的html代码，复制粘贴到.md文件中即可<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;div&gt;</div><div class="line">	&lt;center&gt;</div><div class="line">		&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=330 height=86</div><div class="line">			src=&quot;https://music.163.com/outchain/player?type=2&amp;id=33856282&amp;auto=0&amp;height=66&quot;&gt;</div><div class="line">		&lt;/iframe&gt;</div><div class="line">	&lt;/center&gt;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure></p>
<h1 id="8-本地站内搜索"><a href="#8-本地站内搜索" class="headerlink" title="8.本地站内搜索"></a>8.本地站内搜索</h1><p>以前使用的Swiftype现在不能免费使用了，我这里就是用本地配置进行站内搜索</p>
<blockquote>
<p>安装 hexo-generator-search，在站点的根目录下执行以下命令:</p>
</blockquote>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">npm</span> install hexo-generator-search --save</div></pre></td></tr></table></figure>
<blockquote>
<p>编辑 站点配置文件，新增以下内容到任意位置：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">search:</div><div class="line">  path: search.xml</div><div class="line">  field: post</div></pre></td></tr></table></figure>
<h1 id="9-统计站点访次数和访问量"><a href="#9-统计站点访次数和访问量" class="headerlink" title="9.统计站点访次数和访问量"></a>9.统计站点访次数和访问量</h1><blockquote>
<p>修改themes/next/layout/_partials目录下的footer.swig</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">&lt;div class=&quot;theme-info&quot;&gt;</div><div class="line">  &#123;&#123; __(&apos;footer.theme&apos;) &#125;&#125; -</div><div class="line">  &lt;a class=&quot;theme-link&quot; href=&quot;https://github.com/iissnan/hexo-theme-next&quot;&gt;</div><div class="line">    NexT.&#123;&#123; theme.scheme &#125;&#125;</div><div class="line">  &lt;/a&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">&#123;# 新增代码 #&#125;</div><div class="line">&lt;script async src=&quot;https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</div><div class="line">&lt;div style=&quot;margin:-20px;position: absolute;right:265px;&quot;&gt;</div><div class="line">&lt;dl style=&quot;float:left&quot;&gt;</div><div class="line">  &lt;dt style=&quot;float:left&quot;&gt;</div><div class="line">    &lt;dd style=&quot;float:left;width:300px&quot;&gt;</div><div class="line">      &lt;span style=&quot;float:right&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&lt;/span&gt;</div><div class="line">      &lt;span style=&quot;float:right&quot;&gt;本站总访问量&lt;span&gt;&lt;span style=&quot;float:right&quot; id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt;</div><div class="line">    &lt;/dd&gt;</div><div class="line">  &lt;/dt&gt;</div><div class="line">  &lt;dt style=&quot;float:left;width:300px&quot;&gt;</div><div class="line">    &lt;dd&gt;</div><div class="line">      &lt;span style=&quot;float:left&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;</div><div class="line">      &lt;span style=&quot;float:left&quot;&gt;您是第&lt;/span&gt;</div><div class="line">      &lt;span style=&quot;float:left&quot; id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;</div><div class="line">      &lt;span style=&quot;float:left&quot;&gt;个小伙伴&lt;/span&gt;</div><div class="line">    &lt;/dd&gt;</div><div class="line">  &lt;/dt&gt;</div><div class="line">&lt;/dl&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">&#123;# 结束 #&#125;</div></pre></td></tr></table></figure>
<p>到此本地资源博客搭建已经完成，有些细微调节可根据浏览器控制台找到对应的模板进行调节，比如站点背景(可以指定动画图片，参考资源： <a href="http://michaelxiang.me/2015/11/30/hexo-next-optimize/" target="_blank" rel="external">http://michaelxiang.me/2015/11/30/hexo-next-optimize/</a> )，代码字体字体颜色(参考资源： <a href="http://gniba.com/2016/07/11/next-custom.html" target="_blank" rel="external">http://gniba.com/2016/07/11/next-custom.html</a> )，页面宽度等等</p>
<h1 id="10-博客项目托管到github"><a href="#10-博客项目托管到github" class="headerlink" title="10.博客项目托管到github"></a>10.博客项目托管到github</h1><blockquote>
<p>注册github账号</p>
</blockquote>
<p>网址：<a href="https://github.com/" target="_blank" rel="external">https://github.com/</a><br>点击 new repository<br><img src="https://volc1605.github.io/images/Hexo之NexT主题搭建博客详细过程/g.png" alt="xinjian"></p>
<blockquote>
<p>修改站点配置文件</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># Deployment</div><div class="line">## Docs: https://hexo.io/docs/deployment.html</div><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repository: git@github.com:volc1605/volc1605.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure>
<p>点击进入新建的项目，如图<br><img src="https://volc1605.github.io/images/Hexo之NexT主题搭建博客详细过程/d.png" alt="xj"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">repository： git@github.com:上图划线部分.git</div></pre></td></tr></table></figure></p>
<blockquote>
<p>配置sshkey</p>
</blockquote>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">ssh</span>-keygen -t rsa -C <span class="string">"注册git的邮箱"</span></div></pre></td></tr></table></figure>
<p>连续几个按回车，密码为空，然后在在C:\Users\Administrator.ssh下，得到两个文件id_rsa和id_rsa.pub<br>复制id_rsa.pub中的所有内容</p>
<blockquote>
<p>GitHub上添加SSH密钥</p>
</blockquote>
<p>打开<a href="https://github.com/settings/ssh" target="_blank" rel="external">https://github.com/settings/ssh</a> new SSH key 添加密钥，title随便写，key为刚刚复制的内容</p>
<blockquote>
<p>验证是否能否连接到github</p>
</blockquote>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh -T git@github.com</div></pre></td></tr></table></figure>
<p>如果提示<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">The</span> authenticity of host 'github.com (192.30.253.112)' can't be established.</div><div class="line"><span class="attribute">RSA</span> key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.</div><div class="line"><span class="attribute">Are</span> you sure you want to continue connecting (yes/no)? y</div><div class="line"><span class="attribute">Please</span> type 'yes' or 'no': yes</div></pre></td></tr></table></figure></p>
<p>或者提示覆盖原来的文件，选择yes回车，只要能看到，如下提示就能成功连接到github</p>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">Hi</span> zhangsan! You've successfully authenticated, but GitHub does not provide shell access.</div></pre></td></tr></table></figure>
<h1 id="11-百度-google收录你的站点"><a href="#11-百度-google收录你的站点" class="headerlink" title="11.百度/google收录你的站点"></a>11.百度/google收录你的站点</h1><blockquote>
<p>安装sitemap插件</p>
</blockquote>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">npm</span> install hexo-generator-sitemap --save        # google</div><div class="line"><span class="attribute">npm</span> install hexo-generator-baidu-sitemap --save  # 百度</div></pre></td></tr></table></figure>
<blockquote>
<p>在站点配置文件_config.yml中添加如下代码：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># 自动生成sitemap</div><div class="line">sitemap:</div><div class="line">path: sitemap.xml</div><div class="line">baidusitemap:</div><div class="line">path: baidusitemap.xml</div></pre></td></tr></table></figure>
<p>会在public目录下生成baidusitmap.xml 和 sitemap.xml两个文件  </p>
<blockquote>
<p>安装hexo-deployer-git插件</p>
</blockquote>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">npm</span> install hexo-deployer-git --save</div></pre></td></tr></table></figure>
<blockquote>
<p>部署到github</p>
</blockquote>
<p>在blog目录下执行命令<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">hexo</span> clean # 清除资源</div><div class="line"><span class="attribute">hexo</span> g     # 生成静态资源</div><div class="line"><span class="attribute">hexo</span> d     # 部署</div></pre></td></tr></table></figure></p>
<p>登录在github打开存放博客资源的仓库，就能看到部署的资源文件<br><img src="https://volc1605.github.io/images/Hexo之NexT主题搭建博客详细过程/git.png" alt=""></p>
<blockquote>
<p>分别向google,baidu提交站点地图sitemap.xml,baidusitmap.xml</p>
</blockquote>
<p>百度站长： <a href="http://zhanzhang.baidu.com/site/index" target="_blank" rel="external">http://zhanzhang.baidu.com/site/index</a><br>输入你想添加的网站：你的博客首页地址<br>下一步，下载html文件验证，在原来内容上添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">layout: false</div><div class="line">---</div></pre></td></tr></table></figure></p>
<p>例如<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">layout: false</div><div class="line">---</div><div class="line">HTYJLXSGJOnjlg</div></pre></td></tr></table></figure></p>
<p>目的是不让站点解析这个baidu_verify_lpmmZiuzEL.html文件，修改完成后放到blog/source目录下重新部署，然后点击完成验证。<br>google站长： <a href="https://www.google.com/webmasters/tools/home?hl=zh-CN" target="_blank" rel="external">https://www.google.com/webmasters/tools/home?hl=zh-CN</a><br>添加网站后，进行左侧抓取站点地图，添加/测试站点地图，填写sitemap.xml。sitemap.xml就在github存放博客仓库的根目录下<br>验证完成后大概过一天时间便可google到你的站点了。<br>而百度的话，就看造化了。</p>
<h1 id="12-关于github访问不到css、js文件"><a href="#12-关于github访问不到css、js文件" class="headerlink" title="12.关于github访问不到css、js文件"></a>12.关于github访问不到css、js文件</h1><p>浏览器控制可以看到问题所在访问不到vendors/source<br><img src="https://volc1605.github.io/images/Hexo之NexT主题搭建博客详细过程/vendors.png" alt="vendors"><br>问题原因不清楚，但通过一下方式可以解决问题<br>根据作者的提示 @iissnan ，首先修改source/vendors为source/lib，然后修改_config.yml， 将 _internal: vendors修改为_internal:lib 然后修改next底下所有引用source/vendors路径为source/lib。这些地方可以通过文件查找找出来。<br>主要集中在这几个文件中。  </p>
<ol>
<li>Hexo\themes\next.bowerrc   </li>
<li>Hexo\themes\next.gitignore   </li>
<li>Hexo\themes\next.javascript_ignore   </li>
<li>Hexo\themes\next\bower.json   </li>
</ol>
<h1 id="13-统计本站运行天数"><a href="#13-统计本站运行天数" class="headerlink" title="13.统计本站运行天数"></a>13.统计本站运行天数</h1><p>修改blog\themes\next\layout_partials\footer.swig文件，在后面追加以下代码<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">	<span class="keyword">var</span> birthDay = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">'09/1/2016'</span>);</div><div class="line">	<span class="keyword">var</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>();</div><div class="line">	<span class="keyword">var</span> duration = now.getTime() - birthDay.getTime();</div><div class="line">	<span class="keyword">var</span> total= <span class="built_in">Math</span>.floor(duration / (<span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span>));</div><div class="line">	<span class="built_in">document</span>.getElementById(<span class="string">'showDays'</span>).innerHTML=<span class="string">'本站已运行'</span> + total + <span class="string">'天'</span>;</div><div class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div></pre></td></tr></table></figure></p>
<p>在最后一个div中追加一下代码<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&amp;nbsp;<span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></div><div class="line">&lt;span id=<span class="string">"showDays"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></div></pre></td></tr></table></figure></p>
<blockquote>
<p>写博客推荐工具:<br><a href="https://www.zybuluo.com/mdeditor" target="_blank" rel="external">https://www.zybuluo.com/mdeditor</a><br>参考资料：<br>  为NexT主题添加文章阅读量统计功能:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://www.tuicool.com/articles/YB3EJnz" target="_blank" rel="external">http://www.tuicool.com/articles/YB3EJnz</a><br>git - 简易指南:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://www.bootcss.com/p/git-guide/" target="_blank" rel="external">http://www.bootcss.com/p/git-guide/</a><br>hexo之next主题优化整理:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://michaelxiang.me/2015/11/30/hexo-next-optimize/" target="_blank" rel="external">http://michaelxiang.me/2015/11/30/hexo-next-optimize/</a><br>自定义NexT.Pisces主题:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://gniba.com/2016/07/11/next-custom.html" target="_blank" rel="external">http://gniba.com/2016/07/11/next-custom.html</a><br>为Hexo博客的每一篇文章自动追加版权信息:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://kuangqi.me/tricks/append-a-copyright-info-after-every-post/" target="_blank" rel="external">http://kuangqi.me/tricks/append-a-copyright-info-after-every-post/</a><br>为Hexo博客添加版权说明和打赏功能:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://www.tuicool.com/articles/m6bIJfq" target="_blank" rel="external">http://www.tuicool.com/articles/m6bIJfq</a><br>[CSS] 给 HEXO 博客自定义背景图:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://blog.qiji.tech/archives/7854" target="_blank" rel="external">http://blog.qiji.tech/archives/7854</a><br>主题配置:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://theme-next.iissnan.com/theme-settings.html" target="_blank" rel="external">http://theme-next.iissnan.com/theme-settings.html</a><br>多说、RSS和sitemap插件:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://blog.csdn.net/willxue123/article/details/50994854" target="_blank" rel="external">http://blog.csdn.net/willxue123/article/details/50994854</a><br>在Github上面搭建Hexo博客（一）：部署到Github:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://www.cnblogs.com/cherishzy/p/5694658.html" target="_blank" rel="external">http://www.cnblogs.com/cherishzy/p/5694658.html</a><br>第三方服务集成:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://theme-next.iissnan.com/third-party-services.html#analytics-google" target="_blank" rel="external">http://theme-next.iissnan.com/third-party-services.html#analytics-google</a></p>
</blockquote>
]]></content>
    </entry>
    
  
  
</search>
